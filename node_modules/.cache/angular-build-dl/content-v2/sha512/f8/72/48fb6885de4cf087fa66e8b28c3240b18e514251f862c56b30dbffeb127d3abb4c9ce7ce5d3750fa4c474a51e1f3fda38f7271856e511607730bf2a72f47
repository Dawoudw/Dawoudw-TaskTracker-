{"version":3,"sources":["./src/app/Pages/group-chat/group-chat.page.html","./src/app/Pages/group-chat/group-chat-routing.module.ts","./src/app/Pages/group-chat/group-chat.module.ts","./src/app/Pages/group-chat/group-chat.page.scss","./src/app/Pages/group-chat/group-chat.page.ts"],"names":[],"mappings":"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","file":"group-chat-group-chat-module-es2015.js","sourcesContent":["export default \"<!-- <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n  <ion-refresher-content\\n    pullingIcon=\\\"arrow-down-outline\\\"\\n    pullingText=\\\"Pull to refresh\\\"\\n    refreshingSpinner=\\\"dots\\\"\\n    refreshingText=\\\"Refreshing...\\\">\\n  </ion-refresher-content>\\n</ion-refresher> -->\\n\\n<ion-header class=\\\"ion-no-margin\\\">\\n  <ion-toolbar>\\n    <ion-segment\\n      style=\\\"width: 100%\\\"\\n      color=\\\"dark\\\"\\n      (ionChange)=\\\"0\\\"\\n      #checkTeam\\n      value=\\\"chat\\\"\\n    >\\n      <ion-segment-button size=\\\"small\\\" value=\\\"chat\\\" layout=\\\"icon-start\\\">\\n        <ion-label\\n          [color]=\\\"checkTeam.value=='chat' ? 'secondary' : ''\\\"\\n          position=\\\"float\\\"\\n          >Chat</ion-label\\n        >\\n        <ion-icon\\n          [color]=\\\"checkTeam.value=='chat' ? 'secondary' : ''\\\"\\n          name=\\\"chatbox-ellipses-outline\\\"\\n        ></ion-icon>\\n      </ion-segment-button>\\n\\n      <ion-segment-button size=\\\"small\\\" value=\\\"group\\\" layout=\\\"icon-start\\\">\\n        <ion-label\\n          [color]=\\\"checkTeam.value=='group' ? 'secondary' : ''\\\"\\n          position=\\\"float\\\"\\n          >Chat Groups</ion-label\\n        >\\n        <ion-icon\\n          [color]=\\\"checkTeam.value=='group' ? 'secondary' : ''\\\"\\n          src=\\\"../assets/images/chat-group.svg\\\"\\n        ></ion-icon>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n  <ion-fab\\n    *ngIf=' checkTeam.value==\\\"group\\\" '\\n    vertical=\\\"top\\\"\\n    horizontal=\\\"end\\\"\\n    slot=\\\"fixed\\\"\\n  >\\n    <ion-fab-button\\n      routerLink=\\\"/tasktracker/start-chat\\\"\\n      size=\\\"small\\\"\\n      color=\\\"light\\\"\\n      class=\\\"ion-no-margin ion-no-padding\\\"\\n    >\\n      <ion-icon name=\\\"add\\\" color=\\\"primary\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n  <ion-grid *ngIf=' checkTeam.value==\\\"chat\\\" '>\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <div\\n          class=\\\"ion-no-margin ; no-padding\\\"\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n        >\\n          <ion-refresher\\n            #refTeamProgress\\n            id=\\\"refTeamProgress\\\"\\n            style=\\\"position: relative; z-index: 2; top: 0px\\\"\\n            slot=\\\"fixed\\\"\\n            (ionRefresh)=\\\"doRefresh($event)\\\"\\n          >\\n            <ion-refresher-content color=\\\"primary\\\" refreshingSpinner=\\\"crescent\\\">\\n            </ion-refresher-content>\\n          </ion-refresher>\\n        </div>\\n        <ion-list *ngFor=\\\"let item of listOfUsers;\\\" name=\\\"lstusers\\\">\\n          <ion-row style=\\\"justify-items: left\\\">\\n            <ion-col>\\n              <ion-item\\n                detail=\\\"false\\\"\\n                (click)=\\\"oneOnOneChat(item.payload.doc.data().email,item.payload.doc.data().userName)\\\"\\n              >\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                  <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\n                  <text-avatar\\n                    text=\\\"{{item.payload.doc.data().userName}}\\\"\\n                  ></text-avatar>\\n                </ion-avatar>\\n                <ion-label\\n                  color=\\\"secondary\\\"\\n                  position=\\\"stacked\\\"\\n                  class=\\\"ion-text-start ion-text-capitalize\\\"\\n                >\\n                  {{ item.payload.doc.data().userName }}\\n                  <ion-label class=\\\"ion-no-margin ion-no-padding ion-text-wrap\\\">\\n                    <ion-note position=\\\"stacked\\\">\\n                      <small> {{ item.payload.doc.data().email }}</small>\\n                    </ion-note></ion-label\\n                  >\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"auto\\\">\\n              <ion-icon\\n                (click)=\\\"oneOnOneChat(item.payload.doc.data().email,item.payload.doc.data().userName)\\\"\\n                color=\\\"primary\\\"\\n                name=\\\"chatbox-ellipses-outline\\\"\\n                style=\\\"\\n                  flex: left;\\n                  margin-top: 10px;\\n                  margin-left: 5px;\\n                  margin-right: 5px;\\n                  width: 20px;\\n                  height: 20px;\\n                \\\"\\n                class=\\\"ion-text-start\\\"\\n              ></ion-icon>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid *ngIf=' checkTeam.value==\\\"group\\\" '>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item-divider\\n          class=\\\"ion-no-margin ion-no-padding\\\"\\n          color=\\\"secondary\\\"\\n        >\\n          <ion-chip outline color=\\\"dark\\\">\\n            <ion-label color=\\\"dark\\\"> Your Chat Groups </ion-label>\\n          </ion-chip>\\n        </ion-item-divider>\\n\\n        <div\\n          class=\\\"ion-no-margin ion-no-padding\\\"\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n        >\\n          <ion-refresher\\n            #refTeamProgress2\\n            id=\\\"refTeamProgress\\\"\\n            style=\\\"position: relative; z-index: 2; top: 0px\\\"\\n            slot=\\\"fixed\\\"\\n            (ionRefresh)=\\\"doRefresh($event)\\\"\\n          >\\n            <ion-refresher-content color=\\\"primary\\\" refreshingSpinner=\\\"crescent\\\">\\n            </ion-refresher-content>\\n          </ion-refresher>\\n        </div>\\n        <ion-list>\\n          <ion-item\\n            button\\n            *ngFor=\\\"let item of listOfGroups2;\\\"\\n            (click)=\\\"GroupChat(item.payload.doc.data().id,item.payload.doc.data().title)\\\"\\n          >\\n            <ion-label class=\\\"ion-text-wrap\\\">\\n              <ion-text color=\\\"secondary\\\">\\n                <h3>{{ item.payload.doc.data().title }}</h3>\\n              </ion-text>\\n              <p>{{ item.payload.doc.data().users}} Users</p>\\n              <!-- <p>Group id: {{ item.payload.doc.data().id }}</p> -->\\n            </ion-label>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n    <!-- <ion-footer>\\n      <ion-toolbar color=\\\"primary\\\">\\n        <ion-button\\n          color=\\\"light\\\"\\n          fill=\\\"clear\\\"\\n          expand=\\\"full\\\"\\n          routerLink=\\\"/start-chat\\\"\\n          >Start new Group</ion-button\\n        >\\n      </ion-toolbar>\\n    </ion-footer> -->\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupChatPage } from './group-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupChatPageRoutingModule } from './group-chat-routing.module';\nimport{TextAvatarModule} from '../../directives/text-avatar.directive.module'\nimport { GroupChatPage } from './group-chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupChatPageRoutingModule,\n    TextAvatarModule,\n  ],\n  declarations: [GroupChatPage]\n})\nexport class GroupChatPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2dyb3VwLWNoYXQvZ3JvdXAtY2hhdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ChatService } from \"src/app/Services/chat.service\";\nimport { forkJoin, Observable, Subject } from \"rxjs\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { take, map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { NavController } from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-group-chat\",\n  templateUrl: \"./group-chat.page.html\",\n  styleUrls: [\"./group-chat.page.scss\"],\n})\nexport class GroupChatPage implements OnDestroy, OnInit {\n  constructor(\n    public chatService: ChatService,\n    public db: AngularFirestore,\n    // private router: Router,\n    private navCtrl: NavController\n  ) {}\n\n  listOfUsers = []; //this list can show all groups using function getAllGroups() from chat service\n  currentUserEmail = this.chatService.currentUser.email;\n  listOfGroups = this.chatService.listOfGroups;\n  listOfGroups2 = [];\n  currentFirebaseUserId = this.chatService\n    .currentUserIdFromFirebaseSetFromHomePage;\n  // currentFirebaseUserId = this.chatService.currentUserIdFromFireabase;\n  titleCheck = \"\";\n  groupId: any;\n  participant = \"\";\n  users = [];\n  private ngUnsubscribe = new Subject();\n\n  ngOnInit() {\n    //getting firebase userid if not found\n    if(this.currentFirebaseUserId == null || this.currentFirebaseUserId == '') {\n      console.log(\"firebase userid not found\");\n      let user = this.chatService.findUser(this.currentUserEmail);\n      //console.log(user);  //observable\n      user.subscribe((result) => {\n        // console.log(\"firebase user id retrieved =\"+result[0].id);\n        this.chatService.currentUserIdFromFirebaseSetFromHomePage = result[0].id;\n        this.currentFirebaseUserId = result[0].id;\n      });\n    }\n    setTimeout(() => {\n      console.log(\n        \"check firebase user id here =\" +\n          this.currentFirebaseUserId\n      );\n      //this gets a list of all users\n      this.getAllUsers();\n      //this gets a list of all groups created by this user (groups for group chat only)\n      this.getAllUserGroups();\n    }, 2000);\n\n  }\n\n\n  getAllUsers() {\n    this.listOfUsers = new Array();\n    this.chatService.getAllUsers().pipe(take(1)).subscribe((result) => {\n      // console.log(\"getting list of all users\");\n      result.forEach((r) => {\n        if (\n          r.payload.doc.data()[\"email\"] != this.chatService.currentUser.email\n        ) {\n          this.listOfUsers.push(r);\n        }\n      });\n    });\n  }\n  getAllUserGroups() {\n    try {\n     //get all groups for group chats\n      this.listOfGroups2 = new Array();\n      // console.log(\"listOfGroups2 =\");\n      // console.log(this.listOfGroups2);\n\n      this.listOfGroups2.forEach((item) =>{\n        // console.log(\"item\");\n        // console.log(item.payload.doc.data());\n      });\n      this.chatService.getAllGroups2().pipe(take(1)).subscribe((result) => {\n        result.forEach((r) => {\n          if (r.payload.doc.data()[\"type\"] == \"group\") {\n            // console.log(\"group id=\"+r.payload.doc.id);\n              // if(this.listOfGroups2.find(item =>item.payload.doc.data()['id'] == r.payload.doc.id)) {\n              //   console.log(\"found similar id =\"+r.payload.doc.id);\n              // } else {\n              //   console.log(\"not found...pushing...\");\n              //    this.listOfGroups2.push(r);\n              // }\n            this.listOfGroups2.push(r);\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n  }\n\n  //swipe down to refresh\n  loading: boolean;\n  async doRefresh(event) {\n    this.loading = true;\n    let errmessage = \"\";\n    await new Promise(() => {\n      console.log(\"Begin async operation\");\n      setTimeout(() => {\n        try {\n          this.getAllUsers();\n          this.getAllUserGroups();\n          console.log(\"Async operation has ended\");\n          event.target.complete();\n          this.loading = false;\n        } catch (err) {\n          this.loading = false;\n          console.log(err);\n        }\n      }, 2000);\n    }).catch((error) => console.log(error));\n  }\n  GroupChat(id, title) {\n    // console.log(\"group id passed =\"+id);\n    // console.log(\"current user's id in firebase =\"+this.currentFirebaseUserId);\n    let obs2 = this.chatService.findGroupById(id);\n    forkJoin(obs2).subscribe((res) => {\n      // console.log(\"res\");\n      // console.log(res);\n      for (let data of res) {\n        // console.log(\"data\");\n        // console.log(data.payload.id);\n        this.navCtrl.navigateRoot(`/chat/${data.payload.id}`);\n        //use following if passing 2 parameters\n        // this.router.navigateByUrl(`/chat/${data.payload.id}/${this.currentFirebaseUserId}`);\n      }\n      // for (let data of res) {\n      //   if (data.length > 0) {\n      //     console.log(\"found an existing group with this group id =\"+data[0].id);\n      //     this.groupId = data[0].id;\n      //     this.router.navigateByUrl(`/chat/${this.groupId}`);\n      //   }\n      // }\n    });\n  }\n\n  //---------one on one chat\n  oneOnOneChat(email1, userName2) {\n    //creating group name--------------------------------- stored in this.titleCheck (ordered alphabatically from both users' nickname)\n    let userName1 = this.chatService.currentUser.userName;\n    let x = userName1.localeCompare(userName2, undefined, {\n      numeric: true,\n      sensitivity: \"base\",\n    });\n    if (x == -1) {\n      // console.log(\"userName1 will come first\");\n      this.titleCheck = \"oOc_\" + userName1 + \"&\" + userName2;\n      console.log(\"this.titlecheck =\" + this.titleCheck);\n    } else {\n      // console.log(\"userName2 will come first\");\n      this.titleCheck = \"oOc_\" + userName2 + \"&\" + userName1;\n      console.log(\"this.titlecheck =\" + this.titleCheck);\n    }\n\n    let obs1 = this.findGroup(this.titleCheck);\n    forkJoin(obs1).subscribe((res) => {\n      for (let data of res) {\n        if (data.length > 0) {\n          console.log(\n            \"found an existing group with this group id =\" + data[0].id\n          );\n          this.groupId = data[0].id;\n          this.navCtrl.navigateRoot(`/chat/${this.groupId}`);\n        } else {\n          console.log(\"group not found--in create group section\"); //group not available--create group\n          setTimeout(() => {\n            this.addUser(email1);\n            console.log(this.users);\n            // this.readyToCreateOneOnOneGroup();\n            // this.groupId  is assigned with new group id in createGroup\n          }, 1000);\n          setTimeout(() => {\n            this.readyToCreateOneOnOneGroup();\n            // this.groupId  is assigned with new group id in createGroup()\n          }, 2000);\n        }\n      }\n    });\n  }\n\n  findGroup(title) {\n    let group = this.db\n      .collection(\"groupsTaskTracker\", (ref) => ref.where(\"title\", \"==\", title))\n      .valueChanges({ idField: \"id\" })\n      .pipe(take(1));\n    return group;\n  }\n\n  addUser(participant1) {\n    this.participant = participant1;\n    let obs = this.chatService.findUser(this.participant);\n    forkJoin(obs).subscribe((res) => {\n      for (let data of res) {\n        if (data.length > 0) {\n          if (this.users.indexOf(data[0]) > -1) {\n          } else {\n            this.users.push(data[0]);\n          }\n        }\n      }\n      this.participant = \"\";\n    });\n  }\n\n  readyToCreateOneOnOneGroup() {\n    this.createGroup(this.titleCheck, this.users).then((res) => {\n      console.log(\"group created\");\n      // this.router.navigateByUrl('/chats');\n      this.navCtrl.navigateRoot(`/chat/${this.groupId}`);\n    });\n    this.users = [];\n  }\n\n  createGroup(title, users) {\n    let current = {\n      email: this.chatService.currentUser.email,\n      id: this.chatService.currentUserIdFromFirebaseSetFromHomePage,\n      userName: this.chatService.currentUser.userName,\n    };\n    let allUsers = [current];\n    allUsers.push(...users);\n    return this.db\n      .collection(\"groupsTaskTracker\")\n      .add({\n        title: title,\n        type: \"OneOnOne\",\n        users: allUsers,\n      })\n      .then((res) => {\n        // console.log(\"new group's id =\"+res.id);\n        this.groupId = res.id;\n        let promises = [];\n        for (let usr of allUsers) {\n          let oneAdd = this.db\n            .collection(`usersTaskTracker/${usr.id}/groups`)\n            .add({\n              id: res.id,\n              type: \"OneOnOne\",\n            });\n          promises.push(oneAdd);\n        }\n        return Promise.all(promises);\n      });\n  }\n\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy() executed\");\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n"],"sourceRoot":"webpack:///"}