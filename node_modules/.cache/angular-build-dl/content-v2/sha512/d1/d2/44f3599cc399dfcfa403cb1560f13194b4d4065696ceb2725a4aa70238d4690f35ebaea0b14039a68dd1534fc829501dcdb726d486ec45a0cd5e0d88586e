{"version":3,"sources":["./src/app/Pages/team-progress/team-progress.page.html","./src/app/Pages/user-tasks/user-tasks.page.html","./src/app/Models/user-progress.ts","./src/app/Pages/team-progress/team-progress-routing.module.ts","./src/app/Pages/team-progress/team-progress.module.ts","./src/app/Pages/team-progress/team-progress.page.scss","./src/app/Pages/team-progress/team-progress.page.ts","./src/app/Pages/user-tasks/user-tasks.page.scss","./src/app/Pages/user-tasks/user-tasks.page.ts"],"names":[],"mappings":"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","file":"team-progress-team-progress-module-es2015.js","sourcesContent":["export default \"\\n<ion-header class=\\\"ion-no-margin\\\">\\n  <ion-toolbar>\\n    <ion-icon\\n      name=\\\"people-outline\\\"\\n      color=\\\"primary\\\"\\n      size=\\\"large\\\"\\n      slot=\\\"start\\\"\\n      style=\\\"\\n        width: 24px !important;\\n        height: 24px !important;\\n        margin-right: 5px;\\n        margin-left: 5px;\\n      \\\"\\n    ></ion-icon>\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>Team Progress</p></ion-label>\\n    <ion-buttons slot=\\\"end\\\">\\n      <!-- <ion-button [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', 'new']\\\"> -->\\n      <ion-button #btnRefresh id=\\\"btnRefresh\\\" (click)=\\\"doRefresh($event)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"sync-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid>\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <div\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n          *ngIf=\\\"isLoaded\\\"\\n        >\\n          <ion-spinner\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\n            name=\\\"crescent\\\"\\n          ></ion-spinner>\\n        </div>\\n\\n        <ion-list\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\n          [(ngModel)]=\\\"userProgress\\\"\\n          ngDefaultControl\\n          name=\\\"lstTaskProgress\\\"\\n        >\\n          <ion-row style=\\\"justify-items: left;\\\">\\n            <ion-col>\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\n                </ion-avatar>\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <b>{{ item.userName }}</b></ion-label\\n                  >\\n\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\n                  </ion-label>\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <ion-badge\\n                      style=\\\"margin: 0px;\\\"\\n                      [color]=\\\"\\n                        item.avgProgress > 99\\n                          ? 'success'\\n                          : item.avgProgress < 50\\n                          ? 'warning'\\n                          : 'primary'\\n                      \\\"\\n                    >\\n                      {{ item.avgProgress }}%\\n                    </ion-badge>\\n                  </ion-label>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"auto\\\">\\n              <ion-icon\\n                color=\\\"primary\\\"\\n                name=\\\"chatbox-ellipses-outline\\\"\\n                style=\\\"\\n                  flex: left;\\n                  margin-top: 10px;\\n                  margin-left: 5px;\\n                  margin-right: 5px;\\n                  width: 20px;\\n                  height: 20px;\\n                \\\"\\n                class=\\\"ion-text-start\\\"\\n              ></ion-icon>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-content>\\n  <ion-grid no-padding ion-no-margin>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-buttons slot=\\\"start\\\">\\n                <ion-back-button\\n                  text=\\\"\\\"\\n                  defaultHref=\\\"tasktracker/team-progress\\\"\\n                ></ion-back-button>\\n              </ion-buttons>\\n\\n              <ion-label slot=\\\"\\\" color=\\\"primary\\\">\\n                <b> {{user.userName}}</b>\\n              </ion-label>\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                <img src=\\\"../assets/images/avatar.svg\\\" />\\n              </ion-avatar>\\n            </ion-item>\\n          </ion-col> </ion-row\\n        ><ion-row>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"primary\\\">\\n              <ion-label> Tasks <b>({{userProgress.length}}) </b></ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"warning\\\">\\n              <ion-label>\\n                In-Progress <b>({{getTotalInProgress()}}) </b>\\n              </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"success\\\">\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-list>\\n          <ion-row\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\n            style=\\\"justify-items: left;\\\"\\n          >\\n            <ion-col>\\n              <ion-item>\\n                <ion-label\\n                  class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n                >\\n                  <h3><b> {{i+1}}- </b>{{ item.task }}</h3>\\n\\n                  <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\n                    <i style=\\\"font-size: smaller;\\\"> {{item.taskdate}}</i>\\n                  </ion-note>\\n                </ion-label>\\n\\n                <ion-badge\\n                  [color]=\\\"\\n                      item.progress > 0.99\\n                        ? 'success'\\n                        : item.progress < 0.50\\n                        ? 'warning'\\n                        : 'primary'\\n                    \\\"\\n                >\\n                  {{ item.progress|percent }}\\n                </ion-badge>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: TeamProgressPage,\n  },\n  {\n    path: \":userid\",\n    loadChildren: () =>\n      import(\"../user-tasks/user-tasks.module\").then((m) => m.UserTasksModule),\n    // loadChildren: \"../user-tasks/user-tasks.module#UserTasksModule\",\n    // loadChildren:\"../Components/user-tasks/user-tasks.module#UserTasksModule\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamProgressPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamProgressPageRoutingModule } from './team-progress-routing.module';\n\nimport { TeamProgressPage } from './team-progress.page';\n \nimport { UserTasksPage } from '../user-tasks/user-tasks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TeamProgressPageRoutingModule\n  ],\n  declarations: [TeamProgressPage , UserTasksPage]\n})\nexport class TeamProgressPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RlYW0tcHJvZ3Jlc3MvdGVhbS1wcm9ncmVzcy5wYWdlLnNjc3MifQ== */\";","import { Component, HostListener } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\n\n@Component({\n  selector: \"app-team-progress\",\n  templateUrl: \"team-progress.page.html\",\n  styleUrls: [\"team-progress.page.scss\"],\n})\nexport class TeamProgressPage {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {\n    this.repServ.getTasks().subscribe((data) => {\n      this.tasks = data;\n      this.userProgress = this.getUserProgress();\n    });\n    //Get All Users\n    this.users = this.usrServ.usersList;\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n \n  this.doRefresh(undefined);\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  // ionViewWillLeave() {}\n  // ionViewDidLeave() {}\n  // ionViewDidEnter() {}\n\n  ionViewWillEnter() {\n  // this.userProgress = this.getUserProgress();\n  }\n\n  getUserProgress(): Array<UserProgress> {\n    //  if (!this.isLoaded) {\n    let userProgAr = new Array<UserProgress>();\n    console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n\n    //Group the Tasks By User ID\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    tasksGroupByUsr = this.tasks.reduce((r, a) => {\n      r[a.userid] = r[a.userid] || [];\n      r[a.userid].push(a);\n      return r;\n    }, Object.create(null));\n\n    let prom = new Promise((resolve) => {\n      resolve(tasksGroupByUsr);\n    })\n      .then((res) => {\n        console.log(\"Array<Array<Task>> \", res);\n\n        return Array.of(res);\n      })\n      .then((res) => {\n        let up: UserProgress;\n        let totaltasks, totalInProgress, totalInCompeletd, avgProgress: number;\n        // Iterate over the grouped Array by  group by value :\n        for (let id of Object.keys(res[0])) {\n          up = new UserProgress();\n          totaltasks = totalInProgress = totalInCompeletd = avgProgress = 0;\n          up.userId = id;\n          up.userName = this.users.find((x) => x.userId == id).userName;\n          let val = res[0][id];\n          console.log(\"id, val\", id, val);\n          //Get the Task Object from the arry\n          for (let tid of Object.keys(val)) {\n            ++totaltasks;\n            let percentage = this.parsPercentage(val[tid].progress);\n            let val2 = val[tid].task;\n            if (percentage < 100) {\n              avgProgress += percentage;\n              ++totalInProgress;\n            }\n            if (percentage >= 100) ++totalInCompeletd;\n\n            console.log(\"tid, val2\", tid, val2);\n          }\n          up.totaltasks = totaltasks;\n          up.totalInCompeletd = totalInCompeletd;\n          up.totalInProgress = totalInProgress;\n          if (avgProgress > 0 && totalInProgress > 0)\n            avgProgress = avgProgress / totalInProgress;\n          up.avgProgress = Number(avgProgress.toFixed(2)); //round the number\n          userProgAr.push(up);\n        }\n      });\n    console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    return Number(\n      (parseFloat(val) >= 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(\n        0\n      )\n    );\n  }\n\n  async doRefresh(event) {\n    this.isLoaded = true;\n    await new Promise(() => {\n      event.target ? (event.target.disabled = true) : false;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        event.target ? (event.target.disabled = false) : true;\n        this.isLoaded = false;\n      }, 1500);\n    }).catch((error) => error);\n  }\n}\n","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy9EOlxcV29ya1xcTFRJXFxQcm9qZWN0c1xcSW9uaWNcXFRhc2tUcmFja2VyL3NyY1xcYXBwXFxQYWdlc1xcdXNlci10YXNrc1xcdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/Models/user\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Task } from \"src/app/Models/task\";\n\n@Component({\n  selector: \"app-user-tasks\",\n  templateUrl: \"user-tasks.page.html\",\n  styleUrls: [\"user-tasks.page.scss\"],\n})\nexport class UserTasksPage implements OnInit {\n  userProgress: Array<any> = [];\n  tasks: Task[] = new Array();\n  user:User = Object.create(User);\n  //  listingdata:Array<any> = [];\n  constructor(\n    private datasev: TaskProgressService,\n    private activeroute: ActivatedRoute,\n    private aut: AuthService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {}\n\n  private getUserTasks() {\n    let userid: number;\n    this.activeroute.paramMap.subscribe((param) => {\n      if (!param.has(\"userid\")) {\n        //console.log(\"return\");\n        return;\n      }\n      userid = Number.parseInt(param.get(\"userid\"));\n      this.user.userId = userid;\n      // console.log(userid);\n\n      this.taskServ.fetchMyTasks(\"\" + userid).subscribe((tasks) => {\n        this.userProgress = tasks.slice();\n      });\n    });\n  }\n\n  ngOnInit() {}\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  \n    this.getUserTasks();  this.user = this.usrServ.getUserById(this.user.userId)\n    //console.log(this.userProgress);\n  }\n  ionViewDidLoad() {\n    // console.log(\"this.ionViewDidLoad\");\n  }\n  getTotalInProgress(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\n  }\n  getTotalCompleted(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n}\n"],"sourceRoot":"webpack:///"}