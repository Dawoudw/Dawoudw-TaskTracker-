{"version":3,"sources":["webpack:///src/app/Pages/user-tasks/user-tasks.page.html","webpack:///src/app/Pages/user-tasks/user-tasks-routing.module.ts","webpack:///src/app/Pages/user-tasks/user-tasks.module.ts","webpack:///src/app/Pages/user-tasks/user-tasks.page.scss","webpack:///src/app/Pages/user-tasks/user-tasks.page.ts"],"names":["routes","path","component","UserTasksRoutingModule","imports","forChild","exports","UserTasksModule","declarations","UserTasksPage","datasev","activeroute","aut","usrServ","taskServ","userProgress","tasks","Array","user","Object","create","userid","paramMap","subscribe","param","has","Number","parseInt","get","userId","fetchMyTasks","slice","getUserTasks","getUserById","filter","x","parsPercentage","progress","length","val","parseFloat","selector","template"],"mappings":"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","file":"user-tasks-user-tasks-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid no-padding ion-no-margin>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-buttons slot=\\\"start\\\">\\n                <ion-back-button\\n                  text=\\\"\\\"\\n                  defaultHref=\\\"tasktracker/users-progress\\\"\\n                ></ion-back-button>\\n              </ion-buttons>\\n\\n              <ion-label slot=\\\"\\\" color=\\\"primary\\\">\\n                <b> {{user.userName}}</b>\\n              </ion-label>\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                <img src=\\\"../assets/images/avatar.svg\\\" />\\n              </ion-avatar>\\n            </ion-item>\\n          </ion-col> </ion-row\\n        ><ion-row>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"primary\\\">\\n              <ion-label> Tasks <b>({{userProgress.length}}) </b></ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"warning\\\">\\n              <ion-label>\\n                In-Progress <b>({{getTotalInProgress()}}) </b>\\n              </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"success\\\">\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-list>\\n          <ion-row\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\n            style=\\\"justify-items: left;\\\"\\n          >\\n            <ion-col>\\n              <ion-item>\\n                <ion-label\\n                  class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n                >\\n                  <h3><b> {{i+1}}- </b>{{ item.task }}</h3>\\n\\n                  <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\n                    <i style=\\\"font-size: smaller;\\\"> <u>Last Update:</u>{{item.taskdate}}</i>\\n                  </ion-note>\\n                </ion-label>\\n\\n                <ion-badge\\n                  [color]=\\\"\\n                      item.progress > 0.99\\n                        ? 'success'\\n                        : item.progress < 0.50\\n                        ? 'warning'\\n                        : 'primary'\\n                    \\\"\\n                >\\n                  {{ item.progress|percent }}\\n                </ion-badge>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserTasksPage} from './user-tasks.page';\r\n \r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserTasksPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserTasksRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n \r\n import {UserTasksRoutingModule} from '../../Pages/user-tasks/user-tasks-routing.module'\r\n \r\nimport { UserTasksPage } from '../../Pages/user-tasks/user-tasks.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    UserTasksRoutingModule\r\n \r\n    \r\n  ],\r\n  declarations: [UserTasksPage]\r\n})\r\nexport class UserTasksModule  {}\r\n","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy9EOlxcV29ya1xcTFRJXFxQcm9qZWN0c1xcSW9uaWNcXFRhc2tUcmFja2VyL3NyY1xcYXBwXFxQYWdlc1xcdXNlci10YXNrc1xcdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/Models/user\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Task } from \"src/app/Models/task\";\n\n@Component({\n  selector: \"app-user-tasks\",\n  templateUrl: \"user-tasks.page.html\",\n  styleUrls: [\"user-tasks.page.scss\"],\n})\nexport class UserTasksPage implements OnInit {\n  userProgress: Array<any> = [];\n  tasks: Task[] = new Array();\n  user:User = Object.create(User);\n  //  listingdata:Array<any> = [];\n  constructor(\n    private datasev: TaskProgressService,\n    private activeroute: ActivatedRoute,\n    private aut: AuthService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {}\n\n  private getUserTasks() {\n    let userid: number;\n    this.activeroute.paramMap.subscribe((param) => {\n      if (!param.has(\"userid\")) {\n        //console.log(\"return\");\n        return;\n      }\n      userid = Number.parseInt(param.get(\"userid\"));\n      this.user.userId = userid;\n      // console.log(userid);\n\n      this.taskServ.fetchMyTasks(\"\" + userid).subscribe((tasks) => {\n        this.userProgress = tasks.slice();\n      });\n    });\n  }\n\n  ngOnInit() {}\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  \n    this.getUserTasks();  this.user = this.usrServ.getUserById(this.user.userId)\n    //console.log(this.userProgress);\n  }\n  ionViewDidLoad() {\n    // console.log(\"this.ionViewDidLoad\");\n  }\n  getTotalInProgress(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\n  }\n  getTotalCompleted(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n}\n"]}