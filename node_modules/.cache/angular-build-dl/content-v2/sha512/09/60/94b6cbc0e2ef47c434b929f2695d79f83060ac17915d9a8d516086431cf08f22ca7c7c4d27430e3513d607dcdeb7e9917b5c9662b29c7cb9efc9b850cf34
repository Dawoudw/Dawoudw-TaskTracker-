{"version":3,"sources":["webpack:///src/app/Pages/team-progress/team-progress.page.html","webpack:///src/app/Pages/user-tasks/user-tasks.page.html","webpack:///src/app/Models/user-progress.ts","webpack:///src/app/Pages/team-progress/team-progress-routing.module.ts","webpack:///src/app/Pages/team-progress/team-progress.module.ts","webpack:///src/app/Pages/team-progress/team-progress.page.scss","webpack:///src/app/Pages/team-progress/team-progress.page.ts","webpack:///src/app/Pages/user-tasks/user-tasks.page.scss","webpack:///src/app/Pages/user-tasks/user-tasks.page.ts"],"names":["UserProgress","userid","username","avgProgress","totaltasks","totalInProgress","totalInCompeletd","userId","userName","routes","path","component","loadChildren","then","m","UserTasksModule","TeamProgressPageRoutingModule","imports","forChild","exports","TeamProgressPageModule","declarations","TeamProgressPage","datasev","repServ","usrServ","taskServ","userProgress","Array","tasks","users","isLoaded","getTasks","subscribe","data","getUserProgress","usersList","doRefresh","undefined","userProgAr","console","log","tasksGroupByUsr","reduce","r","a","push","Object","create","prom","Promise","resolve","res","of","up","id","find","x","val","keys","tid","percentage","parsPercentage","progress","val2","task","Number","toFixed","parseFloat","event","target","disabled","setTimeout","ionViewWillEnter","error","selector","template","UserTasksPage","activeroute","aut","user","paramMap","param","has","parseInt","get","fetchMyTasks","slice","getUserTasks","getUserById","filter","length"],"mappings":"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","file":"team-progress-team-progress-module-es5.js","sourcesContent":["export default \"\\n<ion-header class=\\\"ion-no-margin\\\">\\n  <ion-toolbar>\\n    <ion-icon\\n      name=\\\"people-outline\\\"\\n      color=\\\"primary\\\"\\n      size=\\\"large\\\"\\n      slot=\\\"start\\\"\\n      style=\\\"\\n        width: 24px !important;\\n        height: 24px !important;\\n        margin-right: 5px;\\n        margin-left: 5px;\\n      \\\"\\n    ></ion-icon>\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>Team Progress</p></ion-label>\\n    <ion-buttons slot=\\\"end\\\">\\n      <!-- <ion-button [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', 'new']\\\"> -->\\n      <ion-button #btnRefresh id=\\\"btnRefresh\\\" (click)=\\\"doRefresh($event)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"sync-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid>\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <div\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n          *ngIf=\\\"isLoaded\\\"\\n        >\\n          <ion-spinner\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\n            name=\\\"crescent\\\"\\n          ></ion-spinner>\\n        </div>\\n\\n        <ion-list\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\n          [(ngModel)]=\\\"userProgress\\\"\\n          ngDefaultControl\\n          name=\\\"lstTaskProgress\\\"\\n        >\\n          <ion-row style=\\\"justify-items: left;\\\">\\n            <ion-col>\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\n                </ion-avatar>\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <b>{{ item.userName }}</b></ion-label\\n                  >\\n\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\n                  </ion-label>\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <ion-badge\\n                      style=\\\"margin: 0px;\\\"\\n                      [color]=\\\"\\n                        item.avgProgress > 99\\n                          ? 'success'\\n                          : item.avgProgress < 50\\n                          ? 'warning'\\n                          : 'primary'\\n                      \\\"\\n                    >\\n                      {{ item.avgProgress }}%\\n                    </ion-badge>\\n                  </ion-label>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"auto\\\">\\n              <ion-icon\\n                color=\\\"primary\\\"\\n                name=\\\"chatbox-ellipses-outline\\\"\\n                style=\\\"\\n                  flex: left;\\n                  margin-top: 10px;\\n                  margin-left: 5px;\\n                  margin-right: 5px;\\n                  width: 20px;\\n                  height: 20px;\\n                \\\"\\n                class=\\\"ion-text-start\\\"\\n              ></ion-icon>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-content>\\n  <ion-grid no-padding ion-no-margin>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-buttons slot=\\\"start\\\">\\n                <ion-back-button\\n                  text=\\\"\\\"\\n                  defaultHref=\\\"tasktracker/team-progress\\\"\\n                ></ion-back-button>\\n              </ion-buttons>\\n\\n              <ion-label slot=\\\"\\\" color=\\\"primary\\\">\\n                <b> {{user.userName}}</b>\\n              </ion-label>\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                <img src=\\\"../assets/images/avatar.svg\\\" />\\n              </ion-avatar>\\n            </ion-item>\\n          </ion-col> </ion-row\\n        ><ion-row>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"primary\\\">\\n              <ion-label> Tasks <b>({{userProgress.length}}) </b></ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"warning\\\">\\n              <ion-label>\\n                In-Progress <b>({{getTotalInProgress()}}) </b>\\n              </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"success\\\">\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-list>\\n          <ion-row\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\n            style=\\\"justify-items: left;\\\"\\n          >\\n            <ion-col>\\n              <ion-item>\\n                <ion-label\\n                  class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n                >\\n                  <h3><b> {{i+1}}- </b>{{ item.task }}</h3>\\n\\n                  <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\n                    <i style=\\\"font-size: smaller;\\\"> {{item.taskdate}}</i>\\n                  </ion-note>\\n                </ion-label>\\n\\n                <ion-badge\\n                  [color]=\\\"\\n                      item.progress > 0.99\\n                        ? 'success'\\n                        : item.progress < 0.50\\n                        ? 'warning'\\n                        : 'primary'\\n                    \\\"\\n                >\\n                  {{ item.progress|percent }}\\n                </ion-badge>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: TeamProgressPage,\n  },\n  {\n    path: \":userid\",\n    loadChildren: () =>\n      import(\"../user-tasks/user-tasks.module\").then((m) => m.UserTasksModule),\n    // loadChildren: \"../user-tasks/user-tasks.module#UserTasksModule\",\n    // loadChildren:\"../Components/user-tasks/user-tasks.module#UserTasksModule\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamProgressPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamProgressPageRoutingModule } from './team-progress-routing.module';\n\nimport { TeamProgressPage } from './team-progress.page';\n \nimport { UserTasksPage } from '../user-tasks/user-tasks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TeamProgressPageRoutingModule\n  ],\n  declarations: [TeamProgressPage , UserTasksPage]\n})\nexport class TeamProgressPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RlYW0tcHJvZ3Jlc3MvdGVhbS1wcm9ncmVzcy5wYWdlLnNjc3MifQ== */\";","import { Component, HostListener } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\n\n@Component({\n  selector: \"app-team-progress\",\n  templateUrl: \"team-progress.page.html\",\n  styleUrls: [\"team-progress.page.scss\"],\n})\nexport class TeamProgressPage {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {\n    this.repServ.getTasks().subscribe((data) => {\n      this.tasks = data;\n      this.userProgress = this.getUserProgress();\n    });\n    //Get All Users\n    this.users = this.usrServ.usersList;\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n \n  this.doRefresh(undefined);\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  // ionViewWillLeave() {}\n  // ionViewDidLeave() {}\n  // ionViewDidEnter() {}\n\n  ionViewWillEnter() {\n  // this.userProgress = this.getUserProgress();\n  }\n\n  getUserProgress(): Array<UserProgress> {\n    //  if (!this.isLoaded) {\n    let userProgAr = new Array<UserProgress>();\n    console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n\n    //Group the Tasks By User ID\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    tasksGroupByUsr = this.tasks.reduce((r, a) => {\n      r[a.userid] = r[a.userid] || [];\n      r[a.userid].push(a);\n      return r;\n    }, Object.create(null));\n\n    let prom = new Promise((resolve) => {\n      resolve(tasksGroupByUsr);\n    })\n      .then((res) => {\n        console.log(\"Array<Array<Task>> \", res);\n\n        return Array.of(res);\n      })\n      .then((res) => {\n        let up: UserProgress;\n        let totaltasks, totalInProgress, totalInCompeletd, avgProgress: number;\n        // Iterate over the grouped Array by  group by value :\n        for (let id of Object.keys(res[0])) {\n          up = new UserProgress();\n          totaltasks = totalInProgress = totalInCompeletd = avgProgress = 0;\n          up.userId = id;\n          up.userName = this.users.find((x) => x.userId == id).userName;\n          let val = res[0][id];\n          console.log(\"id, val\", id, val);\n          //Get the Task Object from the arry\n          for (let tid of Object.keys(val)) {\n            ++totaltasks;\n            let percentage = this.parsPercentage(val[tid].progress);\n            let val2 = val[tid].task;\n            if (percentage < 100) {\n              avgProgress += percentage;\n              ++totalInProgress;\n            }\n            if (percentage >= 100) ++totalInCompeletd;\n\n            console.log(\"tid, val2\", tid, val2);\n          }\n          up.totaltasks = totaltasks;\n          up.totalInCompeletd = totalInCompeletd;\n          up.totalInProgress = totalInProgress;\n          if (avgProgress > 0 && totalInProgress > 0)\n            avgProgress = avgProgress / totalInProgress;\n          up.avgProgress = Number(avgProgress.toFixed(2)); //round the number\n          userProgAr.push(up);\n        }\n      });\n    console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    return Number(\n      (parseFloat(val) >= 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(\n        0\n      )\n    );\n  }\n\n  async doRefresh(event) {\n    this.isLoaded = true;\n    await new Promise(() => {\n      event.target ? (event.target.disabled = true) : false;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        event.target ? (event.target.disabled = false) : true;\n        this.isLoaded = false;\n      }, 1500);\n    }).catch((error) => error);\n  }\n}\n","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy9EOlxcV29ya1xcTFRJXFxQcm9qZWN0c1xcSW9uaWNcXFRhc2tUcmFja2VyL3NyY1xcYXBwXFxQYWdlc1xcdXNlci10YXNrc1xcdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/Models/user\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Task } from \"src/app/Models/task\";\n\n@Component({\n  selector: \"app-user-tasks\",\n  templateUrl: \"user-tasks.page.html\",\n  styleUrls: [\"user-tasks.page.scss\"],\n})\nexport class UserTasksPage implements OnInit {\n  userProgress: Array<any> = [];\n  tasks: Task[] = new Array();\n  user:User = Object.create(User);\n  //  listingdata:Array<any> = [];\n  constructor(\n    private datasev: TaskProgressService,\n    private activeroute: ActivatedRoute,\n    private aut: AuthService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {}\n\n  private getUserTasks() {\n    let userid: number;\n    this.activeroute.paramMap.subscribe((param) => {\n      if (!param.has(\"userid\")) {\n        //console.log(\"return\");\n        return;\n      }\n      userid = Number.parseInt(param.get(\"userid\"));\n      this.user.userId = userid;\n      // console.log(userid);\n\n      this.taskServ.fetchMyTasks(\"\" + userid).subscribe((tasks) => {\n        this.userProgress = tasks.slice();\n      });\n    });\n  }\n\n  ngOnInit() {}\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  \n    this.getUserTasks();  this.user = this.usrServ.getUserById(this.user.userId)\n    //console.log(this.userProgress);\n  }\n  ionViewDidLoad() {\n    // console.log(\"this.ionViewDidLoad\");\n  }\n  getTotalInProgress(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\n  }\n  getTotalCompleted(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n}\n"]}