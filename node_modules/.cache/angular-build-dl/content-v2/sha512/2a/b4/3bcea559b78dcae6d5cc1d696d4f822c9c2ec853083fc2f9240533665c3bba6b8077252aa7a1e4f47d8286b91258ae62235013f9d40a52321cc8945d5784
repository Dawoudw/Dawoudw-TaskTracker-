{"version":3,"sources":["webpack:///src/app/Pages/start-chat/start-chat.page.html","webpack:///src/app/Pages/start-chat/start-chat-routing.module.ts","webpack:///src/app/Pages/start-chat/start-chat.module.ts","webpack:///src/app/Pages/start-chat/start-chat.page.scss","webpack:///src/app/Pages/start-chat/start-chat.page.ts"],"names":["routes","path","component","StartChatPageRoutingModule","imports","forChild","exports","StartChatPageModule","declarations","StartChatPage","chatService","router","listOfUsers","currentUserEmail","currentUser","email","users","participant","participant1","title","getAllUsers","subscribe","result","forEach","r","payload","doc","data","push","obs","findUser","res","length","indexOf","console","log","createGroup","then","navigateByUrl","selector","template"],"mappings":"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","file":"Pages-start-chat-start-chat-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/group-chat\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Creating a new Group</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item-divider>\\n    <ion-label>\\n      Signed in as: {{ currentUserEmail }}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input placeholder=\\\"Please enter a name for this new group\\\" [(ngModel)]=\\\"title\\\"></ion-input>\\n  </ion-item>\\n<br>\\n\\n  <!-- shows users added to this group -->\\n  <ion-item-divider *ngIf=\\\"users.length!=0\\\">\\n    <!-- <ion-label *ngIf=\\\"(users | async)?.length!=0\\\"> -->\\n    <ion-label>\\n      Users added to this group\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item *ngFor=\\\"let usr of users\\\">\\n    <ion-label>\\n      {{ usr.email }}\\n      <p>{{ usr.nickname }}</p>\\n    </ion-label>\\n  </ion-item>\\n\\n<br><br>\\n  <ion-item-divider>\\n    <ion-label>\\n      Contacts (All Available Users)\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item button *ngFor=\\\"let item of listOfUsers;\\\">\\n    <ion-label>\\n      {{ item.payload.doc.data().email }}\\n      <p>{{ item.payload.doc.data().userName }}</p>\\n    </ion-label>\\n    <ion-button icon-only (click)=\\\"addUser(item.payload.doc.data().email)\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-button>\\n    <!-- Keep either a button or a routerlink--both togather will not work -->\\n    <!-- <ion-button icon-only (click)=\\\"oneOnOneChat(item.payload.doc.data().email,item.payload.doc.data().nickname)\\\">\\n      <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n    </ion-button> -->\\n    <!-- <ion-button icon-only>\\n      <ion-icon name=\\\"call-outline\\\"></ion-icon>\\n    </ion-button> -->\\n  </ion-item>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button color=\\\"light\\\" expand=\\\"full\\\" fill=\\\"clear\\\" [disabled]=\\\"title == '' || users.length == 0\\\" \\n    (click)=\\\"createGroup()\\\">Start\\n      Group</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StartChatPage } from './start-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StartChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StartChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StartChatPageRoutingModule } from './start-chat-routing.module';\n\nimport { StartChatPage } from './start-chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StartChatPageRoutingModule\n  ],\n  declarations: [StartChatPage]\n})\nexport class StartChatPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3N0YXJ0LWNoYXQvc3RhcnQtY2hhdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/app/Services/chat.service';\nimport { Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-start-chat',\n  templateUrl: './start-chat.page.html',\n  styleUrls: ['./start-chat.page.scss'],\n})\nexport class StartChatPage implements OnInit {\n  constructor(\n    public chatService: ChatService,\n    private router: Router\n  ) { }\n\n  listOfUsers = [];\n  currentUserEmail = this.chatService.currentUser.email;\n  users= [];\n  participant = '';\n  participant1 = '';\n  title = '';\n  \n\n  ngOnInit() {\n    //this gets a list of all users\n    this.listOfUsers = [];\n    this.chatService.getAllUsers().subscribe(result => {\n      result.forEach(r => {\n        if(r.payload.doc.data()['email'] != this.chatService.currentUser.email) {\n          this.listOfUsers.push(r);\n        }\n      });   \n    });\n  }\n\n  addUser(participant1) {\n    // console.log(\"when calling addUser function, users array =\");\n    // console.log(this.users);\n    this.participant = participant1;\n    let obs = this.chatService.findUser(this.participant);\n    forkJoin(obs).subscribe(res => {\n      for (let data of res) {\n        if (data.length > 0) {\n          if(this.users.indexOf(data[0]) > -1) {\n          } else {\n            console.log(\"data[0]\");\n            console.log(data[0]);\n            this.users.push(data[0]);\n          }\n        }\n      }\n      this.participant = '';\n    });\n  }\n\n  createGroup() {\n    console.log(\"this.title\");\n    console.log(this.title);\n    console.log(\"this.users\");\n    console.log(this.users);\n    console.log(\"users array length: \");\n    console.log(this.users.length);\n    this.chatService.createGroup(this.title, this.users).then(res => {\n      console.log(\"group created\");\n      this.router.navigateByUrl('/chats');\n    });\n    this.users = [];\n  }\n\n\n\n\n\n\n\n\n\n\n\n}\n"]}