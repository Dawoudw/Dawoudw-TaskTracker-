{"version":3,"sources":["webpack:///src/app/Components/users-progress/users-progress.component.html","webpack:///src/app/Pages/tab1/tab1.page.html","webpack:///src/app/Components/users-progress/users-progress.component.scss","webpack:///src/app/Components/users-progress/users-progress.component.ts","webpack:///src/app/Models/user-progress.ts","webpack:///src/app/Pages/tab1/tab1-routing.module.ts","webpack:///src/app/Pages/tab1/tab1.module.ts","webpack:///src/app/Pages/tab1/tab1.page.scss","webpack:///src/app/Pages/tab1/tab1.page.ts"],"names":["UsersProgressComponent","datasev","repServ","usrServ","userProgress","Array","tasks","users","getTasksGroupByUserId","getUsersProgress","getTasks","subscribe","data","t","push","usersList","usr","up","userName","userId","totaltasks","getTotalUserTasks","console","log","id","x","xxx","e","parseInt","userid","avg","taskslist","length","tempProgressAry","i","total","inproglist","filter","parsPercentage","progress","ut","totalInCompeletd","totalInProgress","avgProgress","val","parseFloat","selector","template","UserProgress","username","routes","path","component","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","Tab1Page","taskServ","usertasks","num","result","prop","fetchMyTasks"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<!-- Card view  -->\\r\\n<!-- <ion-grid>\\r\\n  <ion-row *ngFor=\\\"let item of userProgress; let i = index\\\">\\r\\n    <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n      <ion-card class=\\\"ion-no-margin\\\">\\r\\n        <ion-col>\\r\\n          <ion-img> </ion-img>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-row>\\r\\n            <ion-col style=\\\"float: left;\\\">\\r\\n              <ion-label\\r\\n                color=\\\"primary\\\"\\r\\n                class=\\\"ion-text-start ion-text-capitalize\\\"\\r\\n              >\\r\\n                {{ item.userName }}\\r\\n              </ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label (click)=\\\"presentPopover()\\\" color=\\\"medium\\\">\\r\\n                Total Tasks\\r\\n              </ion-label>\\r\\n              <ion-label color=\\\"dark\\\"> ({{ item.totaltasks }}) </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-badge\\r\\n                [color]=\\\"\\r\\n                  item.progress > 99\\r\\n                    ? 'success'\\r\\n                    : item.progress < 50\\r\\n                    ? 'warning'\\r\\n                    : 'primary'\\r\\n                \\\"\\r\\n              >\\r\\n                {{ item.progress }}%\\r\\n              </ion-badge>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-icon\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"float: right;\\\"\\r\\n                size=\\\"large\\\"\\r\\n                class=\\\"ion-text-end\\\"\\r\\n              >\\r\\n              </ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-col>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid> -->\\r\\n\\r\\n<!-- List view  -->\\r\\n<ion-grid>\\r\\n  <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n    <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n      <ion-list>\\r\\n        <ion-row\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          style=\\\"justify-items: left;\\\"\\r\\n        >\\r\\n          <ion-col>\\r\\n            <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\r\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n              </ion-avatar>\\r\\n              <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                  <b>{{ item.userName }}</b></ion-label\\r\\n                >\\r\\n\\r\\n                <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                  Total Tasks <b>({{ item.totaltasks }}) </b>\\r\\n                </ion-label>\\r\\n                <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                  <ion-badge\\r\\n                    style=\\\"margin: 0px;\\\"\\r\\n                    [color]=\\\"\\r\\n                      item.avgProgress > 99\\r\\n                        ? 'success'\\r\\n                        : item.avgProgress < 50\\r\\n                        ? 'warning'\\r\\n                        : 'primary'\\r\\n                    \\\"\\r\\n                  >\\r\\n                    {{ item.avgProgress }}%\\r\\n                  </ion-badge>\\r\\n                </ion-label>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-icon\\r\\n              color=\\\"primary\\\"\\r\\n              name=\\\"chatbox-ellipses-outline\\\"\\r\\n              style=\\\"\\r\\n                flex: left;\\r\\n                margin-top: 10px;\\r\\n                margin-left: 5px;\\r\\n                margin-right: 5px;\\r\\n                width: 20px;\\r\\n                height: 20px;\\r\\n              \\\"\\r\\n              class=\\\"ion-text-start\\\"\\r\\n            ></ion-icon>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-list>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!-- <ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row *ngFor=\\\"let item of userProgress\\\">\\r\\n      <ion-col size-med=\\\"10\\\" offset-med=\\\"1\\\">\\r\\n        \\r\\n          <ion-card-header>\\r\\n            <ion-label>\\r\\n              <b> {{ item.userName }}</b>\\r\\n            </ion-label>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <ion-item>\\r\\n              <ion-crad-title>\\r\\n                <b> Task:  </b>  {{ item.taskName }}\\r\\n              </ion-crad-title>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-crad-title>\\r\\n           <b> Progress:  </b> {{ item.progress }}%\\r\\n              </ion-crad-title>\\r\\n            </ion-item>\\r\\n          </ion-card-content>\\r\\n    \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content> -->\\r\\n</ion-grid>\\r\\n\";","export default \"<!-- <ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    \\r\\n \\r\\n  </ion-toolbar>\\r\\n</ion-header> -->\\r\\n<!-- <ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon name=\\\"people-outline\\\" size=\\\"large\\\" slot=\\\"start\\\"></ion-icon>\\r\\n    <ion-title slot=\\\"start\\\"  mode=\\\"md\\\" position=\\\"fixed\\\">Users Progress</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-searchbar showCancelButton=\\\"focus\\\"  value=\\\" \\\" placeholder=\\\"Filter users\\\"></ion-searchbar> \\r\\n</ion-header> -->\\r\\n<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"people-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      style=\\\"width: 24px !important;height: 24px !important;margin-right: 5px;margin-left: 5px;\\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>Team Progress</p></ion-label>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list>\\r\\n          <ion-row\\r\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n            style=\\\"justify-items: left;\\\"\\r\\n          >\\r\\n            <ion-col>\\r\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\" >\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }}</b></ion-label\\r\\n                  >\\r\\n  \\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\r\\n                  </ion-label>\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <ion-badge\\r\\n                      style=\\\"margin: 0px;\\\"\\r\\n                      [color]=\\\"\\r\\n                        item.avgProgress > 99\\r\\n                          ? 'success'\\r\\n                          : item.avgProgress < 50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ item.avgProgress }}%\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n  \\r\\n            <ion-col size=\\\"auto\\\">\\r\\n              <ion-icon\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n \\r\\n  </ion-grid>\\r\\n  \\r\\n</ion-content>\\r\\n\";","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy91c2Vycy1wcm9ncmVzcy9EOlxcV29ya1xcTFRJXFxQcm9qZWN0c1xcSW9uaWNcXFRhc2tUcmFja2VyL3NyY1xcYXBwXFxDb21wb25lbnRzXFx1c2Vycy1wcm9ncmVzc1xcdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL0NvbXBvbmVudHMvdXNlcnMtcHJvZ3Jlc3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvdXNlcnMtcHJvZ3Jlc3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { PopoverController } from \"@ionic/angular\";\nimport { UserTasksPage } from \"../../Pages/user-tasks/user-tasks.page\";\nimport { Task } from \"src/app/Models/task\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { User } from \"src/app/Models/user\";\nimport { UsersService } from \"src/app/Services/users.service\";\n\n@Component({\n  selector: \"app-users-progress\",\n  templateUrl: \"./users-progress.component.html\",\n  styleUrls: [\"./users-progress.component.scss\"],\n})\nexport class UsersProgressComponent implements OnInit {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    private usrServ: UsersService\n  ) {\n    this.datasev.getTasksGroupByUserId();\n     this.userProgress = this.getUsersProgress();\n\n    this.repServ.getTasks().subscribe((data) => {\n      for (const t of data) {\n        this.tasks.push(t);\n      }\n    });\n    this.users = this.usrServ.usersList;\n\n    // let result = this.tasks.reduce(function (r, a) {\n    //   r[a.userid] = r[a.userid] || [];\n    //   r[a.userid].push(a);\n    //   return r;\n    // }, Object.create(null));\n\n    for (let usr of this.users) {\n      let up: UserProgress = new UserProgress();\n\n      up.userName = usr.userName;\n      up.userId = usr.userId;\n      up.totaltasks = this.getTotalUserTasks(usr.userId);\n\n      //\n      this.userProgress.push(up);\n    }\n\n    console.log(\"this.userProgress\", this.userProgress);\n    console.log(\"usrServ.usersList;\", this.users);\n    console.log(\" this.userProgress;\", this.userProgress);\n  }\n\n  ngOnInit() {\n    // this.userProgress = this.datasev.userProgressAry;\n    // console.log(this.datasev.userProgressAry);\n  }\n  getTotalUserTasks(id): Number {\n    let x = 222;\n    let xxx: Task[] = new Array();\n    this.repServ.getTasks().subscribe((data) => {\n      xxx = data;\n \n      for(let e of this.tasks)\n      {\n        if(parseInt( e.userid)===parseInt(id) )\n        x++\n      }\n    });\n\n    return x;\n  }\n  getUsersProgress(): Array<UserProgress> {\n    let avg: number = 0;\n    let taskslist: Array<Array<Task>> = this.datasev.getTasksGroupByUserId();\n    console.log(\"getUsersProgress Start\", taskslist.length);\n    let tempProgressAry = new Array<UserProgress>();\n    let up: UserProgress;\n\n    for (let i = 0; i < this.datasev.getTasksGroupByUserId().length; i++) {\n      let total = 0;\n      console.log(\"let tr of this.UsersTasks\", taskslist[i]);\n      // if (null != tr && undefined != tr && tr.length > 0) {\n      let inproglist = taskslist[i].filter(\n        (t) => this.parsPercentage(t.progress) < 100\n      );\n      up = new UserProgress();\n      for (let ut of inproglist) {\n        total = total + ut.progress;\n      }\n      up.userId = taskslist[i][0].userid;\n      up.totaltasks = taskslist[i].length + 1;\n      up.totalInCompeletd =\n        taskslist[i].filter((t) => this.parsPercentage(t.progress) >= 100)\n          .length + 1;\n      up.totalInProgress =\n        taskslist[i].filter((t) => this.parsPercentage(t.progress) < 100)\n          .length + 1;\n      up.avgProgress = total / up.totalInProgress;\n      //}\n\n      tempProgressAry.push(up);\n    }\n    return tempProgressAry;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) * 0.01 : parseFloat(val);\n  }\n}\n","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { UsersProgressComponent } from \"../../Components/users-progress/users-progress.component\";\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n \n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    Tab1PageRoutingModule,\n    \n  ],\n  declarations: [Tab1Page,UsersProgressComponent]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\n\n@Component({\n  selector: \"app-tab1\",\n  templateUrl: \"tab1.page.html\",\n  styleUrls: [\"tab1.page.scss\"],\n})\nexport class Tab1Page {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {\n    //this.datasev.getTasksGroupByUserId();\n    //this.userProgress = this.getUsersProgress();\n\n    this.repServ.getTasks().subscribe((data) => {\n      for (const t of data) {\n        this.tasks.push(t);\n      }\n    });\n    this.users = this.usrServ.usersList;\n    this.getTotalUserTasks()\n    // let result = this.tasks.reduce(function (r, a) {\n    //   r[a.userid] = r[a.userid] || [];\n    //   r[a.userid].push(a);\n    //   return r;\n    // }, Object.create(null));\n  }\n\n  ngOnInit() {\n    // this.userProgress = this.datasev.userProgressAry;\n    // console.log(this.datasev.userProgressAry);\n  }\n\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  }\n  getTotalUserTasks() {\n    let usertasks: Task[] = new Array();\n    let num :number = 0;\n    for (let usr of this.users) {\n      let up: UserProgress = new UserProgress();\n\n      var result = 0;\n      for (var prop of usertasks) {\n        // or Object.prototype.hasOwnProperty.call(obj, prop)\n        result++;\n      }\n\n      this.taskServ.fetchMyTasks(\"\" + usr.userId).subscribe((t) => {\n        usertasks = t;\n        num = t.length+1;\n      });\n      up.userName = usr.userName;\n      up.userId = usr.userId;\n      up.totaltasks = result;\n      // this.tasks.filter(\n      //   (x) => parseInt(x.userid) == parseInt(usr.userId)\n      // ).length;\n      // up.totaltasks = this.getTotalUserTasks(usr.userId);\n\n      //\n      this.userProgress.push(up);\n    }\n\n    console.log(\"this.userProgress\", this.userProgress);\n    console.log(\"usrServ.usersList;\", this.users);\n    console.log(\" this.tasks;\", this.tasks);\n    console.log(\" this.usertasks;\", usertasks);\n    //console.log(this.userProgress);\n  }\n  getUsersProgress(): Array<UserProgress> {\n    let avg: number = 0;\n    let taskslist: Array<Array<Task>> = this.datasev.getTasksGroupByUserId();\n    console.log(\"getUsersProgress Start\", taskslist.length);\n    let tempProgressAry = new Array<UserProgress>();\n    let up: UserProgress;\n\n    for (let i = 0; i < this.datasev.getTasksGroupByUserId().length; i++) {\n      let total = 0;\n      console.log(\"let tr of this.UsersTasks\", taskslist[i]);\n      // if (null != tr && undefined != tr && tr.length > 0) {\n      let inproglist = taskslist[i].filter(\n        (t) => this.parsPercentage(t.progress) < 100\n      );\n      up = new UserProgress();\n      for (let ut of inproglist) {\n        total = total + ut.progress;\n      }\n      up.userId = taskslist[i][0].userid;\n      up.totaltasks = taskslist[i].length + 1;\n      up.totalInCompeletd =\n        taskslist[i].filter((t) => this.parsPercentage(t.progress) >= 100)\n          .length + 1;\n      up.totalInProgress =\n        taskslist[i].filter((t) => this.parsPercentage(t.progress) < 100)\n          .length + 1;\n      up.avgProgress = total / up.totalInProgress;\n      //}\n\n      tempProgressAry.push(up);\n    }\n    return tempProgressAry;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) * 0.01 : parseFloat(val);\n  }\n}\n"]}