{"version":3,"sources":["webpack:///src/app/Pages/task-detial/task-detial.page.html","webpack:///src/app/Pages/task-detial/task-detial-routing.module.ts","webpack:///src/app/Pages/task-detial/task-detial.module.ts","webpack:///src/app/Pages/task-detial/task-detial.page.scss","webpack:///src/app/Pages/task-detial/task-detial.page.ts"],"names":["routes","path","component","TaskDetialPageRoutingModule","imports","forChild","exports","TaskDetialPageModule","declarations","TaskDetialPage","route","navCtrl","tasksService","paramMap","subscribe","has","navigateBack","console","log","get","myTasks","tasks","loadedTask","find","t","id","updateTask","deleteTask","fetchMyTasks","selector","template"],"mappings":"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","file":"task-detial-task-detial-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/tabs/tab3\\\"     text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title size=\\\"small\\\" color=\\\"primary\\\" > <h4> Update My Progress</h4></ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button>\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- <ion-content>\\r\\n  <ion-input\\r\\n    [(ngModel)]=\\\"loadedTask.taskName\\\"\\r\\n    (focusout)=\\\"updateTask()\\\"\\r\\n    class=\\\"ion-padding\\\"\\r\\n    >Task Name:\\r\\n  </ion-input>\\r\\n  <br />\\r\\n  <ion-input\\r\\n    [(ngModel)]=\\\"loadedTask.progress\\\"\\r\\n    (focusout)=\\\"updateTask()\\\"\\r\\n    class=\\\"ion-padding\\\"\\r\\n    >Task Progress:\\r\\n  </ion-input>\\r\\n  <br />\\r\\n  <ion-textarea\\r\\n    [(ngModel)]=\\\"loadedTask.taskDesc\\\"\\r\\n    (focusout)=\\\"updateTask()\\\"\\r\\n    class=\\\"ion-padding\\\"\\r\\n    >Description</ion-textarea\\r\\n  >\\r\\n  <ion-button color=\\\"danger\\\" (click)=\\\"deleteTask()\\\">Remove</ion-button>\\r\\n</ion-content> -->\\r\\n\\r\\n<!-- Card view  -->\\r\\n  <ion-content fullscreen>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n     \\r\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Task Title <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input style=\\\"background-color:transparent;\\\"\\r\\n              required\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.taskName\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n    \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Progress % <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input  style=\\\"background-color:transparent;\\\"\\r\\n              required\\r\\n              type=\\\"number\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.progress\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Description</ion-label>\\r\\n            <ion-textarea  rows=\\\"20\\\" cols=\\\"20\\\"    style=\\\"background-color:transparent \\\" [(ngModel)]=\\\"loadedTask.taskDesc\\\"\\r\\n            (focusout)=\\\"updateTask()\\\"></ion-textarea>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n<!--     \\r\\n        <div class=\\\"ion-padding\\\">\\r\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\"\\r\\n            >Save</ion-button\\r\\n          >\\r\\n        </div> -->\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>  \\r\\n \\r\\n \";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskDetialPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskDetialPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaskDetialPageRoutingModule } from './task-detial-routing.module';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TaskDetialPageRoutingModule\r\n  ],\r\n  declarations: [TaskDetialPage]\r\n})\r\nexport class TaskDetialPageModule {}\r\n","export default \"ion-input {\\n  --background: gray;\\n}\\n\\nion-textarea {\\n  --background: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvdGFzay1kZXRpYWwvRDpcXFdvcmtcXExUSVxcUHJvamVjdHNcXElvbmljXFxUYXNrVHJhY2tlci9zcmNcXGFwcFxcUGFnZXNcXHRhc2stZGV0aWFsXFx0YXNrLWRldGlhbC5wYWdlLnNjc3MiLCJzcmMvYXBwL1BhZ2VzL3Rhc2stZGV0aWFsL3Rhc2stZGV0aWFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvUGFnZXMvdGFzay1kZXRpYWwvdGFzay1kZXRpYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWlucHV0e1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBncmF5O1xyXG59XHJcblxyXG5pb24tdGV4dGFyZWF7XHJcbiAgICAtLWJhY2tncm91bmQ6IGdyYXk7XHJcbn0iLCJpb24taW5wdXQge1xuICAtLWJhY2tncm91bmQ6IGdyYXk7XG59XG5cbmlvbi10ZXh0YXJlYSB7XG4gIC0tYmFja2dyb3VuZDogZ3JheTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Task } from '../../Models/task';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { TasksService } from 'src/app/Services/tasks.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-detial',\r\n  templateUrl: './task-detial.page.html',\r\n  styleUrls: ['./task-detial.page.scss'],\r\n})\r\nexport class TaskDetialPage implements OnInit {\r\n\r\n  loadedTask: Task;\r\n  taskSub: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private tasksService: TasksService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(paramMap => {\r\n      if(!paramMap.has('taskId')){\r\n        this.navCtrl.navigateBack('/tasktracker/submit-my-progress');\r\n        return;\r\n      }\r\n      console.log(\"Entering detail page with task ID: \", paramMap.get('taskId'));\r\n      // *** This code is loading data locally. ***\r\n      // *** Its purpose is for testing the UI  ***\r\n      // ********************************************************************\r\n      this.tasksService.myTasks.subscribe(tasks => {\r\n        this.loadedTask = tasks.find(t => t.id === paramMap.get('taskId'));\r\n        console.log(\"Getting data locally with task: \", this.loadedTask);\r\n      })\r\n      // ********************************************************************\r\n\r\n      // TODO: This code need to be active using API\r\n      // this.taskSub = this.tasksService.getTask(paramMap.get('taskId')).subscribe(task =>{\r\n      //   this.loadedTask = task;\r\n      // });\r\n\r\n\r\n      // Old code\r\n      // this.loadedTask = this.tasksService.getMyTasks(paramMap.get('taskId'));\r\n    })\r\n  }\r\n\r\n  updateTask(){\r\n    this.tasksService.updateTask(this.loadedTask);\r\n  }\r\n\r\n  deleteTask(){\r\n    this.tasksService.deleteTask(this.loadedTask.id);\r\n    this.navCtrl.navigateBack(\"/tabs/tab3\");\r\n    return;\r\n  }\r\n\r\n  // Update MyTask list from API\r\n  onViewWillEnter(){\r\n    this.tasksService.fetchMyTasks('test');\r\n  }\r\n\r\n  onViewWillLeave(){\r\n    this.tasksService.updateTask(this.loadedTask);\r\n  }\r\n}\r\n"]}