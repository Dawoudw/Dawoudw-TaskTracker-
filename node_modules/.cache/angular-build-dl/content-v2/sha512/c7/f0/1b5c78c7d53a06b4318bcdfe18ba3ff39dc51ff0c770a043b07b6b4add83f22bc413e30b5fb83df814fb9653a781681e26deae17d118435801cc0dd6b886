(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["group-chat-group-chat-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/Pages/group-chat/group-chat.page.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/Pages/group-chat/group-chat.page.html ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!-- <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\n  <ion-refresher-content\n    pullingIcon=\"arrow-down-outline\"\n    pullingText=\"Pull to refresh\"\n    refreshingSpinner=\"dots\"\n    refreshingText=\"Refreshing...\">\n  </ion-refresher-content>\n</ion-refresher> -->\n\n<ion-header class=\"ion-no-margin\">\n  <ion-toolbar>\n    <ion-segment\n      style=\"width: 100%\"\n      color=\"dark\"\n      (ionChange)=\"0\"\n      #checkTeam\n      value=\"chat\"\n    >\n      <ion-segment-button size=\"small\" value=\"chat\" layout=\"icon-start\">\n        <ion-label\n          [color]=\"checkTeam.value=='chat' ? 'secondary' : ''\"\n          position=\"float\"\n          >Chat</ion-label\n        >\n        <ion-icon\n          [color]=\"checkTeam.value=='chat' ? 'secondary' : ''\"\n          name=\"chatbox-ellipses-outline\"\n        ></ion-icon>\n      </ion-segment-button>\n\n      <ion-segment-button size=\"small\" value=\"group\" layout=\"icon-start\">\n        <ion-label\n          [color]=\"checkTeam.value=='group' ? 'secondary' : ''\"\n          position=\"float\"\n          >Chat Groups</ion-label\n        >\n        <ion-icon\n          [color]=\"checkTeam.value=='group' ? 'secondary' : ''\"\n          src=\"../assets/images/chat-group.svg\"\n        ></ion-icon>\n      </ion-segment-button>\n    </ion-segment>\n  </ion-toolbar>\n</ion-header>\n<ion-content fullscreen>\n  <ion-fab\n    *ngIf=' checkTeam.value==\"group\" '\n    vertical=\"top\"\n    horizontal=\"end\"\n    slot=\"fixed\"\n  >\n    <ion-fab-button\n      routerLink=\"/tasktracker/start-chat\"\n      size=\"small\"\n      color=\"light\"\n      class=\"ion-no-margin ion-no-padding\"\n    >\n      <ion-icon name=\"add\" color=\"primary\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n  <ion-grid *ngIf=' checkTeam.value==\"chat\" '>\n    <ion-row class=\"ion-no-margin ; no-padding\">\n      <ion-col size-med=\"6\" size-lg=\"6\" offset-med=\"3\" offset-lg=\"3\">\n        <div\n          class=\"ion-no-margin ; no-padding\"\n          style=\"\n            height: 0px;\n            text-align: center !important;\n            position: relative;\n            z-index: 1;\n          \"\n        >\n          <ion-refresher\n            #refTeamProgress\n            id=\"refTeamProgress\"\n            style=\"position: relative; z-index: 2; top: 0px\"\n            slot=\"fixed\"\n            (ionRefresh)=\"doRefresh($event)\"\n          >\n            <ion-refresher-content color=\"primary\" refreshingSpinner=\"crescent\">\n            </ion-refresher-content>\n          </ion-refresher>\n        </div>\n        <ion-list *ngFor=\"let item of listOfUsers;\" name=\"lstusers\">\n          <ion-row style=\"justify-items: left\">\n            <ion-col>\n              <ion-item\n                detail=\"false\"\n                (click)=\"oneOnOneChat(item.payload.doc.data().email,item.payload.doc.data().userName)\"\n              >\n                <ion-avatar slot=\"start\" name=\"avatar\">\n                  <!-- <img src=\"../assets/images/avatar.svg\" /> -->\n                  <text-avatar\n                    text=\"{{item.payload.doc.data().userName}}\"\n                  ></text-avatar>\n                </ion-avatar>\n                <ion-label\n                  color=\"secondary\"\n                  position=\"stacked\"\n                  class=\"ion-text-start ion-text-capitalize\"\n                >\n                  {{ item.payload.doc.data().userName }}\n                  <ion-label class=\"ion-no-margin ion-no-padding ion-text-wrap\">\n                    <ion-note position=\"stacked\">\n                      <small> {{ item.payload.doc.data().email }}</small>\n                    </ion-note></ion-label\n                  >\n                </ion-label>\n              </ion-item>\n            </ion-col>\n\n            <ion-col size=\"auto\">\n              <ion-icon\n                (click)=\"oneOnOneChat(item.payload.doc.data().email,item.payload.doc.data().userName)\"\n                color=\"primary\"\n                name=\"chatbox-ellipses-outline\"\n                style=\"\n                  flex: left;\n                  margin-top: 10px;\n                  margin-left: 5px;\n                  margin-right: 5px;\n                  width: 20px;\n                  height: 20px;\n                \"\n                class=\"ion-text-start\"\n              ></ion-icon>\n            </ion-col>\n          </ion-row>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <ion-grid *ngIf=' checkTeam.value==\"group\" '>\n    <ion-row>\n      <ion-col>\n        <ion-item-divider\n          class=\"ion-no-margin ion-no-padding\"\n          color=\"secondary\"\n        >\n          <ion-chip outline color=\"dark\">\n            <ion-label color=\"dark\"> Your Chat Groups </ion-label>\n          </ion-chip>\n        </ion-item-divider>\n\n        <div\n          class=\"ion-no-margin ion-no-padding\"\n          style=\"\n            height: 0px;\n            text-align: center !important;\n            position: relative;\n            z-index: 1;\n          \"\n        >\n          <ion-refresher\n            #refTeamProgress2\n            id=\"refTeamProgress\"\n            style=\"position: relative; z-index: 2; top: 0px\"\n            slot=\"fixed\"\n            (ionRefresh)=\"doRefresh($event)\"\n          >\n            <ion-refresher-content color=\"primary\" refreshingSpinner=\"crescent\">\n            </ion-refresher-content>\n          </ion-refresher>\n        </div>\n        <ion-list>\n          <ion-item\n            button\n            *ngFor=\"let item of listOfGroups2;\"\n            (click)=\"GroupChat(item.payload.doc.data().id,item.payload.doc.data().title)\"\n          >\n            <ion-label class=\"ion-text-wrap\">\n              <ion-text color=\"secondary\">\n                <h3>{{ item.payload.doc.data().title }}</h3>\n              </ion-text>\n              <p>{{ item.payload.doc.data().users}} Users</p>\n              <!-- <p>Group id: {{ item.payload.doc.data().id }}</p> -->\n            </ion-label>\n          </ion-item>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n    <!-- <ion-footer>\n      <ion-toolbar color=\"primary\">\n        <ion-button\n          color=\"light\"\n          fill=\"clear\"\n          expand=\"full\"\n          routerLink=\"/start-chat\"\n          >Start new Group</ion-button\n        >\n      </ion-toolbar>\n    </ion-footer> -->\n  </ion-grid>\n</ion-content>\n");

/***/ }),

/***/ "./src/app/Pages/group-chat/group-chat-routing.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/Pages/group-chat/group-chat-routing.module.ts ***!
  \***************************************************************/
/*! exports provided: GroupChatPageRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupChatPageRoutingModule", function() { return GroupChatPageRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _group_chat_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./group-chat.page */ "./src/app/Pages/group-chat/group-chat.page.ts");




const routes = [
    {
        path: '',
        component: _group_chat_page__WEBPACK_IMPORTED_MODULE_3__["GroupChatPage"]
    }
];
let GroupChatPageRoutingModule = class GroupChatPageRoutingModule {
};
GroupChatPageRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
    })
], GroupChatPageRoutingModule);



/***/ }),

/***/ "./src/app/Pages/group-chat/group-chat.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/Pages/group-chat/group-chat.module.ts ***!
  \*******************************************************/
/*! exports provided: GroupChatPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupChatPageModule", function() { return GroupChatPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");
/* harmony import */ var _group_chat_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./group-chat-routing.module */ "./src/app/Pages/group-chat/group-chat-routing.module.ts");
/* harmony import */ var _directives_text_avatar_directive_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../directives/text-avatar.directive.module */ "./src/app/directives/text-avatar.directive.module.ts");
/* harmony import */ var _group_chat_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./group-chat.page */ "./src/app/Pages/group-chat/group-chat.page.ts");








let GroupChatPageModule = class GroupChatPageModule {
};
GroupChatPageModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["IonicModule"],
            _group_chat_routing_module__WEBPACK_IMPORTED_MODULE_5__["GroupChatPageRoutingModule"],
            _directives_text_avatar_directive_module__WEBPACK_IMPORTED_MODULE_6__["TextAvatarModule"],
        ],
        declarations: [_group_chat_page__WEBPACK_IMPORTED_MODULE_7__["GroupChatPage"]]
    })
], GroupChatPageModule);



/***/ }),

/***/ "./src/app/Pages/group-chat/group-chat.page.scss":
/*!*******************************************************!*\
  !*** ./src/app/Pages/group-chat/group-chat.page.scss ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2dyb3VwLWNoYXQvZ3JvdXAtY2hhdC5wYWdlLnNjc3MifQ== */");

/***/ }),

/***/ "./src/app/Pages/group-chat/group-chat.page.ts":
/*!*****************************************************!*\
  !*** ./src/app/Pages/group-chat/group-chat.page.ts ***!
  \*****************************************************/
/*! exports provided: GroupChatPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupChatPage", function() { return GroupChatPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var src_app_Services_chat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Services/chat.service */ "./src/app/Services/chat.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_fire_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/fire/firestore */ "./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-firestore.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");







let GroupChatPage = class GroupChatPage {
    constructor(chatService, db, 
    // private router: Router,
    navCtrl) {
        this.chatService = chatService;
        this.db = db;
        this.navCtrl = navCtrl;
        this.listOfUsers = []; //this list can show all groups using function getAllGroups() from chat service
        this.currentUserEmail = this.chatService.currentUser.email;
        this.listOfGroups = this.chatService.listOfGroups;
        this.listOfGroups2 = [];
        this.currentFirebaseUserId = this.chatService
            .currentUserIdFromFirebaseSetFromHomePage;
        // currentFirebaseUserId = this.chatService.currentUserIdFromFireabase;
        this.titleCheck = "";
        this.participant = "";
        this.users = [];
        this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    }
    ngOnInit() {
        //getting firebase userid if not found
        if (this.currentFirebaseUserId == null || this.currentFirebaseUserId == '') {
            console.log("firebase userid not found");
            let user = this.chatService.findUser(this.currentUserEmail);
            //console.log(user);  //observable
            user.subscribe((result) => {
                // console.log("firebase user id retrieved ="+result[0].id);
                this.chatService.currentUserIdFromFirebaseSetFromHomePage = result[0].id;
                this.currentFirebaseUserId = result[0].id;
            });
        }
        setTimeout(() => {
            console.log("check firebase user id here =" +
                this.currentFirebaseUserId);
            //this gets a list of all users
            this.getAllUsers();
            //this gets a list of all groups created by this user (groups for group chat only)
            this.getAllUserGroups();
        }, 2000);
    }
    getAllUsers() {
        this.listOfUsers = new Array();
        this.chatService.getAllUsers().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["take"])(1)).subscribe((result) => {
            // console.log("getting list of all users");
            result.forEach((r) => {
                if (r.payload.doc.data()["email"] != this.chatService.currentUser.email) {
                    this.listOfUsers.push(r);
                }
            });
        });
    }
    getAllUserGroups() {
        try {
            //get all groups for group chats
            this.listOfGroups2 = new Array();
            // console.log("listOfGroups2 =");
            // console.log(this.listOfGroups2);
            this.listOfGroups2.forEach((item) => {
                // console.log("item");
                // console.log(item.payload.doc.data());
            });
            this.chatService.getAllGroups2().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["take"])(1)).subscribe((result) => {
                result.forEach((r) => {
                    if (r.payload.doc.data()["type"] == "group") {
                        // console.log("group id="+r.payload.doc.id);
                        // if(this.listOfGroups2.find(item =>item.payload.doc.data()['id'] == r.payload.doc.id)) {
                        //   console.log("found similar id ="+r.payload.doc.id);
                        // } else {
                        //   console.log("not found...pushing...");
                        //    this.listOfGroups2.push(r);
                        // }
                        this.listOfGroups2.push(r);
                    }
                });
            });
        }
        catch (err) {
            console.log(err);
        }
    }
    doRefresh(event) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            this.loading = true;
            let errmessage = "";
            yield new Promise(() => {
                console.log("Begin async operation");
                setTimeout(() => {
                    try {
                        this.getAllUsers();
                        this.getAllUserGroups();
                        console.log("Async operation has ended");
                        event.target.complete();
                        this.loading = false;
                    }
                    catch (err) {
                        this.loading = false;
                        console.log(err);
                    }
                }, 2000);
            }).catch((error) => console.log(error));
        });
    }
    GroupChat(id, title) {
        // console.log("group id passed ="+id);
        // console.log("current user's id in firebase ="+this.currentFirebaseUserId);
        let obs2 = this.chatService.findGroupById(id);
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["forkJoin"])(obs2).subscribe((res) => {
            // console.log("res");
            // console.log(res);
            for (let data of res) {
                // console.log("data");
                // console.log(data.payload.id);
                this.navCtrl.navigateRoot(`/chat/${data.payload.id}`);
                //use following if passing 2 parameters
                // this.router.navigateByUrl(`/chat/${data.payload.id}/${this.currentFirebaseUserId}`);
            }
            // for (let data of res) {
            //   if (data.length > 0) {
            //     console.log("found an existing group with this group id ="+data[0].id);
            //     this.groupId = data[0].id;
            //     this.router.navigateByUrl(`/chat/${this.groupId}`);
            //   }
            // }
        });
    }
    //---------one on one chat
    oneOnOneChat(email1, userName2) {
        //creating group name--------------------------------- stored in this.titleCheck (ordered alphabatically from both users' nickname)
        let userName1 = this.chatService.currentUser.userName;
        let x = userName1.localeCompare(userName2, undefined, {
            numeric: true,
            sensitivity: "base",
        });
        if (x == -1) {
            // console.log("userName1 will come first");
            this.titleCheck = "oOc_" + userName1 + "&" + userName2;
            console.log("this.titlecheck =" + this.titleCheck);
        }
        else {
            // console.log("userName2 will come first");
            this.titleCheck = "oOc_" + userName2 + "&" + userName1;
            console.log("this.titlecheck =" + this.titleCheck);
        }
        let obs1 = this.findGroup(this.titleCheck);
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["forkJoin"])(obs1).subscribe((res) => {
            for (let data of res) {
                if (data.length > 0) {
                    console.log("found an existing group with this group id =" + data[0].id);
                    this.groupId = data[0].id;
                    this.navCtrl.navigateRoot(`/chat/${this.groupId}`);
                }
                else {
                    console.log("group not found--in create group section"); //group not available--create group
                    setTimeout(() => {
                        this.addUser(email1);
                        console.log(this.users);
                        // this.readyToCreateOneOnOneGroup();
                        // this.groupId  is assigned with new group id in createGroup
                    }, 1000);
                    setTimeout(() => {
                        this.readyToCreateOneOnOneGroup();
                        // this.groupId  is assigned with new group id in createGroup()
                    }, 2000);
                }
            }
        });
    }
    findGroup(title) {
        let group = this.db
            .collection("groupsTaskTracker", (ref) => ref.where("title", "==", title))
            .valueChanges({ idField: "id" })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["take"])(1));
        return group;
    }
    addUser(participant1) {
        this.participant = participant1;
        let obs = this.chatService.findUser(this.participant);
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["forkJoin"])(obs).subscribe((res) => {
            for (let data of res) {
                if (data.length > 0) {
                    if (this.users.indexOf(data[0]) > -1) {
                    }
                    else {
                        this.users.push(data[0]);
                    }
                }
            }
            this.participant = "";
        });
    }
    readyToCreateOneOnOneGroup() {
        this.createGroup(this.titleCheck, this.users).then((res) => {
            console.log("group created");
            // this.router.navigateByUrl('/chats');
            this.navCtrl.navigateRoot(`/chat/${this.groupId}`);
        });
        this.users = [];
    }
    createGroup(title, users) {
        let current = {
            email: this.chatService.currentUser.email,
            id: this.chatService.currentUserIdFromFirebaseSetFromHomePage,
            userName: this.chatService.currentUser.userName,
        };
        let allUsers = [current];
        allUsers.push(...users);
        return this.db
            .collection("groupsTaskTracker")
            .add({
            title: title,
            type: "OneOnOne",
            users: allUsers,
        })
            .then((res) => {
            // console.log("new group's id ="+res.id);
            this.groupId = res.id;
            let promises = [];
            for (let usr of allUsers) {
                let oneAdd = this.db
                    .collection(`usersTaskTracker/${usr.id}/groups`)
                    .add({
                    id: res.id,
                    type: "OneOnOne",
                });
                promises.push(oneAdd);
            }
            return Promise.all(promises);
        });
    }
    ngOnDestroy() {
        console.log("ngOnDestroy() executed");
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    }
};
GroupChatPage.ctorParameters = () => [
    { type: src_app_Services_chat_service__WEBPACK_IMPORTED_MODULE_2__["ChatService"] },
    { type: _angular_fire_firestore__WEBPACK_IMPORTED_MODULE_4__["AngularFirestore"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["NavController"] }
];
GroupChatPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-group-chat",
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./group-chat.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/Pages/group-chat/group-chat.page.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./group-chat.page.scss */ "./src/app/Pages/group-chat/group-chat.page.scss")).default]
    })
], GroupChatPage);



/***/ })

}]);
//# sourceMappingURL=group-chat-group-chat-module-es2015.js.map