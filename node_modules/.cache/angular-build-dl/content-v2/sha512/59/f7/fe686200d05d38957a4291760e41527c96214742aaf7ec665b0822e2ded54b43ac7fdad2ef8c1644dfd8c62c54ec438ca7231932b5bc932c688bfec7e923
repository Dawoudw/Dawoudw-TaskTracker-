{"version":3,"sources":["webpack:///src/app/Pages/start-chat/start-chat.page.html","webpack:///src/app/Pages/start-chat/start-chat-routing.module.ts","webpack:///src/app/Pages/start-chat/start-chat.module.ts","webpack:///src/app/Pages/start-chat/start-chat.page.scss","webpack:///src/app/Pages/start-chat/start-chat.page.ts"],"names":["routes","path","component","StartChatPageRoutingModule","imports","forChild","exports","StartChatPageModule","declarations","StartChatPage","chatService","navCtrl","router","currentFirebaseUserId","currentUserIdFromFirebaseSetFromHomePage","listOfUsers","currentUserEmail","currentUser","email","users","Array","selectedUsers","participant","participant1","title","console","log","user","findUser","subscribe","result","id","setTimeout","getAllUsers","events","e","snapshot","outlet","deactivate","mySelect","open","forEach","r","payload","doc","data","userName","push","i","splice","u","createGroup","then","res","navigateRoot","groupId","back","reset","selector","template"],"mappings":"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","file":"start-chat-start-chat-module-es5.js","sourcesContent":["export default \"<!-- ////////////////////////////////////////////////////////////// -->\\n<ion-header translucent=\\\"false\\\">\\n  <ion-toolbar>\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\" (click)=\\\"back()\\\">\\n      <ion-icon\\n        slot=\\\"icon-only\\\"\\n        size=\\\"large\\\"\\n        name=\\\"chevron-back-outline\\\"\\n      ></ion-icon>\\n    </ion-label>\\n\\n    <ion-label position=\\\"fixed\\\" color=\\\"primary\\\">\\n      <p\\n        style=\\\"\\n          font-size: 18px;\\n\\n          text-align: center !important;\\n        \\\"\\n      >\\n        Create New Group Chat\\n      </p>\\n    </ion-label>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button\\n        text=\\\"\\\"\\n        routerLink=\\\"/tasktracker/group-chat\\\"\\n      ></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" calss=\\\"ion-no-padding ion-no-margin\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row style=\\\"justify-items: left\\\">\\n          <ion-col class=\\\"ion-no-margin ion-no-padding\\\">\\n            <ion-list>\\n              <ion-item detail=\\\"false\\\">\\n                <ion-label position=\\\"floating\\\">\\n                  Group Title <ion-text color=\\\"danger\\\"> * </ion-text></ion-label\\n                >\\n                <ion-input [(ngModel)]=\\\"title\\\"></ion-input>\\n              </ion-item>\\n\\n              <ion-item detail=\\\"true\\\" (click)=\\\"openSelect()\\\">\\n                <ion-buttons>\\n                  <!-- <ion-icon name=\\\"add\\\" slot=\\\"start\\\">\\n                    </ion-icon> -->\\n                  <ion-label>\\n                    Select Group Members<ion-text color=\\\"danger\\\"> * </ion-text>\\n                  </ion-label>\\n                </ion-buttons>\\n\\n                <ion-select\\n                  hidden=\\\"true\\\"\\n                  #lstallusers\\n                  #ddlUsers\\n                  [(ngModel)]=\\\"selectedUsers\\\"\\n                  name=\\\"lstallusers\\\"\\n                  multiple\\n                  okText=\\\"OK\\\"\\n                  cancelText=\\\"Cancel\\\"\\n                  [selectedText]=\\\"\\\"\\n                >\\n                  <ion-select-option\\n                    *ngFor=\\\"let item of listOfUsers\\\"\\n                    [value]=\\\"item\\\"\\n                    selectedText=\\\"\\\"\\n                  >\\n                    {{ item.userName }}\\n                  </ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n            </ion-list>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col\\n            class=\\\"ion-no-padding ion-no-margin\\\"\\n            size=\\\"12\\\"\\n            class=\\\"ion-border\\\"\\n            color=\\\"light\\\"\\n          >\\n            <!-- <ion-item-divider color=\\\"secondary\\\" mode=\\\"ios\\\" outline=\\\"true\\\">\\n              <ion-label><p>Group Members</p></ion-label>\\n            </ion-item-divider> -->\\n\\n            <ion-list\\n              class=\\\"ion-no-padding ion-no-margin\\\"\\n              lines=\\\"none\\\"\\n              detail=\\\"false\\\"\\n              ngDefaultControl\\n              [(ngModel)]=\\\"selectedUsers\\\"\\n              name=\\\"lstusers\\\"\\n              #lstusers\\n            >\\n              <ion-chip\\n                *ngFor=\\\"let item of selectedUsers;let i =index\\\"\\n                color=\\\"primary\\\"\\n                mode=\\\"ios\\\"\\n                outline=\\\"true\\\"\\n                style=\\\"height: auto\\\"\\n              >\\n                <ion-avatar color=\\\"dark\\\">\\n                  <!-- <img src=\\\"../assets/images/avatar.svg\\\"/> -->\\n                  <text-avatar  text ={{item.userName}}></text-avatar>\\n                </ion-avatar>\\n                <ion-label position=\\\"stacked\\\">\\n                  {{item.userName}}\\n                  <ion-note position=\\\"stacked\\\"\\n                    ><p>{{item.email}}</p>\\n                  </ion-note></ion-label\\n                >\\n                <ion-icon\\n                  name=\\\"close\\\"\\n                  class=\\\"ion-float-right\\\"\\n                  color=\\\"danger\\\"\\n                  (click)=\\\"removeUser(i)\\\"\\n                ></ion-icon>\\n              </ion-chip>\\n            </ion-list>\\n          </ion-col>\\n        </ion-row>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-footer>\\n  <ion-button\\n    class=\\\"ion-text-capitalize ion-margin\\\"\\n    color=\\\"primary\\\"\\n    expand=\\\"block\\\"\\n    (click)=\\\"createGroup()\\\"\\n    [disabled]=\\\"!title||selectedUsers.length<1\\\"\\n    >Create\\n  </ion-button>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StartChatPage } from './start-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StartChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StartChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StartChatPageRoutingModule } from './start-chat-routing.module';\nimport {TextAvatarModule} from '../../directives/text-avatar.directive.module'\nimport { StartChatPage } from './start-chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StartChatPageRoutingModule,\n    TextAvatarModule\n  ],\n  declarations: [StartChatPage]\n})\nexport class StartChatPageModule {}\n","export default \"/* Set the width to the full container and center the content */\\nion-select {\\n  /* Applies to the value and placeholder color */\\n  color: #545ca7;\\n  color: var(--ion-color-primary);\\n  /* Set a different placeholder color */\\n  --placeholder-color:var(--ion-color-primary) ;\\n  /* Set full opacity on the placeholder */\\n  --placeholder-opacity: 1;\\n}\\nion-select {\\n  width: 100%;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWphc3JhbWFuaS9PdGhlci13ZWJkZXYvaW9uaWMvVGFzay1UcmFja2VyLURldjIwMjAwODMwL3NyYy9hcHAvUGFnZXMvc3RhcnQtY2hhdC9zdGFydC1jaGF0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvUGFnZXMvc3RhcnQtY2hhdC9zdGFydC1jaGF0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrREFBQTtBQUNBO0VBQ0ksK0NBQUE7RUFDQSxjQUFBO0VBQ0EsK0JBQUE7RUFDQSxzQ0FBQTtFQUNBLDZDQUFBO0VBRUEsd0NBQUE7RUFDQSx3QkFBQTtBQ0FKO0FERUU7RUFDRSxXQUFBO0VBRUEsdUJBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3N0YXJ0LWNoYXQvc3RhcnQtY2hhdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTZXQgdGhlIHdpZHRoIHRvIHRoZSBmdWxsIGNvbnRhaW5lciBhbmQgY2VudGVyIHRoZSBjb250ZW50ICovXG5pb24tc2VsZWN0IHtcbiAgICAvKiBBcHBsaWVzIHRvIHRoZSB2YWx1ZSBhbmQgcGxhY2Vob2xkZXIgY29sb3IgKi9cbiAgICBjb2xvcjogIzU0NWNhNztcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICAgIC8qIFNldCBhIGRpZmZlcmVudCBwbGFjZWhvbGRlciBjb2xvciAqL1xuICAgIC0tcGxhY2Vob2xkZXItY29sb3I6dmFyKC0taW9uLWNvbG9yLXByaW1hcnkpIDtcbiAgXG4gICAgLyogU2V0IGZ1bGwgb3BhY2l0eSBvbiB0aGUgcGxhY2Vob2xkZXIgKi9cbiAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XG4gIH07XG4gIGlvbi1zZWxlY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICBcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfTtcbiAgXG4vLyAgICIsIi8qIFNldCB0aGUgd2lkdGggdG8gdGhlIGZ1bGwgY29udGFpbmVyIGFuZCBjZW50ZXIgdGhlIGNvbnRlbnQgKi9cbmlvbi1zZWxlY3Qge1xuICAvKiBBcHBsaWVzIHRvIHRoZSB2YWx1ZSBhbmQgcGxhY2Vob2xkZXIgY29sb3IgKi9cbiAgY29sb3I6ICM1NDVjYTc7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIC8qIFNldCBhIGRpZmZlcmVudCBwbGFjZWhvbGRlciBjb2xvciAqL1xuICAtLXBsYWNlaG9sZGVyLWNvbG9yOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSA7XG4gIC8qIFNldCBmdWxsIG9wYWNpdHkgb24gdGhlIHBsYWNlaG9sZGVyICovXG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcbn1cblxuaW9uLXNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild, OnDestroy } from \"@angular/core\";\nimport { ChatService } from \"src/app/Services/chat.service\";\n\nimport { NavController, IonSelect } from \"@ionic/angular\";\nimport { RouterOutlet, Router, ActivationStart } from \"@angular/router\";\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: \"app-start-chat\",\n  templateUrl: \"./start-chat.page.html\",\n  styleUrls: [\"./start-chat.page.scss\"],\n})\nexport class StartChatPage implements OnInit ,OnDestroy {\n  constructor(\n    public chatService: ChatService,\n    private navCtrl: NavController,\n    private router: Router\n  ) {}\n\n  currentFirebaseUserId = this.chatService.currentUserIdFromFirebaseSetFromHomePage;\n  listOfUsers = [];\n  currentUserEmail = this.chatService.currentUser.email;\n  users: any[] = new Array();\n  selectedUsers: any[] = new Array();\n\n  participant = \"\";\n  participant1 = \"\";\n  title = \"\";\n  @ViewChild(RouterOutlet) outlet: RouterOutlet;\n  @ViewChild(\"lstallusers\") mySelect: IonSelect;\n  ngOnInit() {\n    //getting firebase userid if not found\n    if(this.currentFirebaseUserId == null || this.currentFirebaseUserId == '') {\n      console.log(\"firebase userid not found\");\n      let user = this.chatService.findUser(this.currentUserEmail);\n      //console.log(user);  //observable\n      user.subscribe((result) => {\n        // console.log(\"firebase user id retrieved =\"+result[0].id);\n        this.chatService.currentUserIdFromFirebaseSetFromHomePage = result[0].id;\n        this.currentFirebaseUserId = result[0].id;\n      });\n    }\n    setTimeout(() => {\n      console.log(\n        \"check firebase user id here =\" +\n          this.currentFirebaseUserId\n      );\n      //this gets a list of all users\n      this.getAllUsers();\n      this.router.events.subscribe((e) => {\n      if (e instanceof ActivationStart && e.snapshot.outlet === \"start-chat\")\n        this.outlet.deactivate();\n      });\n    }, 2000);\n  }\n  openSelect() {\n    this.mySelect.open();\n  }\n  getAllUsers() {\n    this.listOfUsers = [];\n    this.chatService.getAllUsers().subscribe((result) => {\n      result.forEach((r) => {\n        if (\n          r.payload.doc.data()[\"email\"] != this.chatService.currentUser.email\n        ) {\n          // console.log(\"check following\");\n          // console.log(r.payload.doc.data());\n          // console.log(\"firebase user id of this user =\"+r.payload.doc.id);\n          let user = {\n            email: r.payload.doc.data()[\"email\"],\n            userName: r.payload.doc.data()[\"userName\"],\n            id: r.payload.doc.id\n          };\n          this.listOfUsers.push(user);\n        }\n      });\n    });\n    console.log(\"getAllUsers\", this.listOfUsers);\n  }\n  removeUser(i) {\n    this.selectedUsers.splice(i, 1);\n  }\n\n  // addUser(obj) {\n  //   this.users.push(obj);\n  //   // try {\n  //   //   console.log(\"obj \", obj);\n  //   //   if (obj) {\n  //   //     for (let i in obj) {\n  //   //       console.log(\" for (let i in obj)\", i);\n  //   //     }\n  //   //   }\n  //   console.log(\n  //     \"when calling addUser function, this.selectedUsers array =\",\n  //     this.users\n  //   );\n  //   //   obj = null;\n  //   // } catch (err) {\n  //   //   console.log(err);\n  //   // }\n  // }\n  // addUser(participant1) {\n  //   // console.log(\"when calling addUser function, users array =\");\n  //   // console.log(this.users);\n  //   this.participant = participant1;\n  //   let obs = this.chatService.findUser(this.participant);\n  //   forkJoin(obs).subscribe(res => {\n  //     for (let data of res) {\n  //       if (data.length > 0) {\n  //         if(this.users.indexOf(data[0]) > -1) {\n  //         } else {\n  //           console.log(\"data[0]\");\n  //           console.log(data[0]);\n  //           this.users.push(data[0]);\n  //         }\n  //       }\n  //     }\n  //     this.participant = '';\n  //   });\n  // }\n\n  createGroup() {\n    this.users = new Array();\n    // console.log(\"this.title =\"+this.title);\n    // console.log(\"this.users =\");\n    // console.log(this.users);\n\n    // console.log(\"Selected users array length: \");\n    // console.log(this.selectedUsers.length);\n    this.selectedUsers.forEach((u) => {\n      // console.log(\"u =\");\n      // console.log(u);\n      this.users.push(u);\n    });\n    // console.log(\"users array length: \");\n    // console.log(this.users.length);\n    // console.log(this.users);\n    // console.log(\"current user's firebase uid =\"+this.chatService.currentUserIdFromFirebaseSetFromHomePage);\n\n    this.chatService.createGroup(this.title, this.users).then((res) => {\n      console.log(\"group created\");\n      // console.log(\"res\");\n      // console.log(res);\n      // console.log(res.values);\n      // this.router.navigateByUrl('/tasktracker/group-chat');\n      this.navCtrl.navigateRoot(`/chat/${this.chatService.groupId}`);\n    });\n    this.users = [];\n    this.selectedUsers = [];\n    this.title = \"\";\n    //this.navCtrl.navigateRoot([\"/tasktracker/group-chat\"]);\n  }\n\n  back() {\n    this.navCtrl.back();\n  }\n  reset() {\n    this.listOfUsers = [];\n    this.currentUserEmail = this.chatService.currentUser.email;\n    this.users = [];\n    this.selectedUsers = [];\n\n    // this.participant = \"\";\n    // this.participant1 = \"\";\n    this.title = \"\";\n  }\n  ionViewWillLeave()\n  {\n    this.reset();\n  }\n  ngOnDestroy() {\n    this.reset();\n  }\n}\n"]}