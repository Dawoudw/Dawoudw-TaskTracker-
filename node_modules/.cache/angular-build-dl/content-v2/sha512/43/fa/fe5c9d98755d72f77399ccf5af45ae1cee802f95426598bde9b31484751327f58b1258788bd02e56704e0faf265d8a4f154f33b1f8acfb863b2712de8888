{"version":3,"sources":["webpack:///src/app/Pages/tab3/tab3.page.html","webpack:///src/app/Models/task.ts","webpack:///src/app/Pages/tab3/tab3-routing.module.ts","webpack:///src/app/Pages/tab3/tab3.module.ts","webpack:///src/app/Pages/tab3/tab3.page.scss","webpack:///src/app/Pages/tab3/tab3.page.ts","webpack:///src/app/Services/tasks.service.ts"],"names":["Task","id","taskName","taskDesc","progress","taskdate","routes","path","component","loadChildren","then","m","TaskDetialPageModule","Tab3PageRoutingModule","imports","forChild","exports","Tab3PageModule","declarations","Tab3Page","tasksService","router","isLoading","taskSub","myTasks","subscribe","tasks","loadedTasks","fetchMyTasks","taskId","slidingItem","console","log","close","navigate","task","deleteTask","unsubscribe","selector","template","TasksService","httpClient","_myTasks","userId","get","pipe","resData","key","hasOwnProperty","push","details","parseFloat","sort","a","b","Date","parse","next","taskData","taskProgress","updatedTasks","length","updatedTaskIndex","findIndex","tk","oldTask","toString","put","filter","t","asObservable","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;;QAAaA,I,GACT,cACWC,EADX,EAEWC,QAFX,EAGWC,QAHX,EAIWC,QAJX,EAKWC,QALX,EAKuB;AAAA;;AAJZ,WAAAJ,EAAA,GAAAA,EAAA;AACA,WAAAC,QAAA,GAAAA,QAAA;AACA,WAAAC,QAAA,GAAAA,QAAA;AACA,WAAAC,QAAA,GAAAA,QAAA;AACA,WAAAC,QAAA,GAAAA,QAAA;AAAe,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF9B,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AACED,UAAI,EAAE,SADR;AAEEE,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,8DAA4CC,IAA5C,CAAkD,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,oBAAN;AAAA,SAAnD,CAAN;AAAA;AAFhB,KALqB,CAAvB;;AAeA,QAAaC,qBAAqB;AAAA;AAAA,KAAlC;;AAAaA,yBAAqB,6DAJjC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERU,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAaI,cAAc;AAAA;AAAA,KAA3B;;AAAaA,kBAAc,6DAV1B,+DAAS;AACRH,aAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsB,CAAC;AAAER,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OAAD,CAAtB,CAJO,EAKP,0EALO,CADD;AAQRU,kBAAY,EAAE,CAAC,mDAAD;AARN,KAAT,CAU0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACrBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAaE,QAAQ;AAKnB,wBAAoBC,YAApB,EAAwDC,MAAxD,EAAwE;AAAA;;AAApD,aAAAD,YAAA,GAAAA,YAAA;AAAoC,aAAAC,MAAA,GAAAA,MAAA;AADxD,aAAAC,SAAA,GAAY,KAAZ;AAC0E;;AALvD;AAAA;AAAA,mCAOX;AAAA;;AACN,eAAKC,OAAL,GAAe,KAAKH,YAAL,CAAkBI,OAAlB,CAA0BC,SAA1B,CAAoC,UAAAC,KAAK,EAAI;AAC1D,iBAAI,CAACC,WAAL,GAAmBD,KAAnB;AACD,WAFc,CAAf;AAGD;AAXkB;AAAA;AAAA,2CAaH;AAAA;;AACd;AAEA,eAAKJ,SAAL,GAAiB,IAAjB,CAHc,CAKd;AACA;;AACA,eAAKF,YAAL,CAAkBQ,YAAlB,CAA+B,GAA/B,EAAoCH,SAApC,CAA8C,YAAM;AAClD,kBAAI,CAACH,SAAL,GAAiB,KAAjB;AACD,WAFD,EAPc,CASV;AACL;AAvBkB;AAAA;AAAA,+BA0BZO,MA1BY,EA0BIC,WA1BJ,EA0B+B;AAChDC,iBAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,iBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAA5B;AACAC,qBAAW,CAACG,KAAZ;AACA,eAAKZ,MAAL,CAAYa,QAAZ,CAAqB,CAAC,GAAD,EAAM,aAAN,EAAqB,oBAArB,EAA2CL,MAA3C,CAArB;AACD;AA/BkB;AAAA;AAAA,iCAiCVM,IAjCU,EAiCEL,WAjCF,EAiC6B;AAC9CA,qBAAW,CAACG,KAAZ;AACA,eAAKb,YAAL,CAAkBgB,UAAlB,CAA6BD,IAAI,CAAClC,EAAlC;AACD;AApCkB;AAAA;AAAA,sCAsCR;AACT,cAAG,KAAKsB,OAAR,EAAgB;AACd,iBAAKA,OAAL,CAAac,WAAb;AACD;AACF;AA1CkB;;AAAA;AAAA,OAArB;;;;cAKoC;;cAA8B;;;;AALrDlB,YAAQ,6DALpB,gEAAU;AACTmB,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8FAFS;;;;AAAA,KAAV,CAKoB,GAARpB,QAAQ,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAaqB,YAAY;AAkJvB,4BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA,CAAwB,CAjJ5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,aAAAC,QAAA,GAAW,IAAI,oDAAJ,CAA4B,EAA5B,CAAX;AA4HsC;;AAlJvB;AAAA;AA4BvB;AA5BuB,qCA6BVC,MA7BU,EA6BM;AAAA;;AAC3B;AACA;AACA,iBAAO,KAAKF,UAAL,CACJG,GADI,oFAEyED,MAFzE,GAIJE,IAJI,CAKH,2DAAI,UAACC,OAAD,EAAa;AACf,gBAAMpB,KAAK,GAAG,EAAd;;AACA,iBAAK,IAAMqB,GAAX,IAAkBD,OAAlB,EAA2B;AACzB,kBAAIA,OAAO,CAACE,cAAR,CAAuBD,GAAvB,CAAJ,EAAiC;AAC/BrB,qBAAK,CAACuB,IAAN,CACE,IAAI,iDAAJ,CACEH,OAAO,CAACC,GAAD,CAAP,CAAa9C,EADf,EAEE6C,OAAO,CAACC,GAAD,CAAP,CAAaZ,IAFf,EAGEW,OAAO,CAACC,GAAD,CAAP,CAAaG,OAHf,EAIEC,UAAU,CAACL,OAAO,CAACC,GAAD,CAAP,CAAa3C,QAAd,CAAV,GAAoC,IAJtC,EAKE0C,OAAO,CAACC,GAAD,CAAP,CAAa1C,QALf,CADF;AASD;AACF;;AACD,mBAAOqB,KAAK,CAAC0B,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAASC,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACjD,QAAb,IAA0BkD,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAChD,QAAb,CAAnC;AAAA,aAAX,CAAP,CAfe,CAegE;AAChF,WAhBD,CALG,EAsBH,2DAAI,UAACqB,KAAD,EAAW;AACb,kBAAI,CAACgB,QAAL,CAAce,IAAd,CAAmB/B,KAAnB;AACD,WAFD,CAtBG,CAAP;AA0BD;AA1DsB;AAAA;AAAA,gCA4DfzB,EA5De,EA4DH;AAClB,iBAAO,KAAKwC,UAAL,CACJG,GADI,oFAEyE3C,EAFzE,GAIJ4C,IAJI,CAKH,2DAAI,UAACa,QAAD,EAAc;AAChB,mBAAO,IAAI,iDAAJ,CACLzD,EADK,EAELyD,QAAQ,CAACvB,IAFJ,EAGLuB,QAAQ,CAACR,OAHJ,EAILC,UAAU,CAACO,QAAQ,CAACtD,QAAV,CAAV,GAAgC,IAJ3B,EAKLsD,QAAQ,CAACrD,QALJ,CAAP;AAOD,WARD,CALG,CAAP;AAeD;AA5EsB;AAAA;AAAA,mCA8EZJ,EA9EY,EA8EA,CACrB;AACD;AAhFsB;AAAA;AAAA,mCAkFZkC,IAlFY,EAkFA;AAAA;;AACrB;AACA;AACA,cAAMN,MAAM,GAAGM,IAAI,CAAClC,EAApB;AACA,cAAMC,QAAQ,GAAGiC,IAAI,CAACjC,QAAtB;AACA,cAAMC,QAAQ,GAAGgC,IAAI,CAAChC,QAAtB;AACA,cAAMwD,YAAY,GAAGxB,IAAI,CAAC/B,QAA1B;AAEA,cAAIwD,YAAJ;AAEA,iBACE,KAAKpC,OAAL,CAAaqB,IAAb,CACE,4DAAK,CAAL,CADF,EAEE,iEAAU,UAACnB,KAAD,EAAW;AACnB,gBAAI,CAACA,KAAD,IAAUA,KAAK,CAACmC,MAAN,IAAgB,CAA9B,EAAiC;AAC/B,qBAAO,MAAI,CAACjC,YAAL,CAAkB,GAAlB,CAAP,CAD+B,CACA;AAChC,aAFD,MAEO;AACL,qBAAO,gDAAGF,KAAH,CAAP;AACD;AACF,WAND,CAFF,EASE,iEAAU,UAACA,KAAD,EAAW;AACnB,gBAAMoC,gBAAgB,GAAGpC,KAAK,CAACqC,SAAN,CAAgB,UAACC,EAAD;AAAA,qBAAQA,EAAE,CAAC/D,EAAH,KAAU4B,MAAlB;AAAA,aAAhB,CAAzB;AACA+B,wBAAY,sBAAOlC,KAAP,CAAZ;AACA,gBAAMuC,OAAO,GAAGL,YAAY,CAACE,gBAAD,CAA5B;AACAF,wBAAY,CAACE,gBAAD,CAAZ,GAAiC,IAAI,iDAAJ,CAC/BG,OAAO,CAAChE,EADuB,EAE/BC,QAF+B,EAG/BC,QAH+B,EAI/BwD,YAJ+B,EAK/B,IAAIJ,IAAJ,GAAWW,QAAX,EAL+B,CAAjC;AAOA,mBAAO,MAAI,CAACzB,UAAL,CAAgB0B,GAAhB,oFACuEtC,MADvE,GAC+E,kBAC/E+B,YAAY,CAACE,gBAAD,CADmE,CAD/E,CAAP,CAXmB,CAchB;AACJ,WAfD,CATF,GA0BA,2DAAI,YAAM;AACR,kBAAI,CAACpB,QAAL,CAAce,IAAd,CAAmBG,YAAnB;AACD,WAFD,CA3BF;AA+BD;AA3HsB;AAAA;AAAA,mCA6HZ/B,MA7HY,EA6HI;AAAA;;AACzB;AACA;AACA;AACA;AAEA,eAAKY,UAAL,8FAEgFZ,MAFhF,GAIGgB,IAJH,CAKI,iEAAU,YAAM;AACd,mBAAO,MAAI,CAACrB,OAAZ;AACD,WAFD,CALJ,EAQI,4DAAK,CAAL,CARJ,EASI,2DAAI,UAACE,KAAD,EAAW;AACb,kBAAI,CAACgB,QAAL,CAAce,IAAd,CAAmB/B,KAAK,CAAC0C,MAAN,CAAa,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACpE,EAAF,KAAS4B,MAAhB;AAAA,aAAb,CAAnB;AACD,WAFD,CATJ;AAaD;AAhJsB;AAAA;AAAA,4BAwBT;AACZ,iBAAO,KAAKa,QAAL,CAAc4B,YAAd,EAAP;AACD;AA1BsB;;AAAA;AAAA,OAAzB;;;;cAkJkC;;;;AAlJrB9B,gBAAY,6DAHxB,iEAAW;AACV+B,gBAAU,EAAE;AADF,KAAX,CAGwB,GAAZ/B,YAAY,CAAZ","file":"tab3-tab3-module-es5.js","sourcesContent":["export default \"<!-- <ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon name=\\\"list-circle-outline\\\" size=\\\"large\\\" slot=\\\"start\\\"></ion-icon>\\r\\n    <ion-title slot=\\\"start\\\" mode=\\\"md\\\" position=\\\"fixed\\\">My Task List</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" ion-text-center>\\r\\n        <div *ngIf=\\\"isLoading\\\" class=\\\"ion-text-center\\\">\\r\\n          <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"ion-text-center\\\"\\r\\n          *ngIf=\\\"!isLoading && loadedTasks.length <= 0\\\"\\r\\n        >\\r\\n          <p>You don't have any tasks.</p>\\r\\n        </div>\\r\\n        <ion-list *ngIf=\\\"!isLoading\\\">\\r\\n          <ion-item-sliding *ngFor=\\\"let tk of loadedTasks\\\" #slidingItem>\\r\\n            <ion-item\\r\\n              [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', tk.id ]\\\"\\r\\n            >\\r\\n              <ion-label>\\r\\n                <h1>{{ tk.taskName }}</h1>\\r\\n                <h2>{{ tk.progress | percent}}</h2>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item-options>\\r\\n              <ion-item-option\\r\\n                color=\\\"secondary\\\"\\r\\n                (click)=\\\"onEdit(tk.id, slidingItem)\\\"\\r\\n              >\\r\\n                <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n              </ion-item-option>\\r\\n              <ion-item-option color=\\\"danger\\\">\\r\\n                <ion-icon\\r\\n                  name=\\\"trash\\\"\\r\\n                  slot=\\\"icon-only\\\"\\r\\n                  (click)=\\\"onDelete(tk, slidingItem)\\\"\\r\\n                ></ion-icon>\\r\\n              </ion-item-option>\\r\\n            </ion-item-options>\\r\\n          </ion-item-sliding>\\r\\n     \\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content> -->\\r\\n<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"list-circle-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> My Task List </ion-label>\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button>\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid no-padding ion-no-margin>\\r\\n    <ion-row>\\r\\n      <ion-col\\r\\n        *ngIf=\\\"isLoading\\\"\\r\\n        size=\\\"12\\\"\\r\\n        size-lg=\\\"6\\\"\\r\\n        offset-med=\\\"3\\\"\\r\\n        offset-lg=\\\"3\\\"\\r\\n      >\\r\\n        <div class=\\\"ion-text-center\\\">\\r\\n          <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length <= 0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-chip class=\\\"ion-text-center\\\" outline color=\\\"danger\\\">\\r\\n          <ion-label>\\r\\n            <b>You don't have any assigend tasks </b>\\r\\n          </ion-label>\\r\\n        </ion-chip>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length >0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"primary\\\">\\r\\n              <ion-label> Tasks <b>({{loadedTasks.length}}) </b></ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"warning\\\">\\r\\n              <ion-label> In-Progress <b>({{1}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"success\\\">\\r\\n              <ion-label> Done <b>({{1}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-list>\\r\\n          <ion-row\\r\\n            *ngFor=\\\"let tk of loadedTasks let i = index\\\"\\r\\n            style=\\\"justify-items: left;\\\"\\r\\n          >\\r\\n            <ion-col>\\r\\n              <ion-item-sliding #slidingItem>\\r\\n                <ion-item\\r\\n                  [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', tk.id ]\\\"\\r\\n                >\\r\\n                  <ion-label\\r\\n                    class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\r\\n                  >\\r\\n                    <h3><b> {{i+1}}- </b>{{ tk.taskName}}</h3>\\r\\n\\r\\n                    <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\r\\n                      {{tk.taskdate}}\\r\\n                    </ion-note>\\r\\n                    <ion-badge\\r\\n                      slot=\\\"end\\\"\\r\\n                      style=\\\"float: right;\\\"\\r\\n                      [color]=\\\"\\r\\n                    tk.progress  > 0.99\\r\\n                          ? 'success'\\r\\n                          : tk.progress  < 0.50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ tk.progress | percent}}\\r\\n                    </ion-badge>\\r\\n                \\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item-options>\\r\\n                  <ion-item-option\\r\\n                    color=\\\"secondary\\\"\\r\\n                    (click)=\\\"onEdit(tk.id, slidingItem)\\\"\\r\\n                  >\\r\\n                    <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                  <ion-item-option color=\\\"danger\\\">\\r\\n                    <ion-icon\\r\\n                      name=\\\"trash\\\"\\r\\n                      slot=\\\"icon-only\\\"\\r\\n                      (click)=\\\"onDelete(tk, slidingItem)\\\"\\r\\n                    ></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                </ion-item-options>\\r\\n              </ion-item-sliding>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export class Task{\r\n    constructor(\r\n        public id: string,\r\n        public taskName: string,\r\n        public taskDesc: string,\r\n        public progress: number,\r\n        public taskdate:any){}\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Tab3Page } from './tab3.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab3Page,\r\n  },\r\n  {\r\n    path: ':taskId',\r\n    loadChildren: () => import('../task-detial/task-detial.module').then( m => m.TaskDetialPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Tab3PageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab3Page } from './tab3.page';\r\n \r\n\r\nimport { Tab3PageRoutingModule } from './tab3-routing.module'\r\n \r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\r\n    Tab3PageRoutingModule,\r\n  ],\r\n  declarations: [Tab3Page]\r\n})\r\nexport class Tab3PageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { IonItemSliding } from '@ionic/angular';\r\nimport { Task } from '../../Models/task';\r\nimport { TasksService } from '../../Services/tasks.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tab3',\r\n  templateUrl: 'tab3.page.html',\r\n  styleUrls: ['tab3.page.scss']\r\n})\r\nexport class Tab3Page implements OnInit, OnDestroy{\r\n\r\n  loadedTasks: Task[];\r\n  private taskSub: Subscription;\r\n  isLoading = false;\r\n  constructor(private tasksService: TasksService, private router: Router) {}\r\n\r\n  ngOnInit(){\r\n    this.taskSub = this.tasksService.myTasks.subscribe(tasks => {\r\n      this.loadedTasks = tasks;\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    // this.loadedTasks = this.tasksService.myTasks;\r\n\r\n    this.isLoading = true;\r\n\r\n    // Testing\r\n    // TODO: Need to pass the right userId into fetchMyTasks\r\n    this.tasksService.fetchMyTasks('0').subscribe(() => {\r\n      this.isLoading = false;\r\n    }); // Access API\r\n  }\r\n\r\n\r\n  onEdit(taskId: string, slidingItem: IonItemSliding){\r\n    console.log(\"Getting into onEdit\");\r\n    console.log(\"Tast ID is: \", taskId);\r\n    slidingItem.close();\r\n    this.router.navigate(['/', 'tasktracker', 'submit-my-progress', taskId]);\r\n  }\r\n\r\n  onDelete(task: Task, slidingItem: IonItemSliding){\r\n    slidingItem.close();\r\n    this.tasksService.deleteTask(task.id);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.taskSub){\r\n      this.taskSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Task } from \"../Models/task\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map, tap, take, switchMap } from \"rxjs/operators\";\r\nimport { BehaviorSubject, of } from \"rxjs\";\r\n\r\ninterface TaskData {\r\n  task: string;\r\n  details: string;\r\n  id: string;\r\n  taskdate: string;\r\n  userid: string;\r\n  progress: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TasksService {\r\n  // myTasks: Task[] = [\r\n  //   new Task(\r\n  //     't1',\r\n  //     'Test 1',\r\n  //     'Test Desc 1',\r\n  //     0.5\r\n  //   ),\r\n  //   new Task(\r\n  //     't2',\r\n  //     'Test 2',\r\n  //     'Test Desc 2',\r\n  //     0.25\r\n  //   ),\r\n  //   new Task(\r\n  //     't3',\r\n  //     'Test 3',\r\n  //     'Test Desc 3',\r\n  //     0.85\r\n  //   )\r\n  // ];\r\n\r\n  private _myTasks = new BehaviorSubject<Task[]>([]);\r\n\r\n  get myTasks() {\r\n    return this._myTasks.asObservable();\r\n  }\r\n\r\n  // API Access // Get all user tasks \r\n  fetchMyTasks(userId: string) {\r\n    // For now, fetch all the task for the userId 0\r\n    // TODO: change API later\r\n    return this.httpClient\r\n      .get<{ [key: string]: TaskData }>(\r\n        `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?userid=${userId}`\r\n      )\r\n      .pipe(\r\n        map((resData) => {\r\n          const tasks = [];\r\n          for (const key in resData) {\r\n            if (resData.hasOwnProperty(key)) {\r\n              tasks.push(\r\n                new Task(\r\n                  resData[key].id,\r\n                  resData[key].task,\r\n                  resData[key].details,\r\n                  parseFloat(resData[key].progress) * 0.01,\r\n                  resData[key].taskdate\r\n                )\r\n              );\r\n            }\r\n          }\r\n          return tasks.sort((a, b) =>Date.parse(b.taskdate)  - Date.parse(a.taskdate)) ; // order by date DESC\r\n        }),\r\n        tap((tasks) => {\r\n          this._myTasks.next(tasks)\r\n        })\r\n      );\r\n  }\r\n\r\n  getTask(id: string) {\r\n    return this.httpClient\r\n      .get<TaskData>(\r\n        `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?taskid=${id}`\r\n      )\r\n      .pipe(\r\n        map((taskData) => {\r\n          return new Task(\r\n            id,\r\n            taskData.task,\r\n            taskData.details,\r\n            parseFloat(taskData.progress) * 0.01,\r\n            taskData.taskdate\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  getMyTasks(id: string) {\r\n    // return {...this.myTasks.find(p => p.id === id)};\r\n  }\r\n\r\n  updateTask(task: Task) {\r\n    // let index = this.myTasks.findIndex(item => item.id === task.id);\r\n    // this.myTasks[index] = task;\r\n    const taskId = task.id;\r\n    const taskName = task.taskName;\r\n    const taskDesc = task.taskDesc;\r\n    const taskProgress = task.progress;\r\n\r\n    let updatedTasks: Task[];\r\n\r\n    return (\r\n      this.myTasks.pipe(\r\n        take(1),\r\n        switchMap((tasks) => {\r\n          if (!tasks || tasks.length <= 0) {\r\n            return this.fetchMyTasks(\"0\"); // TODO: This userId must be gotten from user service later\r\n          } else {\r\n            return of(tasks);\r\n          }\r\n        }),\r\n        switchMap((tasks) => {\r\n          const updatedTaskIndex = tasks.findIndex((tk) => tk.id === taskId);\r\n          updatedTasks = [...tasks];\r\n          const oldTask = updatedTasks[updatedTaskIndex];\r\n          updatedTasks[updatedTaskIndex] = new Task(\r\n            oldTask.id,\r\n            taskName,\r\n            taskDesc,\r\n            taskProgress,\r\n            new Date().toString()\r\n          );\r\n          return this.httpClient.put(\r\n            `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?taskid=${taskId}`,\r\n            { ...updatedTasks[updatedTaskIndex] }\r\n          ); // ? id: null\r\n        })\r\n      ),\r\n      tap(() => {\r\n        this._myTasks.next(updatedTasks);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteTask(taskId: string) {\r\n    // FAKE DELETING FUNCTION\r\n    // let index = this.myTasks.findIndex(item => item.id === task.id);\r\n    // this.myTasks = this.myTasks.splice(index, 1);\r\n    // console.log(this.myTasks);\r\n\r\n    this.httpClient\r\n      .delete(\r\n        `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?taskid=${taskId}`\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          return this.myTasks;\r\n        }),\r\n        take(1),\r\n        tap((tasks) => {\r\n          this._myTasks.next(tasks.filter((t) => t.id !== taskId));\r\n        })\r\n      );\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n}\r\n"]}