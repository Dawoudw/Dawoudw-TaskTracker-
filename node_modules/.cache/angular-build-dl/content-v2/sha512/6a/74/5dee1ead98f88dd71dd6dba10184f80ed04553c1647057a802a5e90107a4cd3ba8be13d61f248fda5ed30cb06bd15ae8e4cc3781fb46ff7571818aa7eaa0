{"version":3,"sources":["webpack:///src/app/Pages/task-detial/task-detial.page.html","webpack:///src/app/Pages/task-detial/task-detial-routing.module.ts","webpack:///src/app/Pages/task-detial/task-detial.module.ts","webpack:///src/app/Pages/task-detial/task-detial.page.scss","webpack:///src/app/Pages/task-detial/task-detial.page.ts"],"names":["routes","path","component","TaskDetialPageRoutingModule","imports","forChild","exports","TaskDetialPageModule","declarations","TaskDetialPage","route","navCtrl","tasksService","loadedTask","Object","create","paramMap","subscribe","has","navigateBack","taskSub","getTask","get","task","console","log","updateTask","id","deleteTask","fetchMyTasks","loginedUser","userId","unsubscribe","selector","template"],"mappings":"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","file":"task-detial-task-detial-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/tabs/tab3\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title size=\\\"small\\\" color=\\\"primary\\\"><p>My Tasks</p> </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"deleteTask()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- <ion-content>\\r\\n  <ion-input\\r\\n    [(ngModel)]=\\\"loadedTask.taskName\\\"\\r\\n    (focusout)=\\\"updateTask()\\\"\\r\\n    class=\\\"ion-padding\\\"\\r\\n    >Task Name:\\r\\n  </ion-input>\\r\\n  <br />\\r\\n  <ion-input\\r\\n    [(ngModel)]=\\\"loadedTask.progress\\\"\\r\\n    (focusout)=\\\"updateTask()\\\"\\r\\n    class=\\\"ion-padding\\\"\\r\\n    >Task Progress:\\r\\n  </ion-input>\\r\\n  <br />\\r\\n  <ion-textarea\\r\\n    [(ngModel)]=\\\"loadedTask.taskDesc\\\"\\r\\n    (focusout)=\\\"updateTask()\\\"\\r\\n    class=\\\"ion-padding\\\"\\r\\n    >Description</ion-textarea\\r\\n  >\\r\\n  <ion-button color=\\\"danger\\\" (click)=\\\"deleteTask()\\\">Remove</ion-button>\\r\\n</ion-content> -->\\r\\n\\r\\n<!-- Card view  -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Task Title <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input\\r\\n              style=\\\"background-color: transparent;\\\"\\r\\n              required\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.task\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Progress % <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input\\r\\n              style=\\\"background-color: transparent;\\\"\\r\\n              required\\r\\n              type=\\\"number\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.progress\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Description</ion-label\\r\\n            >\\r\\n            <ion-textarea\\r\\n              rows=\\\"20\\\"\\r\\n              cols=\\\"20\\\"\\r\\n              style=\\\"background-color: transparent;\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.details\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-textarea>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n        <!--     \\r\\n        <div class=\\\"ion-padding\\\">\\r\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\"\\r\\n            >Save</ion-button\\r\\n          >\\r\\n        </div> -->\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskDetialPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskDetialPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaskDetialPageRoutingModule } from './task-detial-routing.module';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TaskDetialPageRoutingModule\r\n  ],\r\n  declarations: [TaskDetialPage]\r\n})\r\nexport class TaskDetialPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3Rhc2stZGV0aWFsL3Rhc2stZGV0aWFsLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Task } from '../../Models/task';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { TasksService } from 'src/app/Services/tasks.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-detial',\r\n  templateUrl: './task-detial.page.html',\r\n  styleUrls: ['./task-detial.page.scss'],\r\n})\r\nexport class TaskDetialPage implements OnInit {\r\n\r\n  loadedTask = Object.create(Task); // Variable need to be initialized!!!\r\n  taskSub: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private tasksService: TasksService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(paramMap => {\r\n      if(!paramMap.has('taskId')){\r\n        this.navCtrl.navigateBack('/tasktracker/mytasks');\r\n        return;\r\n      }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n      // *** This code is loading data locally. ***\r\n      // *** Its purpose is for testing the UI  ***\r\n      // ********************************************************************\r\n      // this.tasksService.myTasks.subscribe(tasks => {\r\n      //   this.loadedTask = tasks.find(t => t.id === paramMap.get('taskId'));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n      // })\r\n      // ********************************************************************\r\n\r\n      // TODO: This code need to be active using API\r\n      this.taskSub = this.tasksService.getTask(paramMap.get('taskId')).subscribe(task =>{\r\n        console.log(\"Subscripting: \", task);\r\n        this.loadedTask = task;\r\n      });\r\n\r\n\r\n      // Old code\r\n      // this.loadedTask = this.tasksService.getMyTasks(paramMap.get('taskId'));\r\n    })\r\n  }\r\n\r\n  updateTask(){\r\n    console.log(\"The task is going to be updated with data: \", this.loadedTask);\r\n    this.tasksService.updateTask(this.loadedTask).subscribe();\r\n  }\r\n\r\n  deleteTask(){\r\n    console.log(\"Trying to delete task with ID: \", this.loadedTask.id);\r\n    this.tasksService.deleteTask(this.loadedTask.id).subscribe();\r\n    this.navCtrl.navigateBack(\"/tasktracker/submit-my-progress\");\r\n    return;\r\n  }\r\n\r\n  // Update MyTask list from API\r\n  onViewWillEnter(){\r\n    this.tasksService.fetchMyTasks(this.tasksService.loginedUser.userId); // TODO: This should be the actual current login user\r\n  }\r\n\r\n  onViewWillLeave(){\r\n    this.tasksService.updateTask(this.loadedTask);\r\n  }\r\n \r\n\r\n  ngOnDestroy(){\r\n    if(this.taskSub){\r\n      this.taskSub.unsubscribe();\r\n    }\r\n  }\r\n}"]}