{"version":3,"sources":["webpack:///src/app/Components/users-progress/users-progress.component.html","webpack:///src/app/Pages/tab1/tab1.page.html","webpack:///src/app/Components/users-progress/users-progress.component.scss","webpack:///src/app/Components/users-progress/users-progress.component.ts","webpack:///src/app/Models/user-progress.ts","webpack:///src/app/Pages/tab1/tab1-routing.module.ts","webpack:///src/app/Pages/tab1/tab1.module.ts","webpack:///src/app/Pages/tab1/tab1.page.scss","webpack:///src/app/Pages/tab1/tab1.page.ts"],"names":["UsersProgressComponent","datasev","repServ","usrServ","taskServ","userProgress","Array","tasks","users","isLoaded","getTasks","subscribe","data","usersList","doRefresh","undefined","getUserProgress","userProgAr","console","log","tasksGroupByUsr","reduce","r","a","userid","push","Object","create","prom","Promise","resolve","then","res","of","up","totaltasks","totalInProgress","totalInCompeletd","avgProgress","id","userId","userName","find","x","val","keys","tid","percentage","parsPercentage","progress","val2","task","parseFloat","event","target","disabled","setTimeout","ionViewWillEnter","error","selector","template","UserProgress","username","routes","path","component","loadChildren","m","UserTasksModule","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","Tab1Page","Number","toFixed"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<!-- Card view  -->\\r\\n<!-- <ion-grid>\\r\\n  <ion-row *ngFor=\\\"let item of userProgress; let i = index\\\">\\r\\n    <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n      <ion-card class=\\\"ion-no-margin\\\">\\r\\n        <ion-col>\\r\\n          <ion-img> </ion-img>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-row>\\r\\n            <ion-col style=\\\"float: left;\\\">\\r\\n              <ion-label\\r\\n                color=\\\"primary\\\"\\r\\n                class=\\\"ion-text-start ion-text-capitalize\\\"\\r\\n              >\\r\\n                {{ item.userName }}\\r\\n              </ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label (click)=\\\"presentPopover()\\\" color=\\\"medium\\\">\\r\\n                Total Tasks\\r\\n              </ion-label>\\r\\n              <ion-label color=\\\"dark\\\"> ({{ item.totaltasks }}) </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-badge\\r\\n                [color]=\\\"\\r\\n                  item.progress > 99\\r\\n                    ? 'success'\\r\\n                    : item.progress < 50\\r\\n                    ? 'warning'\\r\\n                    : 'primary'\\r\\n                \\\"\\r\\n              >\\r\\n                {{ item.progress }}%\\r\\n              </ion-badge>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-icon\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"float: right;\\\"\\r\\n                size=\\\"large\\\"\\r\\n                class=\\\"ion-text-end\\\"\\r\\n              >\\r\\n              </ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-col>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid> -->\\r\\n\\r\\n<!-- List view  -->\\r\\n\\r\\n<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"people-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      style=\\\"\\r\\n        width: 24px !important;\\r\\n        height: 24px !important;\\r\\n        margin-right: 5px;\\r\\n        margin-left: 5px;\\r\\n      \\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>Team Progress</p></ion-label>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <!-- <ion-button [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', 'new']\\\"> -->\\r\\n      <ion-button #btnRefresh id=\\\"btnRefresh\\\" (click)=\\\"doRefresh($event)\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"sync-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <div\\r\\n          style=\\\"\\r\\n            height: 0px;\\r\\n            text-align: center !important;\\r\\n            position: relative;\\r\\n            z-index: 1;\\r\\n          \\\"\\r\\n          *ngIf=\\\"isLoaded\\\"\\r\\n        >\\r\\n          <ion-spinner\\r\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\r\\n            name=\\\"crescent\\\"\\r\\n          ></ion-spinner>\\r\\n        </div>\\r\\n\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left;\\\">\\r\\n            <ion-col>\\r\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }}</b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\r\\n                  </ion-label>\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <ion-badge\\r\\n                      style=\\\"margin: 0px;\\\"\\r\\n                      [color]=\\\"\\r\\n                        item.avgProgress > 99\\r\\n                          ? 'success'\\r\\n                          : item.avgProgress < 50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ item.avgProgress }}%\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n              <ion-icon\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export default \" \\r\\n\\r\\n<!-- \\r\\n<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n \\r\\n    <ion-icon name=\\\"people-outline\\\"  color=\\\"primary\\\"    size=\\\"large\\\" slot=\\\"start\\\"></ion-icon> \\r\\n    <ion-label slot=\\\"start\\\"   color=\\\"primary\\\"   >Team Progress </ion-label>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content >\\r\\n  <app-users-progress></app-users-progress>\\r\\n</ion-content> -->\\r\\n\\r\\n<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"people-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      style=\\\"\\r\\n        width: 24px !important;\\r\\n        height: 24px !important;\\r\\n        margin-right: 5px;\\r\\n        margin-left: 5px;\\r\\n      \\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>Team Progress</p></ion-label>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <!-- <ion-button [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', 'new']\\\"> -->\\r\\n      <ion-button #btnRefresh id=\\\"btnRefresh\\\" (click)=\\\"doRefresh($event)\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"sync-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <div\\r\\n          style=\\\"\\r\\n            height: 0px;\\r\\n            text-align: center !important;\\r\\n            position: relative;\\r\\n            z-index: 1;\\r\\n          \\\"\\r\\n          *ngIf=\\\"isLoaded\\\"\\r\\n        >\\r\\n          <ion-spinner\\r\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\r\\n            name=\\\"crescent\\\"\\r\\n          ></ion-spinner>\\r\\n        </div>\\r\\n\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left;\\\">\\r\\n            <ion-col>\\r\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }}</b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\r\\n                  </ion-label>\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <ion-badge\\r\\n                      style=\\\"margin: 0px;\\\"\\r\\n                      [color]=\\\"\\r\\n                        item.avgProgress > 99\\r\\n                          ? 'success'\\r\\n                          : item.avgProgress < 50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ item.avgProgress }}%\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n              <ion-icon\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy91c2Vycy1wcm9ncmVzcy9EOlxcV29ya1xcTFRJXFxQcm9qZWN0c1xcSW9uaWNcXFRhc2tUcmFja2VyL3NyY1xcYXBwXFxDb21wb25lbnRzXFx1c2Vycy1wcm9ncmVzc1xcdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL0NvbXBvbmVudHMvdXNlcnMtcHJvZ3Jlc3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvdXNlcnMtcHJvZ3Jlc3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { PopoverController } from \"@ionic/angular\";\nimport { UserTasksPage } from \"../../Pages/user-tasks/user-tasks.page\";\nimport { Task } from \"src/app/Models/task\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { User } from \"src/app/Models/user\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from 'src/app/Services/tasks.service';\n\n@Component({\n  selector: \"app-team-progress\",\n  templateUrl: \"./users-progress.component.html\",\n  styleUrls: [\"./users-progress.component.scss\"],\n})\nexport class UsersProgressComponent implements OnInit {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {\n    this.repServ.getTasks().subscribe((data) => {\n      this.tasks = data;\n    });\n    //Get All Users\n    this.users = this.usrServ.usersList;\n    this.doRefresh(undefined)\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n    this.doRefresh(undefined)\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  ionViewWillLeave() {\n   \n  }\n  ionViewDisLeave() {\n  \n  }\n  ionViewDidEnter() {}\n  ionViewWillEnter() {\n    this.userProgress = this.getUserProgress();\n  }\n\n  getUserProgress(): Array<UserProgress> {\n    //  if (!this.isLoaded) {\n    let userProgAr = new Array<UserProgress>();\n    console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n\n    //Group Tasks By   getTotalUserTasks() {User ID\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    tasksGroupByUsr = this.tasks.reduce((r, a) => {\n      r[a.userid] = r[a.userid] || [];\n      r[a.userid].push(a);\n      return r;\n    }, Object.create(null));\n\n    let prom = new Promise((resolve) => {\n      resolve(tasksGroupByUsr);\n    })\n      .then((res) => {\n        console.log(\"Array<Array<Task>> \", res);\n\n        return Array.of(res);\n      })\n      .then((res) => {\n        let up: UserProgress;\n        let totaltasks, totalInProgress, totalInCompeletd, avgProgress: number;\n        // Iterate over the grouped Array by  group by value :\n        for (let id of Object.keys(res[0])) {\n          up = new UserProgress();\n          totaltasks = totalInProgress = totalInCompeletd = avgProgress = 0;\n          up.userId = id;\n          up.userName = this.users.find((x) => x.userId == id).userName;\n          let val = res[0][id];\n          console.log(\"id, val\", id, val);\n          //Get the Task Object from the arry\n          for (let tid of Object.keys(val)) {\n            ++totaltasks;\n            let percentage = this.parsPercentage(val[tid].progress);\n            let val2 = val[tid].task;\n            if (percentage < 100) {\n              avgProgress += percentage;\n              ++totalInProgress;\n            }\n            if (percentage >= 100) ++totalInCompeletd;\n\n            console.log(\"tid, val2\", tid, val2);\n          }\n          up.totaltasks = totaltasks;\n          up.totalInCompeletd = totalInCompeletd;\n          up.totalInProgress = totalInProgress;\n          if (avgProgress > 0 && totalInProgress > 0)\n            avgProgress = avgProgress / totalInProgress;\n          up.avgProgress = avgProgress;\n          userProgAr.push(up);\n        }\n      });\n    console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n\n  async doRefresh(event) {\n    this.isLoaded = true;\n    await new Promise(() => {\n      event.target ? (event.target.disabled = true) : false;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        event.target ? (event.target.disabled = false) : true;\n        this.isLoaded = false;  }, 1500);\n   }).catch((error) => error);\n  }\n}\n","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { Tab1Page } from \"./tab1.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: Tab1Page,\n  },\n  // {\n  //   path: \"\", //redirectTo: 'team-progress', // loadChildren:'../tab1/tab1.module#Tab1PageModule',\n  //   loadChildren: () =>\n  //     import(\"../tab1/tab1.module\").then((m) => m.Tab1PageModule),\n  //   //component: Tab1Page,\n  // },\n  {\n    path: \":userid\",\n    loadChildren: () =>\n      import(\"../user-tasks/user-tasks.module\").then((m) => m.UserTasksModule), // loadChildren:\"../Components/user-tasks/user-tasks.module#UserTasksModule\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { UsersProgressComponent } from \"../../Components/users-progress/users-progress.component\";\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n \n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    Tab1PageRoutingModule,\n    \n  ],\n  declarations: [Tab1Page,UsersProgressComponent]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component, HostListener } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\n\n@Component({\n  selector: \"app-tab1\",\n  templateUrl: \"tab1.page.html\",\n  styleUrls: [\"tab1.page.scss\"],\n})\nexport class Tab1Page {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private taskServ: TasksService\n  ) {\n    this.repServ.getTasks().subscribe((data) => {\n      this.tasks = data;\n    });\n    //Get All Users\n    this.users = this.usrServ.usersList;\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n    // this.doRefresh(undefined);\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  ionViewWillLeave() {}\n  ionViewDidLeave() {}\n  ionViewDidEnter() {}\n \n  ionViewWillEnter() {\n    this.userProgress = this.getUserProgress();\n  }\n\n  getUserProgress(): Array<UserProgress> {\n    //  if (!this.isLoaded) {\n    let userProgAr = new Array<UserProgress>();\n    console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n\n    //Group the Tasks By User ID\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    tasksGroupByUsr = this.tasks.reduce((r, a) => {\n      r[a.userid] = r[a.userid] || [];\n      r[a.userid].push(a);\n      return r;\n    }, Object.create(null));\n\n    let prom = new Promise((resolve) => {\n      resolve(tasksGroupByUsr);\n    })\n      .then((res) => {\n        console.log(\"Array<Array<Task>> \", res);\n\n        return Array.of(res);\n      })\n      .then((res) => {\n        let up: UserProgress;\n        let totaltasks, totalInProgress, totalInCompeletd, avgProgress: number;\n        // Iterate over the grouped Array by  group by value :\n        for (let id of Object.keys(res[0])) {\n          up = new UserProgress();\n          totaltasks = totalInProgress = totalInCompeletd = avgProgress = 0;\n          up.userId = id;\n          up.userName = this.users.find((x) => x.userId == id).userName;\n          let val = res[0][id];\n          console.log(\"id, val\", id, val);\n          //Get the Task Object from the arry\n          for (let tid of Object.keys(val)) {\n            ++totaltasks;\n            let percentage = this.parsPercentage(val[tid].progress);\n            let val2 = val[tid].task;\n            if (percentage < 100) {\n              avgProgress += percentage;\n              ++totalInProgress;\n            }\n            if (percentage >= 100) ++totalInCompeletd;\n\n            console.log(\"tid, val2\", tid, val2);\n          }\n          up.totaltasks = totaltasks;\n          up.totalInCompeletd = totalInCompeletd;\n          up.totalInProgress = totalInProgress;\n          if (avgProgress > 0 && totalInProgress > 0)\n            avgProgress = avgProgress / totalInProgress;\n          up.avgProgress = Number(avgProgress.toFixed(2)); //round the number\n          userProgAr.push(up);\n        }\n      });\n    console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    return Number(\n      (parseFloat(val) >= 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(\n        0\n      )\n    );\n  }\n\n  async doRefresh(event) {\n    this.isLoaded = true;\n    await new Promise(() => {\n      event.target ? (event.target.disabled = true) : false;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        event.target ? (event.target.disabled = false) : true;\n        this.isLoaded = false;\n      }, 1500);\n    }).catch((error) => error);\n  }\n}\n"]}