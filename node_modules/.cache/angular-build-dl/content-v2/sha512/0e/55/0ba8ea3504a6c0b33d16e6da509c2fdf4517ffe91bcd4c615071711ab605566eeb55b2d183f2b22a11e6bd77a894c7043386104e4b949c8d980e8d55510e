{"version":3,"sources":["webpack:///src/app/Pages/task-detial/task-detial.page.html","webpack:///src/app/Pages/task-detial/task-detial-routing.module.ts","webpack:///src/app/Pages/task-detial/task-detial.module.ts","webpack:///src/app/Pages/task-detial/task-detial.page.scss","webpack:///src/app/Pages/task-detial/task-detial.page.ts"],"names":["routes","path","component","TaskDetialPageRoutingModule","imports","forChild","exports","TaskDetialPageModule","declarations","TaskDetialPage","route","navCtrl","tasksService","alCtr","loadedTask","Object","create","paramMap","subscribe","has","navigateBack","taskSub","getTask","get","task","updateTask","back","err","subHeader","cssClass","message","buttons","text","role","handler","deleteTask","then","al","present","fetchMyTasks","loginedUser","userId","unsubscribe","selector","template"],"mappings":"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","file":"task-detial-task-detial-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button\\r\\n        defaultHref=\\\"/tasktracker/mytasks\\\"\\r\\n        text=\\\"\\\"\\r\\n      ></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"primary\\\"><p>Task Edit</p> </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"danger\\\" (click)=\\\"deleteTask()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" size=\\\"small\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- Card view  -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Task Title <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input\\r\\n              style=\\\"background-color: transparent\\\"\\r\\n              required\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.task\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Progress % <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input\\r\\n              style=\\\"background-color: transparent\\\"\\r\\n              required\\r\\n              type=\\\"number\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.progress\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Description</ion-label\\r\\n            >\\r\\n            <ion-textarea\\r\\n              rows=\\\"20\\\"\\r\\n              cols=\\\"20\\\"\\r\\n              style=\\\"background-color: transparent\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.details\\\"\\r\\n            ></ion-textarea>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n        <!--     \\r\\n        <div class=\\\"ion-padding\\\">\\r\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\"\\r\\n            >Save</ion-button\\r\\n          >\\r\\n        </div> -->\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> </ion-content\\r\\n><ion-footer>\\r\\n  <ion-button\\r\\n    class=\\\"ion-text-capitalize ion-margin\\\"\\r\\n    color=\\\"primary\\\"\\r\\n    expand=\\\"block\\\"\\r\\n    (click)=\\\"updateTask()\\\"\\r\\n    [disabled]=\\\"!loadedTask.details||!loadedTask.task||loadedTask.progress<0\\\"\\r\\n    >Save\\r\\n  </ion-button>\\r\\n</ion-footer>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskDetialPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskDetialPageRoutingModule {}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaskDetialPageRoutingModule } from './task-detial-routing.module';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TaskDetialPageRoutingModule\r\n  ],\r\n  declarations: [TaskDetialPage]\r\n})\r\nexport class TaskDetialPageModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3Rhc2stZGV0aWFsL3Rhc2stZGV0aWFsLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Task } from \"../../Models/task\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { NavController, AlertController } from \"@ionic/angular\";\r\nimport { TasksService } from \"src/app/Services/tasks.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-task-detial\",\r\n  templateUrl: \"./task-detial.page.html\",\r\n  styleUrls: [\"./task-detial.page.scss\"],\r\n})\r\nexport class TaskDetialPage implements OnInit {\r\n  loadedTask = Object.create(Task); // Variable need to be initialized!!!\r\n  taskSub: Subscription;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private tasksService: TasksService,\r\n    private alCtr: AlertController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((paramMap) => {\r\n      if (!paramMap.has(\"taskId\")) {\r\n        this.navCtrl.navigateBack(\"/tasktracker/mytasks\");\r\n        return;\r\n      }\r\n\r\n      this.taskSub = this.tasksService\r\n        .getTask(paramMap.get(\"taskId\"))\r\n        .subscribe((task) => {\r\n          // console.log(\"Subscripting: \", task);\r\n          this.loadedTask = task;\r\n          // console.log(\"This.loadedTask.id = \", this.loadedTask.id);\r\n        });\r\n    });\r\n  }\r\n\r\n  updateTask() {\r\n    try {\r\n      // console.log(\r\n      //   \"The task is going to be updated with data: \",\r\n      //   this.loadedTask\r\n      // );\r\n      this.tasksService.updateTask(this.loadedTask).subscribe();\r\n      this.back();\r\n    } catch (err) {}\r\n  }\r\n  back() {\r\n    this.navCtrl.back();\r\n  }\r\n  deleteTask() {\r\n    this.alCtr\r\n      .create({\r\n        subHeader: \" Delete Alert   \",\r\n        cssClass: \"alertButton\",\r\n        message:\r\n          \" <span class='deleteMsg'>Do you want to delete this Task? </span> \",\r\n        buttons: [\r\n          { text: \"Cancel\", role: \"cancel\", cssClass: \"alertButton\" },\r\n          {\r\n            text: \"Delete\",\r\n            cssClass: \"alertButton\",\r\n            handler: () => {\r\n              // console.log(\r\n              //   \"Trying to delete task with ID: \",\r\n              //   this.loadedTask.id\r\n              // );\r\n              this.tasksService.deleteTask(this.loadedTask).subscribe();\r\n              this.navCtrl.navigateBack(\"/tasktracker/mytasks\");\r\n            },\r\n          },\r\n        ],\r\n      })\r\n      .then((al) => {\r\n        al.present();\r\n      });\r\n\r\n    // return;\r\n  }\r\n\r\n  onViewWillEnter() {\r\n    this.tasksService.fetchMyTasks(this.tasksService.loginedUser.userId);\r\n  }\r\n\r\n  onViewWillLeave() {\r\n    this.tasksService.updateTask(this.loadedTask);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.taskSub) {\r\n      this.taskSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n"]}