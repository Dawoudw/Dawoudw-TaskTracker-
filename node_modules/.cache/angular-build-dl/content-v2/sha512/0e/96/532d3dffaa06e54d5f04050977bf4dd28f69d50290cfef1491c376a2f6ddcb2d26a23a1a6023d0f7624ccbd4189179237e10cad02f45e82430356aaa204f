{"version":3,"sources":["webpack:///src/app/Pages/tab3/tab3.page.html","webpack:///src/app/Pages/tab3/tab3-routing.module.ts","webpack:///src/app/Pages/tab3/tab3.module.ts","webpack:///src/app/Pages/tab3/tab3.page.scss","webpack:///src/app/Pages/tab3/tab3.page.ts"],"names":["routes","path","component","loadChildren","then","m","TaskDetialPageModule","CreateTaskPageModule","Tab3PageRoutingModule","imports","forChild","exports","Tab3PageModule","declarations","Tab3Page","tasksService","router","modalCtrl","isLoading","isLoadingError","isRefreshing","taskSub","myTasks","subscribe","tasks","loadedTasks","console","log","loginedUser","fetchMyTasks","userId","event","setTimeout","ionViewWillEnter","target","complete","taskId","slidingItem","close","navigate","create","modalElement","present","onDidDismiss","resultData","task","deleteTask","unsubscribe","filter","x","parsPercentage","progress","slice","length","val","parseFloat","selector","template"],"mappings":"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","file":"tab3-tab3-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"list-circle-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      style=\\\"width: 24px !important;height: 24px !important;margin-right: 5px;margin-left: 5px;\\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>My Tasks</p></ion-label>\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <!-- <ion-button [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', 'new']\\\"> -->\\r\\n      <ion-button (click)=\\\"openNewTaskModal()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"chevron-down-circle-outline\\\"\\r\\n      pullingText=\\\"Pull to refresh\\\"\\r\\n      refreshingSpinner=\\\"crescent\\\"\\r\\n      refreshingText=\\\"Refreshing...\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-grid no-padding ion-no-margin>\\r\\n    <ion-row>\\r\\n      <ion-col\\r\\n        *ngIf=\\\"isLoading\\\"\\r\\n        size=\\\"12\\\"\\r\\n        size-lg=\\\"6\\\"\\r\\n        offset-med=\\\"3\\\"\\r\\n        offset-lg=\\\"3\\\"\\r\\n      >\\r\\n        <!-- <div class=\\\"ion-text-center\\\">\\r\\n          <ion-spinner color=\\\"crescent\\\" name=\\\"crescent\\\"></ion-spinner>\\r\\n        </div> -->\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length <= 0 && !isLoadingError\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-chip class=\\\"ion-text-center\\\" outline color=\\\"danger\\\">\\r\\n          <ion-label>\\r\\n            <b>You don't have any assigend tasks </b>\\r\\n          </ion-label>\\r\\n        </ion-chip>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"isLoadingError && !isRefreshing\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-chip class=\\\"ion-text-center\\\" outline color=\\\"danger\\\">\\r\\n          <ion-label>\\r\\n            <b>Can not access data. Please try later.</b>\\r\\n          </ion-label>\\r\\n        </ion-chip>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length >0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"primary\\\">\\r\\n              <ion-label> Tasks <b>({{loadedTasks.length}}) </b></ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"warning\\\">\\r\\n              <ion-label> In-Progress <b>({{getTotalInProgress()}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"success\\\">\\r\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-list>\\r\\n          <ion-row\\r\\n            *ngFor=\\\"let tk of loadedTasks let i = index\\\"\\r\\n            style=\\\"justify-items: left;\\\"\\r\\n          >\\r\\n            <ion-col>\\r\\n              <ion-item-sliding #slidingItem>\\r\\n                <ion-item\\r\\n                  [routerLink]=\\\"['/', 'tasktracker', 'mytasks', tk.id ]\\\"\\r\\n                >\\r\\n                  <ion-label\\r\\n                    class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\r\\n                  >\\r\\n                    <h3><b> {{i+1}}- </b>{{ tk.task}}</h3>\\r\\n\\r\\n                    <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\r\\n                      {{tk.taskdate}}\\r\\n                    </ion-note>\\r\\n                    <ion-badge\\r\\n                      slot=\\\"end\\\"\\r\\n                      style=\\\"float: right;\\\"\\r\\n                      [color]=\\\"\\r\\n                    tk.progress  > 0.99\\r\\n                          ? 'success'\\r\\n                          : tk.progress  < 0.50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ tk.progress | percent}}\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item-options>\\r\\n                  <ion-item-option\\r\\n                    color=\\\"secondary\\\"\\r\\n                    (click)=\\\"onEdit(tk.id, slidingItem)\\\"\\r\\n                  >\\r\\n                    <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                  <!-- <ion-item-option color=\\\"danger\\\">\\r\\n                    <ion-icon\\r\\n                      name=\\\"trash\\\"\\r\\n                      slot=\\\"icon-only\\\"\\r\\n                      (click)=\\\"onDelete(tk, slidingItem)\\\"\\r\\n                    ></ion-icon>\\r\\n                  </ion-item-option> -->\\r\\n                </ion-item-options>\\r\\n              </ion-item-sliding>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Tab3Page } from './tab3.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab3Page,\r\n  },\r\n  {\r\n    path: ':taskId',\r\n    loadChildren: () => import('../task-detial/task-detial.module').then( m => m.TaskDetialPageModule)\r\n  },\r\n  {\r\n    path: 'new',\r\n    loadChildren: () => import('../../Pages/create-task/create-task.module').then( m => m.CreateTaskPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Tab3PageRoutingModule {}","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab3Page } from './tab3.page';\r\n \r\n\r\nimport { Tab3PageRoutingModule } from './tab3-routing.module'\r\n \r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\r\n    Tab3PageRoutingModule,\r\n  ],\r\n  declarations: [Tab3Page]\r\n})\r\nexport class Tab3PageModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { IonItemSliding, ModalController } from '@ionic/angular';\r\nimport { Task } from '../../Models/task';\r\nimport { TasksService } from '../../Services/tasks.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CreateTaskPage } from 'src/app/Pages/create-task/create-task.page';\r\n\r\n@Component({\r\n  selector: 'app-tab3',\r\n  templateUrl: 'tab3.page.html',\r\n  styleUrls: ['tab3.page.scss']\r\n})\r\nexport class Tab3Page implements OnInit, OnDestroy{\r\n\r\n  loadedTasks: Task[];\r\n  private taskSub: Subscription;\r\n  isLoading = false;\r\n  isLoadingError = false;\r\n  isRefreshing = false;\r\n  constructor(\r\n    private tasksService: TasksService, \r\n    private router: Router,\r\n    private modalCtrl: ModalController\r\n  ) {}\r\n\r\n  ngOnInit(){\r\n    this.taskSub = this.tasksService.myTasks.subscribe(tasks => {\r\n      this.loadedTasks = tasks;\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    console.log(\"ionViewWillEnter for Tab3!\");\r\n\r\n    if(this.tasksService.loginedUser){\r\n      this.isLoading = true;\r\n    }\r\n    else{\r\n      this.isLoadingError = true;\r\n      return;\r\n    }\r\n\r\n    this.tasksService.fetchMyTasks(this.tasksService.loginedUser.userId).subscribe(() => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.isRefreshing = true;\r\n\r\n    setTimeout(() => {\r\n      this.ionViewWillEnter();\r\n      event.target.complete();\r\n      this.isRefreshing = false;\r\n    }, 2000);\r\n  }\r\n\r\n  onEdit(taskId: string, slidingItem: IonItemSliding){\r\n    console.log(\"Getting into onEdit\");\r\n    console.log(\"Tast ID is: \", taskId);\r\n    slidingItem.close();\r\n    this.router.navigate(['/', 'tasktracker', 'mytasks', taskId]);\r\n  }\r\n\r\n  openNewTaskModal(){\r\n    this.modalCtrl\r\n      .create({\r\n        component: CreateTaskPage,\r\n      })\r\n      .then(modalElement => {\r\n        modalElement.present();\r\n        return modalElement.onDidDismiss();\r\n      })\r\n      .then(resultData => {\r\n        console.log(\"ResultData: \", resultData);\r\n        this.ionViewWillEnter();\r\n      })\r\n  }\r\n\r\n  onDelete(task: Task, slidingItem: IonItemSliding){\r\n    slidingItem.close();\r\n    this.tasksService.deleteTask(task);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.taskSub){\r\n      this.taskSub.unsubscribe();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  \r\n  getTotalInProgress(): any {\r\n    return this.loadedTasks.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\r\n  }\r\n  getTotalCompleted(): any {\r\n    return this.loadedTasks.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\r\n  }\r\n  parsPercentage(val): number {\r\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\r\n  }\r\n}"]}