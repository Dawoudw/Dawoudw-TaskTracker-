{"version":3,"sources":["./src/app/Components/today-tasks/today-tasks.component.html","./src/app/Pages/team-progress/team-progress.page.html","./src/app/Components/today-tasks/today-tasks.component.scss","./src/app/Components/today-tasks/today-tasks.component.ts","./src/app/Models/user-progress.ts","./src/app/Pages/team-progress/team-progress-routing.module.ts","./src/app/Pages/team-progress/team-progress.module.ts","./src/app/Pages/team-progress/team-progress.page.scss","./src/app/Pages/team-progress/team-progress.page.ts"],"names":[],"mappings":"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","file":"team-progress-team-progress-module-es2015.js","sourcesContent":["export default \"<ion-content>\\r\\n  <div\\r\\n    class=\\\"ion-no-margin ; no-padding\\\"\\r\\n    style=\\\"\\r\\n      height: 0px;\\r\\n      text-align: center !important;\\r\\n      position: relative;\\r\\n      z-index: 1;\\r\\n    \\\"\\r\\n  >\\r\\n    <ion-refresher\\r\\n      style=\\\"position: relative; z-index: 2; top: 0px\\\"\\r\\n      slot=\\\"fixed\\\"\\r\\n      (ionRefresh)=\\\"doRefresh($event)\\\"\\r\\n    >\\r\\n      <ion-refresher-content refreshingSpinner=\\\"crescent\\\">\\r\\n      </ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n  </div>\\r\\n\\r\\n  <!-- <ion-grid *ngIf=\\\"userProgress.length > 0\\\">\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left;\\\">\\r\\n            <ion-col>\\r\\n              <ion-item\\r\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\r\\n                detail=\\\"true\\\"\\r\\n                md=\\\"ellipsis-vertical\\\"\\r\\n                ios=\\\"ellipsis-vertical \\\"\\r\\n              >\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }}</b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                \\r\\n                    {{ i + 1 }}.{{ item.task }}\\r\\n\\r\\n                    <ion-label mode=\\\"ios\\\" style=\\\"float: right;\\\">\\r\\n                      <ion-badge\\r\\n                        style=\\\"float: right;\\\"\\r\\n                        [color]=\\\"\\r\\n                          item.progress > 99\\r\\n                            ? 'success'\\r\\n                            : item.progress < 50\\r\\n                            ? 'warning'\\r\\n                            : 'primary'\\r\\n                        \\\"\\r\\n                      >\\r\\n                        {{ item.progress }}%\\r\\n                      </ion-badge>\\r\\n                    </ion-label>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n\\r\\n              <ion-icon  \\r\\n              [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> -->\\r\\n\\r\\n  <ion-grid *ngIf=\\\"userProgress.length > 0\\\">\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left\\\">\\r\\n            <ion-col>\\r\\n              <ion-item\\r\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\r\\n                detail=\\\"true\\\"\\r\\n              >\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <text-avatar  text ={{item.userName}}></text-avatar>\\r\\n                  <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }} </b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label size=\\\"small\\\" mode=\\\"ios\\\" position=\\\"stacked\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    <b style=\\\"font-size: smaller\\\"> {{ item.task }} </b>\\r\\n                  </ion-label>\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <ion-badge\\r\\n                      style=\\\"margin: 0px\\\"\\r\\n                      [color]=\\\"\\r\\n                        item.progress > 99\\r\\n                          ? 'success'\\r\\n                          : item.progress < 50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ item.progress }}%\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <!-- <ion-col size=\\\"auto\\\">\\r\\n              <ion-icon\\r\\n                [routerLink]=\\\"[\\r\\n                  '/tasktracker',\\r\\n                  'chat',\\r\\n                  user ? user.email : '',\\r\\n                  user ? user.userId : ''\\r\\n                ]\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col> -->\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div\\r\\n    #divMsg\\r\\n    style=\\\"display: none\\\"\\r\\n    class=\\\"ion-no-padding ion-margin-top ion-margin-horizontal\\\"\\r\\n  >\\r\\n    <ion-chip\\r\\n      color=\\\"danger\\\"\\r\\n      class=\\\"ion-justify-content-center\\\"\\r\\n      style=\\\"width: 98%\\\"\\r\\n    >\\r\\n      <ion-label>There is no task(s) for anyone today .</ion-label>\\r\\n    </ion-chip>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header class=\\\"ion-no-margin\\\">\\n  <ion-toolbar>\\n    <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"0\\\" #checkTeam value=\\\"calendar\\\">\\n      <ion-segment-button size=\\\"small\\\" value=\\\"calendar\\\" layout=\\\"icon-start\\\">\\n        <ion-label position=\\\"float\\\">Today Tasks</ion-label>\\n        <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n      </ion-segment-button>\\n\\n      <ion-segment-button size=\\\"small\\\" value=\\\"team\\\" layout=\\\"icon-start\\\">\\n        <ion-label position=\\\"float\\\">Team Progress</ion-label>\\n        <ion-icon name=\\\"people-outline\\\"></ion-icon>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div\\n    class=\\\"ion-no-margin ; no-padding\\\"\\n    style=\\\"\\n      height: 0px;\\n      text-align: center !important;\\n      position: relative;\\n      z-index: 1;\\n    \\\"\\n  >\\n    <ion-refresher\\n      #refTeamProgress\\n      id=\\\"refTeamProgress\\\"\\n      style=\\\"position: relative; z-index: 2; top: 0px\\\"\\n      slot=\\\"fixed\\\"\\n      (ionRefresh)=\\\"doRefresh($event)\\\"\\n    >\\n      <ion-refresher-content color=\\\"primary\\\" refreshingSpinner=\\\"crescent\\\">\\n      </ion-refresher-content>\\n    </ion-refresher>\\n  </div>\\n  <ion-grid *ngIf=' checkTeam.value==\\\"team\\\" '>\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <!-- <div\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n          *ngIf=\\\"isLoaded\\\"\\n        >\\n          <ion-spinner\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\n            name=\\\"crescent\\\"\\n          ></ion-spinner>\\n        </div> -->\\n\\n        <ion-list\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\n          [(ngModel)]=\\\"userProgress\\\"\\n          ngDefaultControl\\n          name=\\\"lstTaskProgress\\\"\\n        >\\n          <ion-row style=\\\"justify-items: left\\\">\\n            <ion-col>\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                  <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\n                  <text-avatar text=\\\"{{item.userName}}\\\"></text-avatar>\\n                </ion-avatar>\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <b>{{ item.userName }}</b></ion-label\\n                  >\\n\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\n                  </ion-label>\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <ion-badge\\n                      style=\\\"margin: 0px\\\"\\n                      [color]=\\\"\\n                        item.avgProgress > 99\\n                          ? 'success'\\n                          : item.avgProgress < 50\\n                          ? 'warning'\\n                          : 'primary'\\n                      \\\"\\n                    >\\n                      {{ item.avgProgress }}%\\n                    </ion-badge>\\n                  </ion-label>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <!-- <ion-col size=\\\"auto\\\">\\n              <ion-icon\\n                [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\n                color=\\\"primary\\\"\\n                name=\\\"chatbox-ellipses-outline\\\"\\n                style=\\\"\\n                  flex: left;\\n                  margin-top: 10px;\\n                  margin-left: 5px;\\n                  margin-right: 5px;\\n                  width: 20px;\\n                  height: 20px;\\n                \\\"\\n                class=\\\"ion-text-start\\\"\\n              ></ion-icon>\\n            </ion-col> -->\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <app-today-tasks *ngIf='checkTeam.value ==\\\"calendar\\\"'></app-today-tasks>\\n  <ion-fab\\n    *ngIf=\\\"auth.isLoggedIn()\\\"\\n    (click)=\\\"openNewTaskModal()\\\"\\n    vertical=\\\"bottom\\\"\\n    horizontal=\\\"end\\\"\\n    slot=\\\"fixed\\\"\\n  >\\n    <ion-fab-button size=\\\"small\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWphc3JhbWFuaS9PdGhlci13ZWJkZXYvaW9uaWMvVGFzay1UcmFja2VyLURldjIwMjAwODMwL3NyYy9hcHAvQ29tcG9uZW50cy90b2RheS10YXNrcy90b2RheS10YXNrcy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvQ29tcG9uZW50cy90b2RheS10YXNrcy90b2RheS10YXNrcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUUsdUVBQUE7O0FBQ0E7RUFDRSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy90b2RheS10YXNrcy90b2RheS10YXNrcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3BvdmVyLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQ6ICMyMjI7XG4gIH1cbiAgXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXG4gIC5teS1jdXN0b20tY2xhc3MgLnBvcG92ZXItY29udGVudCB7XG4gICAgYmFja2dyb3VuZDogIzIyMjtcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from \"@angular/core\";\n \nimport { Task } from \"src/app/Models/task\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { User } from \"src/app/Models/user\";\nimport { UsersService } from \"src/app/Services/users.service\";\n \nimport { AuthService } from \"src/app/Services/authService.service\";\n\n@Component({\n  selector: \"app-today-tasks\",\n  templateUrl: \"./today-tasks.component.html\",\n  styleUrls: [\"./today-tasks.component.scss\"],\n  \n})\nexport class TodayTasksComponent implements OnInit, AfterViewInit {\n  userProgress = new Array<any>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  user: User = new User();\n  @ViewChild(\"divMsg\") divMsg: ElementRef;\n  nodata: boolean = false;\n  isLoaded: boolean = false;\n  constructor(\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private auth: AuthService\n  ) {\n    //Get All Users\n    this.getUsersTodayTasks();\n    this.nodata = false;\n  }\n  ngAfterViewInit(): void {}\n\n  ngOnInit() {\n    this.user = this.auth.getLoggedUser();\n    // this.doRefresh();\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n    // this.userProgress = this.getUsersTodayTasks();\n  }\n\n  ionViewWillEnter() {}\n\n  getUsersTodayTasks() {\n    //  if (!this.isLoaded) {\n    this.repServ.getTasksToday().then((data) => {\n      this.users = this.usrServ.usersList;\n      this.tasks = data;\n      let userProgAr = new Array<any>();\n      //  console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n      console.log(\"Task getUsersTodayTasks\", this.users);\n      for (let t of this.tasks) {\n        if(t.userid)\n        {\n        console.log(\"Task getUsersTodayTasks t.userid\", t.userid);\n\n        let us: User = Object.create(\n          this.users.find((x) => x.userId == t.userid)\n        );\n        console.log(\"bject.create(this.users.find(x=>x.userId==t.userid))\", us);\n\n        let obj: any = {\n          id: t.id,\n          task: t.task,\n          taskdate: t.taskdate,\n          userid: t.userid,\n\n          userName: this.users.find((u) => u.userId == t.userid).userName,\n          progress: this.parsPercentage(t.progress),\n        };\n        //  console.log(\"   userProgAr.push(obj);\", obj);\n        userProgAr.push(obj);\n      }}\n      console.log(\"getUsersTodayTasks\", userProgAr);\n      this.userProgress = userProgAr;\n      this.userProgress.length < 1\n        ? (this.divMsg.nativeElement.style.display = \"block\")\n        : \"none\";\n    });\n\n    // }\n  }\n\n  parsPercentage(val): number {\n    return parseInt(val) > 1 ? parseInt(val) : parseInt(val) * 100;\n  }\n\n  async doRefresh(e) {\n    // console.log(\"UsersProgressComponent.doRefresh started\");\n    await new Promise(() => {\n      this.isLoaded = true;\n      setTimeout(() => {\n        this.getUsersTodayTasks();\n        e.target.complete();\n        // this.ionViewWillEnter();\n        this.isLoaded = false;\n      }, 1000);\n    }).catch((error) => error);\n  }\n}\n","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: TeamProgressPage,\n  },\n  {\n    path: \":userid\",\n    loadChildren: () =>\n      import(\"../user-tasks/user-tasks.module\").then((m) => m.UserTasksModule),\n    // loadChildren: \"../user-tasks/user-tasks.module#UserTasksModule\",\n    // loadChildren:\"../Components/user-tasks/user-tasks.module#UserTasksModule\",\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamProgressPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { TeamProgressPageRoutingModule } from \"./team-progress-routing.module\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\nimport { TextAvatarModule } from \"src/app/directives/text-avatar.directive.module\";\nimport { UserTasksPage } from \"../user-tasks/user-tasks.page\";\nimport { TodayTasksComponent } from \"src/app/Components/today-tasks/today-tasks.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TextAvatarModule,\n    TeamProgressPageRoutingModule,\n  ],\n  declarations: [TeamProgressPage, TodayTasksComponent],\n})\nexport class TeamProgressPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RlYW0tcHJvZ3Jlc3MvdGVhbS1wcm9ncmVzcy5wYWdlLnNjc3MifQ== */\";","import { Component, HostListener } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { ModalController, NavController } from '@ionic/angular';\nimport { CreateTaskPage } from '../create-task/create-task.page';\n@Component({\n  selector: \"app-team-progress\",\n  templateUrl: \"team-progress.page.html\",\n  styleUrls: [\"team-progress.page.scss\"],\n})\nexport class TeamProgressPage {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  user: User = new User();\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    public usrServ: UsersService,\n    private taskServ: TasksService,\n    public auth: AuthService,\n    private modalCtrl: ModalController, \n    private navCtrl: NavController,\n  ) {\n    this.getUserProgress();\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n    this.user = this.auth.getLoggedUser();\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  // ionViewWillLeave() {}\n  // ionViewDidLeave() {}\n  // ionViewDidEnter() {}\n\n  ionViewWillEnter() {\n    this.getUserProgress();\n  }\n\n  getUserProgress() {\n    //  if (!this.isLoaded) {\n\n    //Get All Users\n    this.users = this.usrServ.usersList;\n    let userProgAr = new Array<UserProgress>();\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    this.repServ.getTasks().subscribe((data) => {\n      // console.log(\"ionViewWillEnter this.tasks\", data);\n\n      tasksGroupByUsr = data.reduce((r, a) => {\n        r[a.userid] = r[a.userid] || [];\n        r[a.userid].push(a);\n        return r;\n      }, Object.create(null));\n\n      new Promise((resolve) => {\n        resolve(tasksGroupByUsr);\n      })\n        .then((res) => {\n          // console.log(\"Array<Array<Task>> \", res);\n\n          return Array.of(res);\n        })\n        .then((res) => {\n          let taskid = \"\";\n          // Iterate over the grouped Array by  group by value :\n          for (let id of Object.keys(res[0])) {\n            if (id) {\n              let up: UserProgress = new UserProgress();\n              let totaltasks: number = 0;\n              let totalInProgress: number = 0;\n              let totalInCompeletd: number = 0;\n              let avgProgress: number = 0;\n              let taskid = \"\";\n              up.userId = id;\n              up.userName = this.users.find((x) => x.userId == id).userName;\n              let val = res[0][id];\n              // console.log(\"userid, val\", id, val);\n              //Get the Task Object from the arry\n              for (let tid of Object.keys(val)) {\n                totaltasks++;\n                let percentage = 0;\n                percentage = this.parsPercentage(val[tid].progress);\n                let val2 = val[tid].task;\n                if (percentage < 100) {\n                  // console.log(\n                  //   \"if (percentage < 100) \",\n                  //   percentage,\n                  //   percentage < 100\n                  // );\n\n                  avgProgress = percentage + avgProgress;\n                  taskid = val[tid].id;\n                  totalInProgress++;\n                  // console.log(\" totalInProgress++\", totalInProgress, id);\n                } else if (percentage >= 100) ++totalInCompeletd;\n\n                // console.log(\"tid, val2\", tid, val2);\n              }\n              up.totaltasks = totaltasks;\n              up.totalInCompeletd = totalInCompeletd;\n              up.totalInProgress = totalInProgress;\n              if (avgProgress > 0 && totalInProgress > 0) {\n                let avg = avgProgress / totalInProgress;\n                up.avgProgress = Number(avg.toFixed(2)); //round the number\n              }\n\n              userProgAr.push(up);\n            }\n          }\n          this.userProgress = userProgAr;\n        });\n\n      //Group the Tasks By User ID\n    });\n    //console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    //  return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    //  console.log(\"val\", val);\n    let progress = (parseFloat(val) > 1\n      ? parseFloat(val)\n      : parseFloat(val) * 100\n    ).toFixed(0);\n    // console.log(\"progress\", progress);\n\n    return Number(\n      (parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(0)\n    );\n  }\n  openNewTaskModal() {\n    this.modalCtrl\n      .create({\n        component: CreateTaskPage,\n      })\n      .then((modalElement) => {\n        modalElement.present();\n        return modalElement.onDidDismiss();\n      })\n      .then((resultData) => {\n        this.navCtrl.navigateRoot([\"tasktracker/mytasks\"]);\n        console.log(\"ResultData: \", resultData);\n      });\n  \n  }\n  async doRefresh(e) {\n    await new Promise(() => {\n      this.isLoaded = true;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        e.target.complete();\n        this.isLoaded = false;\n      }, 1500);\n    }).catch((error) => error);\n  }\n}\n"],"sourceRoot":"webpack:///"}