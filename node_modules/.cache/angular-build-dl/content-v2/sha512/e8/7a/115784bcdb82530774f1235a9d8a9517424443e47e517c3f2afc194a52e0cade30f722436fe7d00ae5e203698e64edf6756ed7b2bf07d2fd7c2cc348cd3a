{"version":3,"sources":["webpack:///src/app/Components/today-tasks/today-tasks.component.html","webpack:///src/app/Pages/team-progress/team-progress.page.html","webpack:///src/app/Components/today-tasks/today-tasks.component.scss","webpack:///src/app/Components/today-tasks/today-tasks.component.ts","webpack:///src/app/Models/user-progress.ts","webpack:///src/app/Pages/team-progress/team-progress-routing.module.ts","webpack:///src/app/Pages/team-progress/team-progress.module.ts","webpack:///src/app/Pages/team-progress/team-progress.page.scss","webpack:///src/app/Pages/team-progress/team-progress.page.ts"],"names":["TodayTasksComponent","repServ","usrServ","auth","userProgress","Array","tasks","users","user","nodata","isLoaded","getUsersTodayTasks","getLoggedUser","getTasksToday","then","data","usersList","userProgAr","console","log","t","userid","us","Object","create","find","x","userId","obj","id","task","taskdate","userName","u","progress","parsPercentage","push","length","divMsg","nativeElement","style","display","val","parseInt","e","Promise","setTimeout","target","complete","error","selector","template","UserProgress","username","avgProgress","totaltasks","totalInProgress","totalInCompeletd","routes","path","component","loadChildren","m","UserTasksModule","TeamProgressPageRoutingModule","imports","forChild","exports","TeamProgressPageModule","declarations","TeamProgressPage","datasev","taskServ","modalCtrl","navCtrl","getUserProgress","tasksGroupByUsr","getTasks","subscribe","reduce","r","a","resolve","res","of","taskid","up","keys","tid","percentage","val2","avg","Number","toFixed","parseFloat","modalElement","present","onDidDismiss","resultData","navigateRoot","ionViewWillEnter"],"mappings":"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","file":"team-progress-team-progress-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n  <div\\r\\n    class=\\\"ion-no-margin ; no-padding\\\"\\r\\n    style=\\\"\\r\\n      height: 0px;\\r\\n      text-align: center !important;\\r\\n      position: relative;\\r\\n      z-index: 1;\\r\\n    \\\"\\r\\n  >\\r\\n    <ion-refresher\\r\\n      style=\\\"position: relative; z-index: 2; top: 0px\\\"\\r\\n      slot=\\\"fixed\\\"\\r\\n      (ionRefresh)=\\\"doRefresh($event)\\\"\\r\\n    >\\r\\n      <ion-refresher-content refreshingSpinner=\\\"crescent\\\">\\r\\n      </ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n  </div>\\r\\n\\r\\n  <!-- <ion-grid *ngIf=\\\"userProgress.length > 0\\\">\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left;\\\">\\r\\n            <ion-col>\\r\\n              <ion-item\\r\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\r\\n                detail=\\\"true\\\"\\r\\n                md=\\\"ellipsis-vertical\\\"\\r\\n                ios=\\\"ellipsis-vertical \\\"\\r\\n              >\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }}</b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                \\r\\n                    {{ i + 1 }}.{{ item.task }}\\r\\n\\r\\n                    <ion-label mode=\\\"ios\\\" style=\\\"float: right;\\\">\\r\\n                      <ion-badge\\r\\n                        style=\\\"float: right;\\\"\\r\\n                        [color]=\\\"\\r\\n                          item.progress > 99\\r\\n                            ? 'success'\\r\\n                            : item.progress < 50\\r\\n                            ? 'warning'\\r\\n                            : 'primary'\\r\\n                        \\\"\\r\\n                      >\\r\\n                        {{ item.progress }}%\\r\\n                      </ion-badge>\\r\\n                    </ion-label>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n\\r\\n              <ion-icon  \\r\\n              [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> -->\\r\\n\\r\\n  <ion-grid *ngIf=\\\"userProgress.length > 0\\\">\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left\\\">\\r\\n            <ion-col>\\r\\n              <ion-item\\r\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\r\\n                detail=\\\"true\\\"\\r\\n              >\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <text-avatar  text ={{item.userName}}></text-avatar>\\r\\n                  <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }} </b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label size=\\\"small\\\" mode=\\\"ios\\\" position=\\\"stacked\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    <b style=\\\"font-size: smaller\\\"> {{ item.task }} </b>\\r\\n                  </ion-label>\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <ion-badge\\r\\n                      style=\\\"margin: 0px\\\"\\r\\n                      [color]=\\\"\\r\\n                        item.progress > 99\\r\\n                          ? 'success'\\r\\n                          : item.progress < 50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ item.progress }}%\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <!-- <ion-col size=\\\"auto\\\">\\r\\n              <ion-icon\\r\\n                [routerLink]=\\\"[\\r\\n                  '/tasktracker',\\r\\n                  'chat',\\r\\n                  user ? user.email : '',\\r\\n                  user ? user.userId : ''\\r\\n                ]\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col> -->\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div\\r\\n    #divMsg\\r\\n    style=\\\"display: none\\\"\\r\\n    class=\\\"ion-no-padding ion-margin-top ion-margin-horizontal\\\"\\r\\n  >\\r\\n    <ion-chip\\r\\n      color=\\\"danger\\\"\\r\\n      class=\\\"ion-justify-content-center\\\"\\r\\n      style=\\\"width: 98%\\\"\\r\\n    >\\r\\n      <ion-label>There is no task(s) for anyone today .</ion-label>\\r\\n    </ion-chip>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header class=\\\"ion-no-margin\\\">\\n  <ion-toolbar>\\n    <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"0\\\" #checkTeam value=\\\"calendar\\\">\\n      <ion-segment-button size=\\\"small\\\" value=\\\"calendar\\\" layout=\\\"icon-start\\\">\\n        <ion-label position=\\\"float\\\">Today Tasks</ion-label>\\n        <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n      </ion-segment-button>\\n\\n      <ion-segment-button size=\\\"small\\\" value=\\\"team\\\" layout=\\\"icon-start\\\">\\n        <ion-label position=\\\"float\\\">Team Progress</ion-label>\\n        <ion-icon name=\\\"people-outline\\\"></ion-icon>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div\\n    class=\\\"ion-no-margin ; no-padding\\\"\\n    style=\\\"\\n      height: 0px;\\n      text-align: center !important;\\n      position: relative;\\n      z-index: 1;\\n    \\\"\\n  >\\n    <ion-refresher\\n      #refTeamProgress\\n      id=\\\"refTeamProgress\\\"\\n      style=\\\"position: relative; z-index: 2; top: 0px\\\"\\n      slot=\\\"fixed\\\"\\n      (ionRefresh)=\\\"doRefresh($event)\\\"\\n    >\\n      <ion-refresher-content color=\\\"primary\\\" refreshingSpinner=\\\"crescent\\\">\\n      </ion-refresher-content>\\n    </ion-refresher>\\n  </div>\\n  <ion-grid *ngIf=' checkTeam.value==\\\"team\\\" '>\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <!-- <div\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n          *ngIf=\\\"isLoaded\\\"\\n        >\\n          <ion-spinner\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\n            name=\\\"crescent\\\"\\n          ></ion-spinner>\\n        </div> -->\\n\\n        <ion-list\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\n          [(ngModel)]=\\\"userProgress\\\"\\n          ngDefaultControl\\n          name=\\\"lstTaskProgress\\\"\\n        >\\n          <ion-row style=\\\"justify-items: left\\\">\\n            <ion-col>\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                  <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\n                  <text-avatar text=\\\"{{item.userName}}\\\"></text-avatar>\\n                </ion-avatar>\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <b>{{ item.userName }}</b></ion-label\\n                  >\\n\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\n                  </ion-label>\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <ion-badge\\n                      style=\\\"margin: 0px\\\"\\n                      [color]=\\\"\\n                        item.avgProgress > 99\\n                          ? 'success'\\n                          : item.avgProgress < 50\\n                          ? 'warning'\\n                          : 'primary'\\n                      \\\"\\n                    >\\n                      {{ item.avgProgress }}%\\n                    </ion-badge>\\n                  </ion-label>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <!-- <ion-col size=\\\"auto\\\">\\n              <ion-icon\\n                [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\n                color=\\\"primary\\\"\\n                name=\\\"chatbox-ellipses-outline\\\"\\n                style=\\\"\\n                  flex: left;\\n                  margin-top: 10px;\\n                  margin-left: 5px;\\n                  margin-right: 5px;\\n                  width: 20px;\\n                  height: 20px;\\n                \\\"\\n                class=\\\"ion-text-start\\\"\\n              ></ion-icon>\\n            </ion-col> -->\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <app-today-tasks *ngIf='checkTeam.value ==\\\"calendar\\\"'></app-today-tasks>\\n  <ion-fab\\n    *ngIf=\\\"auth.isLoggedIn()\\\"\\n    (click)=\\\"openNewTaskModal()\\\"\\n    vertical=\\\"bottom\\\"\\n    horizontal=\\\"end\\\"\\n    slot=\\\"fixed\\\"\\n  >\\n    <ion-fab-button size=\\\"small\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWphc3JhbWFuaS9PdGhlci13ZWJkZXYvaW9uaWMvVGFzay1UcmFja2VyLURldjIwMjAwODMwL3NyYy9hcHAvQ29tcG9uZW50cy90b2RheS10YXNrcy90b2RheS10YXNrcy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvQ29tcG9uZW50cy90b2RheS10YXNrcy90b2RheS10YXNrcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUUsdUVBQUE7O0FBQ0E7RUFDRSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy90b2RheS10YXNrcy90b2RheS10YXNrcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3BvdmVyLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQ6ICMyMjI7XG4gIH1cbiAgXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXG4gIC5teS1jdXN0b20tY2xhc3MgLnBvcG92ZXItY29udGVudCB7XG4gICAgYmFja2dyb3VuZDogIzIyMjtcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from \"@angular/core\";\n \nimport { Task } from \"src/app/Models/task\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { User } from \"src/app/Models/user\";\nimport { UsersService } from \"src/app/Services/users.service\";\n \nimport { AuthService } from \"src/app/Services/authService.service\";\n\n@Component({\n  selector: \"app-today-tasks\",\n  templateUrl: \"./today-tasks.component.html\",\n  styleUrls: [\"./today-tasks.component.scss\"],\n  \n})\nexport class TodayTasksComponent implements OnInit, AfterViewInit {\n  userProgress = new Array<any>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  user: User = new User();\n  @ViewChild(\"divMsg\") divMsg: ElementRef;\n  nodata: boolean = false;\n  isLoaded: boolean = false;\n  constructor(\n    private repServ: ReportService,\n    private usrServ: UsersService,\n    private auth: AuthService\n  ) {\n    //Get All Users\n    this.getUsersTodayTasks();\n    this.nodata = false;\n  }\n  ngAfterViewInit(): void {}\n\n  ngOnInit() {\n    this.user = this.auth.getLoggedUser();\n    // this.doRefresh();\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n    // this.userProgress = this.getUsersTodayTasks();\n  }\n\n  ionViewWillEnter() {}\n\n  getUsersTodayTasks() {\n    //  if (!this.isLoaded) {\n    this.repServ.getTasksToday().then((data) => {\n      this.users = this.usrServ.usersList;\n      this.tasks = data;\n      let userProgAr = new Array<any>();\n      //  console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n      console.log(\"Task getUsersTodayTasks\", this.users);\n      for (let t of this.tasks) {\n        if(t.userid)\n        {\n        console.log(\"Task getUsersTodayTasks t.userid\", t.userid);\n\n        let us: User = Object.create(\n          this.users.find((x) => x.userId == t.userid)\n        );\n        console.log(\"bject.create(this.users.find(x=>x.userId==t.userid))\", us);\n\n        let obj: any = {\n          id: t.id,\n          task: t.task,\n          taskdate: t.taskdate,\n          userid: t.userid,\n\n          userName: this.users.find((u) => u.userId == t.userid).userName,\n          progress: this.parsPercentage(t.progress),\n        };\n        //  console.log(\"   userProgAr.push(obj);\", obj);\n        userProgAr.push(obj);\n      }}\n      console.log(\"getUsersTodayTasks\", userProgAr);\n      this.userProgress = userProgAr;\n      this.userProgress.length < 1\n        ? (this.divMsg.nativeElement.style.display = \"block\")\n        : \"none\";\n    });\n\n    // }\n  }\n\n  parsPercentage(val): number {\n    return parseInt(val) > 1 ? parseInt(val) : parseInt(val) * 100;\n  }\n\n  async doRefresh(e) {\n    // console.log(\"UsersProgressComponent.doRefresh started\");\n    await new Promise(() => {\n      this.isLoaded = true;\n      setTimeout(() => {\n        this.getUsersTodayTasks();\n        e.target.complete();\n        // this.ionViewWillEnter();\n        this.isLoaded = false;\n      }, 1000);\n    }).catch((error) => error);\n  }\n}\n","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: TeamProgressPage,\n  },\n  {\n    path: \":userid\",\n    loadChildren: () =>\n      import(\"../user-tasks/user-tasks.module\").then((m) => m.UserTasksModule),\n    // loadChildren: \"../user-tasks/user-tasks.module#UserTasksModule\",\n    // loadChildren:\"../Components/user-tasks/user-tasks.module#UserTasksModule\",\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamProgressPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { TeamProgressPageRoutingModule } from \"./team-progress-routing.module\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\nimport { TextAvatarModule } from \"src/app/directives/text-avatar.directive.module\";\nimport { UserTasksPage } from \"../user-tasks/user-tasks.page\";\nimport { TodayTasksComponent } from \"src/app/Components/today-tasks/today-tasks.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TextAvatarModule,\n    TeamProgressPageRoutingModule,\n  ],\n  declarations: [TeamProgressPage, TodayTasksComponent],\n})\nexport class TeamProgressPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RlYW0tcHJvZ3Jlc3MvdGVhbS1wcm9ncmVzcy5wYWdlLnNjc3MifQ== */\";","import { Component, HostListener } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { ModalController, NavController } from '@ionic/angular';\nimport { CreateTaskPage } from '../create-task/create-task.page';\n@Component({\n  selector: \"app-team-progress\",\n  templateUrl: \"team-progress.page.html\",\n  styleUrls: [\"team-progress.page.scss\"],\n})\nexport class TeamProgressPage {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  user: User = new User();\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    public usrServ: UsersService,\n    private taskServ: TasksService,\n    public auth: AuthService,\n    private modalCtrl: ModalController, \n    private navCtrl: NavController,\n  ) {\n    this.getUserProgress();\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n    this.user = this.auth.getLoggedUser();\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  // ionViewWillLeave() {}\n  // ionViewDidLeave() {}\n  // ionViewDidEnter() {}\n\n  ionViewWillEnter() {\n    this.getUserProgress();\n  }\n\n  getUserProgress() {\n    //  if (!this.isLoaded) {\n\n    //Get All Users\n    this.users = this.usrServ.usersList;\n    let userProgAr = new Array<UserProgress>();\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    this.repServ.getTasks().subscribe((data) => {\n      // console.log(\"ionViewWillEnter this.tasks\", data);\n\n      tasksGroupByUsr = data.reduce((r, a) => {\n        r[a.userid] = r[a.userid] || [];\n        r[a.userid].push(a);\n        return r;\n      }, Object.create(null));\n\n      new Promise((resolve) => {\n        resolve(tasksGroupByUsr);\n      })\n        .then((res) => {\n          // console.log(\"Array<Array<Task>> \", res);\n\n          return Array.of(res);\n        })\n        .then((res) => {\n          let taskid = \"\";\n          // Iterate over the grouped Array by  group by value :\n          for (let id of Object.keys(res[0])) {\n            if (id) {\n              let up: UserProgress = new UserProgress();\n              let totaltasks: number = 0;\n              let totalInProgress: number = 0;\n              let totalInCompeletd: number = 0;\n              let avgProgress: number = 0;\n              let taskid = \"\";\n              up.userId = id;\n              up.userName = this.users.find((x) => x.userId == id).userName;\n              let val = res[0][id];\n              // console.log(\"userid, val\", id, val);\n              //Get the Task Object from the arry\n              for (let tid of Object.keys(val)) {\n                totaltasks++;\n                let percentage = 0;\n                percentage = this.parsPercentage(val[tid].progress);\n                let val2 = val[tid].task;\n                if (percentage < 100) {\n                  // console.log(\n                  //   \"if (percentage < 100) \",\n                  //   percentage,\n                  //   percentage < 100\n                  // );\n\n                  avgProgress = percentage + avgProgress;\n                  taskid = val[tid].id;\n                  totalInProgress++;\n                  // console.log(\" totalInProgress++\", totalInProgress, id);\n                } else if (percentage >= 100) ++totalInCompeletd;\n\n                // console.log(\"tid, val2\", tid, val2);\n              }\n              up.totaltasks = totaltasks;\n              up.totalInCompeletd = totalInCompeletd;\n              up.totalInProgress = totalInProgress;\n              if (avgProgress > 0 && totalInProgress > 0) {\n                let avg = avgProgress / totalInProgress;\n                up.avgProgress = Number(avg.toFixed(2)); //round the number\n              }\n\n              userProgAr.push(up);\n            }\n          }\n          this.userProgress = userProgAr;\n        });\n\n      //Group the Tasks By User ID\n    });\n    //console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    //  return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    //  console.log(\"val\", val);\n    let progress = (parseFloat(val) > 1\n      ? parseFloat(val)\n      : parseFloat(val) * 100\n    ).toFixed(0);\n    // console.log(\"progress\", progress);\n\n    return Number(\n      (parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(0)\n    );\n  }\n  openNewTaskModal() {\n    this.modalCtrl\n      .create({\n        component: CreateTaskPage,\n      })\n      .then((modalElement) => {\n        modalElement.present();\n        return modalElement.onDidDismiss();\n      })\n      .then((resultData) => {\n        this.navCtrl.navigateRoot([\"tasktracker/mytasks\"]);\n        console.log(\"ResultData: \", resultData);\n      });\n  \n  }\n  async doRefresh(e) {\n    await new Promise(() => {\n      this.isLoaded = true;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        e.target.complete();\n        this.isLoaded = false;\n      }, 1500);\n    }).catch((error) => error);\n  }\n}\n"]}