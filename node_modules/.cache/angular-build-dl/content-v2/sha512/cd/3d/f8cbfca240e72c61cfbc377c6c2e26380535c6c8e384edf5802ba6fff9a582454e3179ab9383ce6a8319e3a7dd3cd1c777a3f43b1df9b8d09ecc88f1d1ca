{"version":3,"sources":["./src/app/Pages/tab3/tab3.page.html","./src/app/Models/task.ts","./src/app/Pages/tab3/tab3-routing.module.ts","./src/app/Pages/tab3/tab3.module.ts","./src/app/Pages/tab3/tab3.page.scss","./src/app/Pages/tab3/tab3.page.ts","./src/app/Services/tasks.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8iCAA++B,eAAe,+BAA+B,wBAAwB,21EAA21E,oBAAoB,8MAA8M,GAAG,wMAAwM,GAAG,kPAAkP,iZAAiZ,KAAK,QAAQ,cAAc,uHAAuH,aAAa,0JAA0J,gVAAgV,wBAAwB,49BAA49B,E;;;;;;;;;;;;ACA/kM;AAAA;AAAO,MAAM,IAAI;IACb,YACW,EAAU,EACV,QAAgB,EAChB,QAAgB,EAChB,QAAgB,EAChB,QAAY;QAJZ,OAAE,GAAF,EAAE,CAAQ;QACV,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAI;IAAE,CAAC;CAC7B;;;;;;;;;;;;;;;;;;;;ACPwC;AACc;AAChB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;IACD;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,2OAA2C,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC;KACnG;CACF,CAAC;AAMF,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnBW;AACE;AACN;AACM;AACF;AACN;AAGsB;AAa7D,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAV1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,0DAAW;YACX,4DAAY;YACZ,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,CAAC,CAAC;YAC1D,0EAAqB;SACtB;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;ACrB3B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;;;;;;;;ACA3I;AAGD;AACnB;AAQzC,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAKnB,YAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QADtE,cAAS,GAAG,KAAK,CAAC;IACuD,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACzD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,gDAAgD;QAEhD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,UAAU;QACV,wDAAwD;QACxD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,aAAa;IACnB,CAAC;IAGD,MAAM,CAAC,MAAc,EAAE,WAA2B;QAChD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACpC,WAAW,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,aAAa,EAAE,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ,CAAC,IAAU,EAAE,WAA2B;QAC9C,WAAW,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;SAC5B;IACH,CAAC;CACF;;YAtCmC,oEAAY;YAAkB,sDAAM;;AAL3D,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oNAA6B;;KAE9B,CAAC;GACW,QAAQ,CA2CpB;AA3CoB;;;;;;;;;;;;;;;;;;;;;;ACZsB;AACL;AACY;AACS;AAChB;AAc3C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAkJvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAjJ1C,sBAAsB;QACtB,cAAc;QACd,YAAY;QACZ,gBAAgB;QAChB,qBAAqB;QACrB,UAAU;QACV,OAAO;QACP,cAAc;QACd,YAAY;QACZ,gBAAgB;QAChB,qBAAqB;QACrB,WAAW;QACX,OAAO;QACP,cAAc;QACd,YAAY;QACZ,gBAAgB;QAChB,qBAAqB;QACrB,WAAW;QACX,MAAM;QACN,KAAK;QAEG,aAAQ,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;IA4HN,CAAC;IA1H9C,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAED,oCAAoC;IACpC,YAAY,CAAC,MAAc;QACzB,+CAA+C;QAC/C,yBAAyB;QACzB,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CACF,4EAA4E,MAAM,EAAE,CACrF;aACA,IAAI,CACH,0DAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACd,MAAM,KAAK,GAAG,EAAE,CAAC;YACjB,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;gBACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC/B,KAAK,CAAC,IAAI,CACR,IAAI,iDAAI,CACN,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EACf,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EACjB,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EACpB,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,EACxC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CACtB,CACF,CAAC;iBACH;aACF;YACD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,qBAAqB;QACtG,CAAC,CAAC,EACF,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CACF,4EAA4E,EAAE,EAAE,CACjF;aACA,IAAI,CACH,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACf,OAAO,IAAI,iDAAI,CACb,EAAE,EACF,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,OAAO,EAChB,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,EACpC,QAAQ,CAAC,QAAQ,CAClB,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,mDAAmD;IACrD,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,mEAAmE;QACnE,8BAA8B;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;QACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEnC,IAAI,YAAoB,CAAC;QAEzB,OAAO,CACL,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,2DAAI,CAAC,CAAC,CAAC,EACP,gEAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAClB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,2DAA2D;aAC3F;iBAAM;gBACL,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;aAClB;QACH,CAAC,CAAC,EACF,gEAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAClB,MAAM,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;YACnE,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YAC1B,MAAM,OAAO,GAAG,YAAY,CAAC,gBAAgB,CAAC,CAAC;YAC/C,YAAY,CAAC,gBAAgB,CAAC,GAAG,IAAI,iDAAI,CACvC,OAAO,CAAC,EAAE,EACV,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CACtB,CAAC;YACF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,4EAA4E,MAAM,EAAE,oBAC/E,YAAY,CAAC,gBAAgB,CAAC,EACpC,CAAC,CAAC,aAAa;QAClB,CAAC,CAAC,CACH;YACD,0DAAG,CAAC,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACnC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,yBAAyB;QACzB,mEAAmE;QACnE,gDAAgD;QAChD,6BAA6B;QAE7B,IAAI,CAAC,UAAU;aACZ,MAAM,CACL,4EAA4E,MAAM,EAAE,CACrF;aACA,IAAI,CACH,gEAAS,CAAC,GAAG,EAAE;YACb,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC,EACF,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CACH,CAAC;IACN,CAAC;CAGF;;YADiC,+DAAU;;AAlJ/B,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAmJxB;AAnJwB","file":"tab3-tab3-module-es2015.js","sourcesContent":["export default \"<!-- <ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon name=\\\"list-circle-outline\\\" size=\\\"large\\\" slot=\\\"start\\\"></ion-icon>\\r\\n    <ion-title slot=\\\"start\\\" mode=\\\"md\\\" position=\\\"fixed\\\">My Task List</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" ion-text-center>\\r\\n        <div *ngIf=\\\"isLoading\\\" class=\\\"ion-text-center\\\">\\r\\n          <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"ion-text-center\\\"\\r\\n          *ngIf=\\\"!isLoading && loadedTasks.length <= 0\\\"\\r\\n        >\\r\\n          <p>You don't have any tasks.</p>\\r\\n        </div>\\r\\n        <ion-list *ngIf=\\\"!isLoading\\\">\\r\\n          <ion-item-sliding *ngFor=\\\"let tk of loadedTasks\\\" #slidingItem>\\r\\n            <ion-item\\r\\n              [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', tk.id ]\\\"\\r\\n            >\\r\\n              <ion-label>\\r\\n                <h1>{{ tk.taskName }}</h1>\\r\\n                <h2>{{ tk.progress | percent}}</h2>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item-options>\\r\\n              <ion-item-option\\r\\n                color=\\\"secondary\\\"\\r\\n                (click)=\\\"onEdit(tk.id, slidingItem)\\\"\\r\\n              >\\r\\n                <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n              </ion-item-option>\\r\\n              <ion-item-option color=\\\"danger\\\">\\r\\n                <ion-icon\\r\\n                  name=\\\"trash\\\"\\r\\n                  slot=\\\"icon-only\\\"\\r\\n                  (click)=\\\"onDelete(tk, slidingItem)\\\"\\r\\n                ></ion-icon>\\r\\n              </ion-item-option>\\r\\n            </ion-item-options>\\r\\n          </ion-item-sliding>\\r\\n     \\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content> -->\\r\\n<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"list-circle-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> My Task List </ion-label>\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button>\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid no-padding ion-no-margin>\\r\\n    <ion-row>\\r\\n      <ion-col\\r\\n        *ngIf=\\\"isLoading\\\"\\r\\n        size=\\\"12\\\"\\r\\n        size-lg=\\\"6\\\"\\r\\n        offset-med=\\\"3\\\"\\r\\n        offset-lg=\\\"3\\\"\\r\\n      >\\r\\n        <div class=\\\"ion-text-center\\\">\\r\\n          <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length <= 0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-chip class=\\\"ion-text-center\\\" outline color=\\\"danger\\\">\\r\\n          <ion-label>\\r\\n            <b>You don't have any assigend tasks </b>\\r\\n          </ion-label>\\r\\n        </ion-chip>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length >0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"primary\\\">\\r\\n              <ion-label> Tasks <b>({{loadedTasks.length}}) </b></ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"warning\\\">\\r\\n              <ion-label> In-Progress <b>({{1}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"success\\\">\\r\\n              <ion-label> Done <b>({{1}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-list>\\r\\n          <ion-row\\r\\n            *ngFor=\\\"let tk of loadedTasks let i = index\\\"\\r\\n            style=\\\"justify-items: left;\\\"\\r\\n          >\\r\\n            <ion-col>\\r\\n              <ion-item-sliding #slidingItem>\\r\\n                <ion-item\\r\\n                  [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', tk.id ]\\\"\\r\\n                >\\r\\n                  <ion-label\\r\\n                    class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\r\\n                  >\\r\\n                    <h3><b> {{i+1}}- </b>{{ tk.taskName}}</h3>\\r\\n\\r\\n                    <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\r\\n                      {{tk.taskdate}}\\r\\n                    </ion-note>\\r\\n                    <ion-badge\\r\\n                      slot=\\\"end\\\"\\r\\n                      style=\\\"float: right;\\\"\\r\\n                      [color]=\\\"\\r\\n                    tk.progress  > 0.99\\r\\n                          ? 'success'\\r\\n                          : tk.progress  < 0.50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ tk.progress | percent}}\\r\\n                    </ion-badge>\\r\\n                \\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item-options>\\r\\n                  <ion-item-option\\r\\n                    color=\\\"secondary\\\"\\r\\n                    (click)=\\\"onEdit(tk.id, slidingItem)\\\"\\r\\n                  >\\r\\n                    <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                  <ion-item-option color=\\\"danger\\\">\\r\\n                    <ion-icon\\r\\n                      name=\\\"trash\\\"\\r\\n                      slot=\\\"icon-only\\\"\\r\\n                      (click)=\\\"onDelete(tk, slidingItem)\\\"\\r\\n                    ></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                </ion-item-options>\\r\\n              </ion-item-sliding>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export class Task{\r\n    constructor(\r\n        public id: string,\r\n        public taskName: string,\r\n        public taskDesc: string,\r\n        public progress: number,\r\n        public taskdate:any){}\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Tab3Page } from './tab3.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab3Page,\r\n  },\r\n  {\r\n    path: ':taskId',\r\n    loadChildren: () => import('../task-detial/task-detial.module').then( m => m.TaskDetialPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Tab3PageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab3Page } from './tab3.page';\r\n \r\n\r\nimport { Tab3PageRoutingModule } from './tab3-routing.module'\r\n \r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\r\n    Tab3PageRoutingModule,\r\n  ],\r\n  declarations: [Tab3Page]\r\n})\r\nexport class Tab3PageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { IonItemSliding } from '@ionic/angular';\r\nimport { Task } from '../../Models/task';\r\nimport { TasksService } from '../../Services/tasks.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tab3',\r\n  templateUrl: 'tab3.page.html',\r\n  styleUrls: ['tab3.page.scss']\r\n})\r\nexport class Tab3Page implements OnInit, OnDestroy{\r\n\r\n  loadedTasks: Task[];\r\n  private taskSub: Subscription;\r\n  isLoading = false;\r\n  constructor(private tasksService: TasksService, private router: Router) {}\r\n\r\n  ngOnInit(){\r\n    this.taskSub = this.tasksService.myTasks.subscribe(tasks => {\r\n      this.loadedTasks = tasks;\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    // this.loadedTasks = this.tasksService.myTasks;\r\n\r\n    this.isLoading = true;\r\n\r\n    // Testing\r\n    // TODO: Need to pass the right userId into fetchMyTasks\r\n    this.tasksService.fetchMyTasks('0').subscribe(() => {\r\n      this.isLoading = false;\r\n    }); // Access API\r\n  }\r\n\r\n\r\n  onEdit(taskId: string, slidingItem: IonItemSliding){\r\n    console.log(\"Getting into onEdit\");\r\n    console.log(\"Tast ID is: \", taskId);\r\n    slidingItem.close();\r\n    this.router.navigate(['/', 'tasktracker', 'submit-my-progress', taskId]);\r\n  }\r\n\r\n  onDelete(task: Task, slidingItem: IonItemSliding){\r\n    slidingItem.close();\r\n    this.tasksService.deleteTask(task.id);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.taskSub){\r\n      this.taskSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Task } from \"../Models/task\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map, tap, take, switchMap } from \"rxjs/operators\";\r\nimport { BehaviorSubject, of } from \"rxjs\";\r\n\r\ninterface TaskData {\r\n  task: string;\r\n  details: string;\r\n  id: string;\r\n  taskdate: string;\r\n  userid: string;\r\n  progress: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TasksService {\r\n  // myTasks: Task[] = [\r\n  //   new Task(\r\n  //     't1',\r\n  //     'Test 1',\r\n  //     'Test Desc 1',\r\n  //     0.5\r\n  //   ),\r\n  //   new Task(\r\n  //     't2',\r\n  //     'Test 2',\r\n  //     'Test Desc 2',\r\n  //     0.25\r\n  //   ),\r\n  //   new Task(\r\n  //     't3',\r\n  //     'Test 3',\r\n  //     'Test Desc 3',\r\n  //     0.85\r\n  //   )\r\n  // ];\r\n\r\n  private _myTasks = new BehaviorSubject<Task[]>([]);\r\n\r\n  get myTasks() {\r\n    return this._myTasks.asObservable();\r\n  }\r\n\r\n  // API Access // Get all user tasks \r\n  fetchMyTasks(userId: string) {\r\n    // For now, fetch all the task for the userId 0\r\n    // TODO: change API later\r\n    return this.httpClient\r\n      .get<{ [key: string]: TaskData }>(\r\n        `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?userid=${userId}`\r\n      )\r\n      .pipe(\r\n        map((resData) => {\r\n          const tasks = [];\r\n          for (const key in resData) {\r\n            if (resData.hasOwnProperty(key)) {\r\n              tasks.push(\r\n                new Task(\r\n                  resData[key].id,\r\n                  resData[key].task,\r\n                  resData[key].details,\r\n                  parseFloat(resData[key].progress) * 0.01,\r\n                  resData[key].taskdate\r\n                )\r\n              );\r\n            }\r\n          }\r\n          return tasks.sort((a, b) =>Date.parse(b.taskdate)  - Date.parse(a.taskdate)) ; // order by date DESC\r\n        }),\r\n        tap((tasks) => {\r\n          this._myTasks.next(tasks)\r\n        })\r\n      );\r\n  }\r\n\r\n  getTask(id: string) {\r\n    return this.httpClient\r\n      .get<TaskData>(\r\n        `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?taskid=${id}`\r\n      )\r\n      .pipe(\r\n        map((taskData) => {\r\n          return new Task(\r\n            id,\r\n            taskData.task,\r\n            taskData.details,\r\n            parseFloat(taskData.progress) * 0.01,\r\n            taskData.taskdate\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  getMyTasks(id: string) {\r\n    // return {...this.myTasks.find(p => p.id === id)};\r\n  }\r\n\r\n  updateTask(task: Task) {\r\n    // let index = this.myTasks.findIndex(item => item.id === task.id);\r\n    // this.myTasks[index] = task;\r\n    const taskId = task.id;\r\n    const taskName = task.taskName;\r\n    const taskDesc = task.taskDesc;\r\n    const taskProgress = task.progress;\r\n\r\n    let updatedTasks: Task[];\r\n\r\n    return (\r\n      this.myTasks.pipe(\r\n        take(1),\r\n        switchMap((tasks) => {\r\n          if (!tasks || tasks.length <= 0) {\r\n            return this.fetchMyTasks(\"0\"); // TODO: This userId must be gotten from user service later\r\n          } else {\r\n            return of(tasks);\r\n          }\r\n        }),\r\n        switchMap((tasks) => {\r\n          const updatedTaskIndex = tasks.findIndex((tk) => tk.id === taskId);\r\n          updatedTasks = [...tasks];\r\n          const oldTask = updatedTasks[updatedTaskIndex];\r\n          updatedTasks[updatedTaskIndex] = new Task(\r\n            oldTask.id,\r\n            taskName,\r\n            taskDesc,\r\n            taskProgress,\r\n            new Date().toString()\r\n          );\r\n          return this.httpClient.put(\r\n            `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?taskid=${taskId}`,\r\n            { ...updatedTasks[updatedTaskIndex] }\r\n          ); // ? id: null\r\n        })\r\n      ),\r\n      tap(() => {\r\n        this._myTasks.next(updatedTasks);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteTask(taskId: string) {\r\n    // FAKE DELETING FUNCTION\r\n    // let index = this.myTasks.findIndex(item => item.id === task.id);\r\n    // this.myTasks = this.myTasks.splice(index, 1);\r\n    // console.log(this.myTasks);\r\n\r\n    this.httpClient\r\n      .delete(\r\n        `https://46odim7l6f.execute-api.us-east-2.amazonaws.com/beta/task/?taskid=${taskId}`\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          return this.myTasks;\r\n        }),\r\n        take(1),\r\n        tap((tasks) => {\r\n          this._myTasks.next(tasks.filter((t) => t.id !== taskId));\r\n        })\r\n      );\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n}\r\n"],"sourceRoot":"webpack:///"}