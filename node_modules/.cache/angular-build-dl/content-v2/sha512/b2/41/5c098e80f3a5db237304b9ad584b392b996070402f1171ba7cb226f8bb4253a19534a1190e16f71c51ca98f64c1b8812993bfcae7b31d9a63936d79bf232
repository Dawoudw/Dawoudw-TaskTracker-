{"version":3,"sources":["webpack:///src/app/Pages/user-tasks/user-tasks.page.html","webpack:///src/app/Pages/user-tasks/user-tasks-routing.module.ts","webpack:///src/app/Pages/user-tasks/user-tasks.module.ts","webpack:///src/app/Pages/user-tasks/user-tasks.page.scss","webpack:///src/app/Pages/user-tasks/user-tasks.page.ts"],"names":["routes","path","component","UserTasksRoutingModule","imports","forChild","exports","UserTasksModule","declarations","UserTasksPage","datasev","activeroute","aut","usrServ","taskServ","navCtr","userProgress","userProgressList","tasks","Array","user","Object","create","userid","paramMap","subscribe","param","has","Number","parseInt","get","userId","fetchMyTasks","slice","back","getUserTasks","getUserById","filter","x","parsPercentage","progress","console","log","length","val","parseFloat","selector","template"],"mappings":"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","file":"user-tasks-user-tasks-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid no-padding ion-no-margin>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-buttons slot=\\\"start\\\">\\n                <ion-back-button\\n                  text=\\\"\\\"\\n                  defaultHref=\\\"tasktracker/team-progress\\\"\\n                ></ion-back-button>\\n              </ion-buttons>\\n\\n              <ion-label slot=\\\"\\\" color=\\\"primary\\\">\\n                <b> {{user.userName}}</b>\\n              </ion-label>\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\n                <text-avatar  text ={{user.userName}}></text-avatar>\\n              </ion-avatar>\\n            </ion-item>\\n          </ion-col> </ion-row\\n        ><ion-row>\\n          <ion-col size=\\\"auto\\\" (click)=\\\"getUserTasks()\\\">\\n            <ion-chip outline color=\\\"primary\\\">\\n              <ion-label>\\n                Tasks <b>({{userProgressList.length}}) </b></ion-label\\n              >\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\" (click)=\\\"getInprogress()\\\">\\n            <ion-chip outline color=\\\"warning\\\">\\n              <ion-label>\\n                In-Progress <b>({{getTotalInProgress()}}) </b>\\n              </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\" (click)=\\\"getCompleted()\\\">\\n            <ion-chip outline color=\\\"success\\\">\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-list>\\n          <ion-row\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\n            style=\\\"justify-items: left\\\"\\n          >\\n            <ion-col>\\n              <ion-item\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\n                detail=\\\"true\\\"\\n              >\\n                <ion-label\\n                  class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n                >\\n                  <h3><b> {{i+1}}- </b>{{ item.task }}</h3>\\n\\n                  <ion-note\\n                    size=\\\"samll\\\"\\n                    slot=\\\"start\\\"\\n                    class=\\\"default\\\"\\n                    color=\\\"secondary\\\"\\n                  >\\n                    <i style=\\\"font-size: smaller\\\"> {{item.taskdate|date}}</i>\\n                  </ion-note>\\n                </ion-label>\\n\\n                <ion-badge\\n                  [color]=\\\"\\n                      item.progress > 0.99\\n                        ? 'success'\\n                        : item.progress < 0.50\\n                        ? 'warning'\\n                        : 'primary'\\n                    \\\"\\n                >\\n                  {{ item.progress|percent }}\\n                </ion-badge>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserTasksPage} from './user-tasks.page';\r\n \r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserTasksPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserTasksRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n \r\n import {UserTasksRoutingModule} from '../../Pages/user-tasks/user-tasks-routing.module'\r\n \r\nimport { UserTasksPage } from '../../Pages/user-tasks/user-tasks.page';\r\nimport { TextAvatarModule  } from '../../directives/text-avatar.directive.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    UserTasksRoutingModule,\r\n    TextAvatarModule \r\n \r\n    \r\n  ],\r\n  declarations: [UserTasksPage]\r\n})\r\nexport class UserTasksModule  {}\r\n","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWphc3JhbWFuaS9PdGhlci13ZWJkZXYvaW9uaWMvVGFzay1UcmFja2VyLURldjIwMjAwODMwL3NyYy9hcHAvUGFnZXMvdXNlci10YXNrcy91c2VyLXRhc2tzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy91c2VyLXRhc2tzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUUsdUVBQUE7O0FBQ0E7RUFDRSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy91c2VyLXRhc2tzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3BvdmVyLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZDogIzIyMjtcclxuICB9XHJcbiAgXHJcbiAgLyogV29ya3MgLSBwYXNzIFwibXktY3VzdG9tLWNsYXNzXCIgaW4gY3NzQ2xhc3MgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHkgKi9cclxuICAubXktY3VzdG9tLWNsYXNzIC5wb3BvdmVyLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZDogIzIyMjtcclxuICB9IiwiLnBvcG92ZXItY29udGVudCB7XG4gIGJhY2tncm91bmQ6ICMyMjI7XG59XG5cbi8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXG4ubXktY3VzdG9tLWNsYXNzIC5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufSJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/Models/user\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Task } from \"src/app/Models/task\";\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: \"app-user-tasks\",\n  templateUrl: \"user-tasks.page.html\",\n  styleUrls: [\"user-tasks.page.scss\"],\n})\nexport class UserTasksPage implements OnInit {\n  userProgress: Array<any> = [];\n  userProgressList: Array<any> = [];\n  tasks: Task[] = new Array();\n  user:User = Object.create(User);\n  //  listingdata:Array<any> = [];\n  constructor(\n    private datasev: TaskProgressService,\n    private activeroute: ActivatedRoute,\n    private aut: AuthService,\n    private usrServ: UsersService,\n    private taskServ: TasksService,\n    public navCtr:NavController,\n  ) {}\n\n  getUserTasks() {\n    let userid: number;\n    this.activeroute.paramMap.subscribe((param) => {\n      if (!param.has(\"userid\")) {\n        //console.log(\"return\");\n        return;\n      }\n      userid = Number.parseInt(param.get(\"userid\"));\n      this.user.userId = userid;\n      // console.log(userid);\n\n      this.taskServ.fetchMyTasks(\"\" + userid).subscribe((tasks) => {\n        this.userProgressList = tasks.slice();\n        this.userProgress= new Array();\n        this.userProgress = tasks.slice();\n      \n      });\n    });\n  }\n  back()\n  {\n    this.navCtr.back();\n  }\n  ngOnInit() {}\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  \n    this.getUserTasks();  this.user = this.usrServ.getUserById(this.user.userId)\n    //console.log(this.userProgress);\n  }\n  ionViewDidLoad() {\n    // console.log(\"this.ionViewDidLoad\");\n  }\n  getInprogress()\n  {\n    this.userProgress= new Array();\n    this.userProgress= this.userProgressList.filter((x) => this.parsPercentage(x.progress) < 100).slice();\n  }\n  getCompleted()\n  {\n  \n    this.userProgress= new Array();\n    this.userProgress= this.userProgressList.filter((x) => this.parsPercentage(x.progress) >= 100).slice(); \n     console.log(\"getCompleted\", this.userProgress);\n  }\n\n   \n  getTotalInProgress(): any {\n    return this.userProgressList.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\n  }\n  getTotalCompleted(): any {\n    return this.userProgressList.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n}\n"]}