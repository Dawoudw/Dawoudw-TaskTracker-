{"version":3,"sources":["./src/app/Pages/tab3/tab3.page.html","./src/app/Pages/tab3/tab3-routing.module.ts","./src/app/Pages/tab3/tab3.module.ts","./src/app/Pages/tab3/tab3.page.scss","./src/app/Pages/tab3/tab3.page.ts"],"names":[],"mappings":"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","file":"tab3-tab3-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-margin\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-icon\\r\\n      name=\\\"list-circle-outline\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      size=\\\"large\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      style=\\\"width: 24px !important;height: 24px !important;margin-right: 5px;margin-left: 5px;\\\"\\r\\n    ></ion-icon>\\r\\n    <ion-label slot=\\\"start\\\" color=\\\"primary\\\"> <p>My Tasks</p></ion-label>\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <!-- <ion-button [routerLink]=\\\"['/', 'tasktracker', 'submit-my-progress', 'new']\\\"> -->\\r\\n      <ion-button (click)=\\\"openNewTaskModal()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid no-padding ion-no-margin>\\r\\n    <ion-row>\\r\\n      <ion-col\\r\\n        *ngIf=\\\"isLoading\\\"\\r\\n        size=\\\"12\\\"\\r\\n        size-lg=\\\"6\\\"\\r\\n        offset-med=\\\"3\\\"\\r\\n        offset-lg=\\\"3\\\"\\r\\n      >\\r\\n        <div class=\\\"ion-text-center\\\">\\r\\n          <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"loadedTasks.length <= 0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-chip class=\\\"ion-text-center\\\" outline color=\\\"danger\\\">\\r\\n          <ion-label>\\r\\n            <b>You don't have any assigend tasks </b>\\r\\n          </ion-label>\\r\\n        </ion-chip>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!isLoading && loadedTasks.length >0\\\">\\r\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"primary\\\">\\r\\n              <ion-label> Tasks <b>({{loadedTasks.length}}) </b></ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"warning\\\">\\r\\n              <ion-label> In-Progress <b>({{getTotalInProgress()}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"auto\\\">\\r\\n            <ion-chip outline color=\\\"success\\\">\\r\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-list>\\r\\n          <ion-row\\r\\n            *ngFor=\\\"let tk of loadedTasks let i = index\\\"\\r\\n            style=\\\"justify-items: left;\\\"\\r\\n          >\\r\\n            <ion-col>\\r\\n              <ion-item-sliding #slidingItem>\\r\\n                <ion-item\\r\\n                  [routerLink]=\\\"['/', 'tasktracker', 'mytasks', tk.id ]\\\"\\r\\n                >\\r\\n                  <ion-label\\r\\n                    class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\r\\n                  >\\r\\n                    <h3><b> {{i+1}}- </b>{{ tk.task}}</h3>\\r\\n\\r\\n                    <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\">\\r\\n                      {{tk.taskdate}}\\r\\n                    </ion-note>\\r\\n                    <ion-badge\\r\\n                      slot=\\\"end\\\"\\r\\n                      style=\\\"float: right;\\\"\\r\\n                      [color]=\\\"\\r\\n                    tk.progress  > 0.99\\r\\n                          ? 'success'\\r\\n                          : tk.progress  < 0.50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ tk.progress | percent}}\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item-options>\\r\\n                  <ion-item-option\\r\\n                    color=\\\"secondary\\\"\\r\\n                    (click)=\\\"onEdit(tk.id, slidingItem)\\\"\\r\\n                  >\\r\\n                    <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                  <ion-item-option color=\\\"danger\\\">\\r\\n                    <ion-icon\\r\\n                      name=\\\"trash\\\"\\r\\n                      slot=\\\"icon-only\\\"\\r\\n                      (click)=\\\"onDelete(tk, slidingItem)\\\"\\r\\n                    ></ion-icon>\\r\\n                  </ion-item-option>\\r\\n                </ion-item-options>\\r\\n              </ion-item-sliding>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Tab3Page } from './tab3.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab3Page,\r\n  },\r\n  {\r\n    path: ':taskId',\r\n    loadChildren: () => import('../task-detial/task-detial.module').then( m => m.TaskDetialPageModule)\r\n  },\r\n  {\r\n    path: 'new',\r\n    loadChildren: () => import('../../Components/new-task/new-task.component').then( m => m.NewTaskComponent)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Tab3PageRoutingModule {}","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab3Page } from './tab3.page';\r\n \r\n\r\nimport { Tab3PageRoutingModule } from './tab3-routing.module'\r\n \r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\r\n    Tab3PageRoutingModule,\r\n  ],\r\n  declarations: [Tab3Page]\r\n})\r\nexport class Tab3PageModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { IonItemSliding, ModalController } from \"@ionic/angular\";\r\nimport { Task } from \"../../Models/task\";\r\nimport { TasksService } from \"../../Services/tasks.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { NewTaskComponent } from \"src/app/Components/new-task/new-task.component\";\r\nimport { CreateTaskPage } from \"src/app/Pages/create-task/create-task.page\";\r\n\r\n@Component({\r\n  selector: \"app-tab3\",\r\n  templateUrl: \"tab3.page.html\",\r\n  styleUrls: [\"tab3.page.scss\"],\r\n})\r\nexport class Tab3Page implements OnInit, OnDestroy {\r\n  loadedTasks: Task[];\r\n  private taskSub: Subscription;\r\n  isLoading = false;\r\n  isLoadingError = false;\r\n  isRefreshing = false;\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private router: Router,\r\n    private modalCtrl: ModalController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.taskSub = this.tasksService.myTasks.subscribe((tasks) => {\r\n      this.loadedTasks = tasks.slice();\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    // this.loadedTasks = this.tasksService.myTasks;\r\n\r\n    if (this.tasksService.loginedUser) {\r\n      this.isLoading = true;\r\n    } else {\r\n      this.isLoadingError = true;\r\n    //  return;\r\n    }\r\n\r\n    // Testing\r\n    // TODO: Need to pass the right userId into fetchMyTasks\r\n    this.tasksService\r\n      .fetchMyTasks(this.tasksService.loginedUser.userId)\r\n      .subscribe(() => {\r\n        this.isLoading = false;\r\n      }); // Access API\r\n  }\r\n\r\n  ionViewWillLeave() {}\r\n\r\n  doRefresh(event) {\r\n    this.isRefreshing = true;\r\n\r\n    setTimeout(() => {\r\n      this.ionViewWillEnter();\r\n      event.target.complete();\r\n      this.isRefreshing = false;\r\n    }, 2000);\r\n  }\r\n\r\n  onEdit(taskId: string, slidingItem: IonItemSliding) {\r\n    console.log(\"Getting into onEdit\");\r\n    console.log(\"Tast ID is: \", taskId);\r\n    slidingItem.close();\r\n    this.router.navigate([\"/\", \"tasktracker\", \"mytasks\", taskId]);\r\n  }\r\n\r\n  openNewTaskModal() {\r\n    this.modalCtrl\r\n      .create({\r\n        component: CreateTaskPage,\r\n      })\r\n      .then((modalElement) => {\r\n        modalElement.present();\r\n        return modalElement.onDidDismiss();\r\n      })\r\n      .then((resultData) => {\r\n        console.log(\"ResultData: \", resultData);\r\n      });\r\n  }\r\n\r\n  onDelete(task: Task, slidingItem: IonItemSliding) {\r\n    slidingItem.close();\r\n    this.tasksService.deleteTask(task);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.taskSub) {\r\n      this.taskSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getTotalInProgress(): any {\r\n    return this.loadedTasks.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\r\n  }\r\n  getTotalCompleted(): any {\r\n    return this.loadedTasks.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\r\n  }\r\n  parsPercentage(val): number {\r\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}