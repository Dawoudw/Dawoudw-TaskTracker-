{"version":3,"sources":["webpack:///src/app/Components/today-tasks/today-tasks.component.html","webpack:///src/app/Pages/team-progress/team-progress.page.html","webpack:///src/app/Pages/user-tasks/user-tasks.page.html","webpack:///src/app/Components/today-tasks/users-progress.component.scss","webpack:///src/app/Components/today-tasks/users-progress.component.ts","webpack:///src/app/Models/user-progress.ts","webpack:///src/app/Pages/team-progress/team-progress-routing.module.ts","webpack:///src/app/Pages/team-progress/team-progress.module.ts","webpack:///src/app/Pages/team-progress/team-progress.page.scss","webpack:///src/app/Pages/team-progress/team-progress.page.ts","webpack:///src/app/Pages/user-tasks/user-tasks.page.scss","webpack:///src/app/Pages/user-tasks/user-tasks.page.ts"],"names":["TodayTasksComponent","repServ","usrServ","auth","userProgress","Array","tasks","users","user","nodata","isLoaded","getUsersTodayTasks","getLoggedUser","getTasksToday","then","data","usersList","userProgAr","console","log","t","obj","id","task","taskdate","userid","userName","find","u","userId","progress","parsPercentage","push","length","divMsg","nativeElement","style","display","val","parseFloat","e","Promise","setTimeout","target","complete","error","selector","template","UserProgress","username","avgProgress","totaltasks","totalInProgress","totalInCompeletd","routes","path","component","loadChildren","m","UserTasksModule","TeamProgressPageRoutingModule","imports","forChild","exports","TeamProgressPageModule","declarations","TeamProgressPage","datasev","taskServ","getUserProgress","tasksGroupByUsr","getTasks","subscribe","reduce","r","a","Object","create","resolve","res","of","taskid","up","x","keys","tid","percentage","val2","avg","Number","toFixed","ionViewWillEnter","UserTasksPage","activeroute","aut","navCtr","paramMap","param","has","parseInt","get","fetchMyTasks","slice","back","getUserTasks","getUserById","filter"],"mappings":"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","file":"team-progress-team-progress-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n  <div\\r\\n    class=\\\"ion-no-margin ; no-padding\\\"\\r\\n    style=\\\"\\r\\n      height: 0px;\\r\\n      text-align: center !important;\\r\\n      position: relative;\\r\\n      z-index: 1;\\r\\n    \\\"\\r\\n  >\\r\\n    <ion-refresher\\r\\n      style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\r\\n      slot=\\\"fixed\\\"\\r\\n      (ionRefresh)=\\\"doRefresh($event)\\\"\\r\\n    >\\r\\n      <ion-refresher-content refreshingSpinner=\\\"crescent\\\">\\r\\n      </ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n  </div>\\r\\n\\r\\n  <!-- <ion-grid *ngIf=\\\"userProgress.length > 0\\\">\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list\\r\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n          [(ngModel)]=\\\"userProgress\\\"\\r\\n          ngDefaultControl\\r\\n          name=\\\"lstTaskProgress\\\"\\r\\n        >\\r\\n          <ion-row style=\\\"justify-items: left;\\\">\\r\\n            <ion-col>\\r\\n              <ion-item\\r\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\r\\n                detail=\\\"true\\\"\\r\\n                md=\\\"ellipsis-vertical\\\"\\r\\n                ios=\\\"ellipsis-vertical \\\"\\r\\n              >\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }}</b></ion-label\\r\\n                  >\\r\\n\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                \\r\\n                    {{ i + 1 }}.{{ item.task }}\\r\\n\\r\\n                    <ion-label mode=\\\"ios\\\" style=\\\"float: right;\\\">\\r\\n                      <ion-badge\\r\\n                        style=\\\"float: right;\\\"\\r\\n                        [color]=\\\"\\r\\n                          item.progress > 99\\r\\n                            ? 'success'\\r\\n                            : item.progress < 50\\r\\n                            ? 'warning'\\r\\n                            : 'primary'\\r\\n                        \\\"\\r\\n                      >\\r\\n                        {{ item.progress }}%\\r\\n                      </ion-badge>\\r\\n                    </ion-label>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n\\r\\n              <ion-icon  \\r\\n              [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> -->\\r\\n\\r\\n\\r\\n  <ion-grid  *ngIf=\\\"userProgress.length > 0\\\" >\\r\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n \\r\\n        <ion-list\\r\\n        *ngFor=\\\"let item of userProgress; let i = index\\\"\\r\\n        [(ngModel)]=\\\"userProgress\\\"\\r\\n        ngDefaultControl\\r\\n        name=\\\"lstTaskProgress\\\"\\r\\n      >\\r\\n          <ion-row style=\\\"justify-items: left;\\\">\\r\\n            <ion-col>\\r\\n              <ion-item     [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\r\\n              detail=\\\"true\\\">\\r\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\r\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\r\\n                </ion-avatar>\\r\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\r\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <b>{{ item.userName }} </b></ion-label\\r\\n                  >\\r\\n<!-- \\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\r\\n                  </ion-label> -->\\r\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\r\\n                    <ion-badge\\r\\n                      style=\\\"margin: 0px;\\\"\\r\\n                      [color]=\\\"\\r\\n                        item.progress > 99\\r\\n                          ? 'success'\\r\\n                          : item.progress < 50\\r\\n                          ? 'warning'\\r\\n                          : 'primary'\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ item.progress }}%\\r\\n                    </ion-badge>\\r\\n                  </ion-label>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n              <ion-icon\\r\\n                [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"chatbox-ellipses-outline\\\"\\r\\n                style=\\\"\\r\\n                  flex: left;\\r\\n                  margin-top: 10px;\\r\\n                  margin-left: 5px;\\r\\n                  margin-right: 5px;\\r\\n                  width: 20px;\\r\\n                  height: 20px;\\r\\n                \\\"\\r\\n                class=\\\"ion-text-start\\\"\\r\\n              ></ion-icon>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div\\r\\n    #divMsg\\r\\n    style=\\\"display: none;\\\"\\r\\n    class=\\\"ion-no-padding ion-margin-top ion-margin-horizontal\\\"\\r\\n  >\\r\\n    <ion-chip\\r\\n      color=\\\"danger\\\"\\r\\n      class=\\\"ion-justify-content-center\\\"\\r\\n      style=\\\"width: 98%;\\\"\\r\\n    >\\r\\n      <ion-label>There is no task(s) for anyone today .</ion-label>\\r\\n    </ion-chip>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header class=\\\"ion-no-margin\\\">\\n  <ion-toolbar>\\n    <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"0\\\" #checkTeam value=\\\"calendar\\\">\\n      <ion-segment-button size=\\\"small\\\" value=\\\"calendar\\\" layout=\\\"icon-start\\\">\\n        <ion-label position=\\\"float\\\">Today Tasks</ion-label>\\n        <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n      </ion-segment-button>\\n\\n      <ion-segment-button size=\\\"small\\\" value=\\\"team\\\" layout=\\\"icon-start\\\">\\n        <ion-label position=\\\"float\\\">Team Progress</ion-label>\\n        <ion-icon name=\\\"people-outline\\\"></ion-icon>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div\\n    class=\\\"ion-no-margin ; no-padding\\\"\\n    style=\\\"\\n      height: 0px;\\n      text-align: center !important;\\n      position: relative;\\n      z-index: 1;\\n    \\\"\\n  >\\n    <ion-refresher\\n      #refTeamProgress\\n      id=\\\"refTeamProgress\\\"\\n      style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\n      slot=\\\"fixed\\\"\\n      (ionRefresh)=\\\"doRefresh($event)\\\"\\n    >\\n      <ion-refresher-content color=\\\"primary\\\" refreshingSpinner=\\\"crescent\\\">\\n      </ion-refresher-content>\\n    </ion-refresher>\\n  </div>\\n  <ion-grid *ngIf=' checkTeam.value==\\\"team\\\" '>\\n    <ion-row class=\\\"ion-no-margin ; no-padding\\\">\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <!-- <div\\n          style=\\\"\\n            height: 0px;\\n            text-align: center !important;\\n            position: relative;\\n            z-index: 1;\\n          \\\"\\n          *ngIf=\\\"isLoaded\\\"\\n        >\\n          <ion-spinner\\n            style=\\\"position: relative; z-index: 2; top: 0px;\\\"\\n            name=\\\"crescent\\\"\\n          ></ion-spinner>\\n        </div> -->\\n\\n        <ion-list\\n          *ngFor=\\\"let item of userProgress; let i = index\\\"\\n          [(ngModel)]=\\\"userProgress\\\"\\n          ngDefaultControl\\n          name=\\\"lstTaskProgress\\\"\\n        >\\n          <ion-row style=\\\"justify-items: left;\\\">\\n            <ion-col>\\n              <ion-item [routerLink]=\\\"['./', item.userId]\\\" detail=\\\"true\\\">\\n                <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                  <img src=\\\"../assets/images/avatar.svg\\\" />\\n                </ion-avatar>\\n                <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\n                  <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <b>{{ item.userName }}</b></ion-label\\n                  >\\n\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    Total Tasks <b>({{ item.totaltasks }}) </b>\\n                  </ion-label>\\n                  <ion-label mode=\\\"ios\\\" position=\\\"stacked\\\">\\n                    <ion-badge\\n                      style=\\\"margin: 0px;\\\"\\n                      [color]=\\\"\\n                        item.avgProgress > 99\\n                          ? 'success'\\n                          : item.avgProgress < 50\\n                          ? 'warning'\\n                          : 'primary'\\n                      \\\"\\n                    >\\n                      {{ item.avgProgress }}%\\n                    </ion-badge>\\n                  </ion-label>\\n                </ion-label>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"auto\\\">\\n              <ion-icon\\n                [routerLink]=\\\"['/tasktracker','chat',user? user.email:'',user? user.userId:'']\\\"\\n                color=\\\"primary\\\"\\n                name=\\\"chatbox-ellipses-outline\\\"\\n                style=\\\"\\n                  flex: left;\\n                  margin-top: 10px;\\n                  margin-left: 5px;\\n                  margin-right: 5px;\\n                  width: 20px;\\n                  height: 20px;\\n                \\\"\\n                class=\\\"ion-text-start\\\"\\n              ></ion-icon>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <app-today-tasks *ngIf='checkTeam.value ==\\\"calendar\\\"'></app-today-tasks>\\n</ion-content>\\n\";","export default \"<ion-content>\\n  <ion-grid no-padding ion-no-margin>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-buttons slot=\\\"start\\\">\\n                <ion-back-button\\n                  text=\\\"\\\"\\n                  defaultHref=\\\"tasktracker/team-progress\\\"\\n               \\n                ></ion-back-button>\\n              </ion-buttons>\\n\\n              <ion-label slot=\\\"\\\" color=\\\"primary\\\">\\n                <b> {{user.userName}}</b>\\n              </ion-label>\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                <img src=\\\"../assets/images/avatar.svg\\\" />\\n              </ion-avatar>\\n            </ion-item>\\n          </ion-col> </ion-row\\n        ><ion-row>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"primary\\\">\\n              <ion-label> Tasks <b>({{userProgress.length}}) </b></ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"warning\\\">\\n              <ion-label>\\n                In-Progress <b>({{getTotalInProgress()}}) </b>\\n              </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\">\\n            <ion-chip outline color=\\\"success\\\">\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-list>\\n          <ion-row\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\n            style=\\\"justify-items: left;\\\"\\n          >\\n            <ion-col>\\n              <ion-item       [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\n              detail=\\\"true\\\">\\n                <ion-label\\n                  class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n                >\\n                  <h3><b> {{i+1}}- </b>{{ item.task }}</h3>\\n\\n                  <ion-note size=\\\"samll\\\" slot=\\\"start\\\" class=\\\"default\\\" color=\\\"secondary\\\">\\n                    <i style=\\\"font-size: smaller;\\\"> {{item.taskdate|date}}</i>\\n                  </ion-note>\\n                </ion-label>\\n\\n                <ion-badge\\n                  [color]=\\\"\\n                      item.progress > 0.99\\n                        ? 'success'\\n                        : item.progress < 0.50\\n                        ? 'warning'\\n                        : 'primary'\\n                    \\\"\\n                >\\n                  {{ item.progress|percent }}\\n                </ion-badge>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BZG1pbi9Xb3JrL0xUSS9UYXNrVHJhY2tlci9zcmMvYXBwL0NvbXBvbmVudHMvdG9kYXktdGFza3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL0NvbXBvbmVudHMvdG9kYXktdGFza3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvdG9kYXktdGFza3MvdXNlcnMtcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { Task } from \"src/app/Models/task\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { User } from \"src/app/Models/user\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { AuthService } from 'src/app/Services/authService.service';\n\n@Component({\n  selector: \"app-today-tasks\",\n  templateUrl: \"./today-tasks.component.html\",\n  styleUrls: [\"./users-progress.component.scss\"],\n})\nexport class TodayTasksComponent implements OnInit, AfterViewInit {\n  userProgress = new Array<any>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  user: User = new User();\n  @ViewChild(\"divMsg\") divMsg: ElementRef;\n  nodata: boolean = false;\n  isLoaded: boolean = false;\n  constructor(private repServ: ReportService, private usrServ: UsersService, private auth:AuthService) {\n    //Get All Users\n    this.getUsersTodayTasks();\n    this.nodata = false;\n  }\n  ngAfterViewInit(): void {}\n\n  ngOnInit() {\n    this.user = this.auth.getLoggedUser();\n    // this.doRefresh();\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n    // this.userProgress = this.getUsersTodayTasks();\n  }\n\n  ionViewWillEnter() {}\n\n  getUsersTodayTasks() {\n    //  if (!this.isLoaded) {\n    this.repServ.getTasksToday().then((data) => {\n      this.users = this.usrServ.usersList;\n      this.tasks = data;\n      let userProgAr = new Array<any>();\n      console.log(\"ionViewWillEnter this.tasks\", this.tasks);\n      for (let t of this.tasks) {\n        let obj: any = {\n          id: t.id,\n          task: t.task,\n          taskdate: t.taskdate,\n          userid: t.userid,\n          userName: this.users.find((u) => u.userId + \"\" == t.userid).userName,\n          progress: this.parsPercentage(t.progress),\n        };\n        console.log(\"   userProgAr.push(obj);\", obj);\n        userProgAr.push(obj);\n      }\n      console.log(\"getUsersTodayTasks\", userProgAr);\n      this.userProgress = userProgAr;\n      this.userProgress.length < 1\n        ? (this.divMsg.nativeElement.style.display = \"block\")\n        : \"none\";\n    });\n\n    // }\n  }\n\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n\n  async doRefresh(e) {\n    console.log(\"UsersProgressComponent.doRefresh started\");\n    await new Promise(() => {\n      this.isLoaded = true;\n      setTimeout(() => {\n        this.getUsersTodayTasks();\n        e.target.complete();\n        // this.ionViewWillEnter();\n        this.isLoaded = false;\n      }, 1000);\n    }).catch((error) => error);\n  }\n}\n","export class UserProgress {\n  // taskId: any;\n  // taskName: string;\n  userId: any;\n  userName: any;\n  avgProgress: any;\n  totaltasks: any;\n  totalInProgress: any;\n  totalInCompeletd: any;\n  constructor(\n    userid?,\n    username?,\n    avgProgress?,\n    totaltasks?,\n    totalInProgress?,\n    totalInCompeletd?\n  ) {\n    this.userId = userid;\n    this.userName = username;\n    this.avgProgress = avgProgress;\n    this.totaltasks = totaltasks;\n    this.totalInProgress = totalInProgress;\n    this.totalInCompeletd = totalInCompeletd;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { TeamProgressPage } from \"./team-progress.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: TeamProgressPage,\n  },\n  {\n    path: \":userid\",\n    loadChildren: () =>\n      import(\"../user-tasks/user-tasks.module\").then((m) => m.UserTasksModule),\n    // loadChildren: \"../user-tasks/user-tasks.module#UserTasksModule\",\n    // loadChildren:\"../Components/user-tasks/user-tasks.module#UserTasksModule\",\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamProgressPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamProgressPageRoutingModule } from './team-progress-routing.module';\n\nimport { TeamProgressPage } from './team-progress.page';\n \nimport { UserTasksPage } from '../user-tasks/user-tasks.page';\nimport { TodayTasksComponent } from 'src/app/Components/today-tasks/users-progress.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TeamProgressPageRoutingModule\n  ],\n  declarations: [TeamProgressPage , UserTasksPage , TodayTasksComponent]\n})\nexport class TeamProgressPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RlYW0tcHJvZ3Jlc3MvdGVhbS1wcm9ncmVzcy5wYWdlLnNjc3MifQ== */\";","import { Component, HostListener } from \"@angular/core\";\nimport { UserProgress } from \"src/app/Models/user-progress\";\nimport { Task } from \"src/app/Models/task\";\nimport { User } from \"src/app/Models/user\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ReportService } from \"src/app/Services/report.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { TodayTasksComponent } from \"src/app/Components/today-tasks/users-progress.component\";\nimport { AuthService } from \"src/app/Services/authService.service\";\n@Component({\n  selector: \"app-team-progress\",\n  templateUrl: \"team-progress.page.html\",\n  styleUrls: [\"team-progress.page.scss\"],\n})\nexport class TeamProgressPage {\n  userProgress = new Array<UserProgress>();\n  tasks: Task[] = new Array();\n  users: User[] = new Array();\n  user: User = new User();\n  constructor(\n    private datasev: TaskProgressService,\n    private repServ: ReportService,\n    public usrServ: UsersService,\n    private taskServ: TasksService,\n    public auth: AuthService\n  ) {\n    this.getUserProgress();\n  }\n  isLoaded: boolean = false;\n  ngOnInit() {\n    this.user = this.auth.getLoggedUser();\n    //  this.isLoaded = true;\n    //  this.getTotalUserTasks();\n  }\n  // ionViewWillLeave() {}\n  // ionViewDidLeave() {}\n  // ionViewDidEnter() {}\n\n  ionViewWillEnter() {\n    this.getUserProgress();\n  }\n\n  getUserProgress() {\n    //  if (!this.isLoaded) {\n\n    //Get All Users\n    this.users = this.usrServ.usersList;\n    let userProgAr = new Array<UserProgress>();\n    let tasksGroupByUsr = new Array<Array<Task>>();\n    this.repServ.getTasks().subscribe((data) => {\n      console.log(\"ionViewWillEnter this.tasks\", data);\n\n      tasksGroupByUsr = data.reduce((r, a) => {\n        r[a.userid] = r[a.userid] || [];\n        r[a.userid].push(a);\n        return r;\n      }, Object.create(null));\n\n      new Promise((resolve) => {\n        resolve(tasksGroupByUsr);\n      })\n        .then((res) => {\n          console.log(\"Array<Array<Task>> \", res);\n\n          return Array.of(res);\n        })\n        .then((res) => {\n          let taskid = \"\";\n          // Iterate over the grouped Array by  group by value :\n          for (let id of Object.keys(res[0])) {\n            let up: UserProgress = new UserProgress();\n            let totaltasks: number = 0;\n            let totalInProgress: number = 0;\n            let totalInCompeletd: number = 0;\n            let avgProgress: number = 0;\n            let taskid = \"\";\n            up.userId = id;\n            up.userName = this.users.find((x) => x.userId == id).userName;\n            let val = res[0][id];\n            console.log(\"userid, val\", id, val);\n            //Get the Task Object from the arry\n            for (let tid of Object.keys(val)) {\n              totaltasks++;\n              let percentage = 0;\n              percentage = this.parsPercentage(val[tid].progress);\n              let val2 = val[tid].task;\n              if (percentage < 100) {\n                console.log(\n                  \"if (percentage < 100) \",\n                  percentage,\n                  percentage < 100\n                );\n\n                avgProgress = percentage + avgProgress;\n                taskid = val[tid].id;\n                totalInProgress++;\n                console.log(\" totalInProgress++\", totalInProgress, id);\n              } else if (percentage >= 100) ++totalInCompeletd;\n\n              console.log(\"tid, val2\", tid, val2);\n            }\n            up.totaltasks = totaltasks;\n            up.totalInCompeletd = totalInCompeletd;\n            up.totalInProgress = totalInProgress;\n            if (avgProgress > 0 && totalInProgress > 0) {\n              let avg = avgProgress / totalInProgress;\n              up.avgProgress = Number(avg.toFixed(2)); //round the number\n            }\n\n            userProgAr.push(up);\n          }\n          this.userProgress = userProgAr;\n        });\n\n      //Group the Tasks By User ID\n    });\n    console.log(\"userProgAr\", userProgAr);\n    this.isLoaded = false;\n    //  return userProgAr;\n    // }\n  }\n\n  parsPercentage(val): number {\n    console.log(\"val\", val);\n    let progress = (parseFloat(val) > 1\n      ? parseFloat(val)\n      : parseFloat(val) * 100\n    ).toFixed(0);\n    console.log(\"progress\", progress);\n\n    return Number(\n      (parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(0)\n    );\n  }\n\n  async doRefresh(e) {\n    await new Promise(() => {\n      this.isLoaded = true;\n      setTimeout(() => {\n        this.ionViewWillEnter();\n        e.target.complete();\n        this.isLoaded = false;\n      }, 1500);\n    }).catch((error) => error);\n  }\n}\n","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BZG1pbi9Xb3JrL0xUSS9UYXNrVHJhY2tlci9zcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVFLHVFQUFBOztBQUNBO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3VzZXItdGFza3MvdXNlci10YXNrcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXHJcbiAgLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufVxuXG4vKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xuLm15LWN1c3RvbS1jbGFzcyAucG9wb3Zlci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/Models/user\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Task } from \"src/app/Models/task\";\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: \"app-user-tasks\",\n  templateUrl: \"user-tasks.page.html\",\n  styleUrls: [\"user-tasks.page.scss\"],\n})\nexport class UserTasksPage implements OnInit {\n  userProgress: Array<any> = [];\n  tasks: Task[] = new Array();\n  user:User = Object.create(User);\n  //  listingdata:Array<any> = [];\n  constructor(\n    private datasev: TaskProgressService,\n    private activeroute: ActivatedRoute,\n    private aut: AuthService,\n    private usrServ: UsersService,\n    private taskServ: TasksService,\n    public navCtr:NavController,\n  ) {}\n\n  private getUserTasks() {\n    let userid: number;\n    this.activeroute.paramMap.subscribe((param) => {\n      if (!param.has(\"userid\")) {\n        //console.log(\"return\");\n        return;\n      }\n      userid = Number.parseInt(param.get(\"userid\"));\n      this.user.userId = userid;\n      // console.log(userid);\n\n      this.taskServ.fetchMyTasks(\"\" + userid).subscribe((tasks) => {\n        this.userProgress = tasks.slice();\n      });\n    });\n  }\n  back()\n  {\n    this.navCtr.back();\n  }\n  ngOnInit() {}\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  \n    this.getUserTasks();  this.user = this.usrServ.getUserById(this.user.userId)\n    //console.log(this.userProgress);\n  }\n  ionViewDidLoad() {\n    // console.log(\"this.ionViewDidLoad\");\n  }\n  getTotalInProgress(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\n  }\n  getTotalCompleted(): any {\n    return this.userProgress.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n}\n"]}