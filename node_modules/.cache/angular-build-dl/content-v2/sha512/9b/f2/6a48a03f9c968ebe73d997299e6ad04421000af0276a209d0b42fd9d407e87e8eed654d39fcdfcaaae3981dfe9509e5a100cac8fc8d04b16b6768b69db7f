{"version":3,"sources":["webpack:///src/app/Pages/task-subview/task-subview.page.html","webpack:///src/app/Pages/task-subview/task-subview-routing.module.ts","webpack:///src/app/Pages/task-subview/task-subview.module.ts","webpack:///src/app/Pages/task-subview/task-subview.page.scss","webpack:///src/app/Pages/task-subview/task-subview.page.ts"],"names":["routes","path","component","TaskSubviewPageRoutingModule","imports","forChild","exports","TaskSubviewPageModule","declarations","TaskSubviewPage","route","navCtrl","tasksService","alCtr","navCtr","loadedTask","Object","create","paramMap","subscribe","has","navigateBack","taskSub","getTask","get","task","console","log","progress","parsPercentage","id","updateTask","back","val","Number","parseFloat","toFixed","fetchMyTasks","loginedUser","userId","unsubscribe","selector","template"],"mappings":"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","file":"task-subview-task-subview-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button\\n      (click)=\\\"back()\\\"\\n        \\n      > <ion-icon slot=\\\"icon-only\\\" name=\\\"return-down-back-outline\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n    <ion-title size=\\\"small\\\" color=\\\"primary\\\">\\n      <ion-label class=\\\"ion-text-start ion-text-capitalize\\\">\\n        <ion-label color=\\\"primary\\\" mode=\\\"ios\\\" position=\\\"stacked\\\">\\n          <b>Task View</b></ion-label\\n        >\\n      </ion-label></ion-title\\n    >\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- Card view  -->\\n<ion-content fullscreen>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col\\n        size-xs=\\\"12\\\"\\n        size-xsm=\\\"12\\\"\\n        size-xs=\\\"12\\\"\\n        size-med=\\\"6\\\"\\n        size-lg=\\\"6\\\"\\n        offset-med=\\\"3\\\"\\n        offset-lg=\\\"3\\\"\\n      >\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n          <ion-item>\\n            <ion-label\\n              color=\\\"primary\\\"\\n              class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n            >\\n              <h3><b>{{ loadedTask.task }} </b></h3>\\n\\n              <ion-text size=\\\"samll\\\" slot=\\\"start\\\"   color=\\\"secondary\\\">\\n                <i style=\\\"font-size: smaller;\\\"> {{loadedTask.taskdate|date}}</i>\\n              </ion-text>\\n              <ion-badge\\n                style=\\\"float: right;\\\"\\n                [color]=\\\"\\n                loadedTask.progress > 99\\n                      ? 'success'\\n                      : loadedTask.progress < 50\\n                      ? 'warning'\\n                      : 'primary'\\n                  \\\"\\n              >\\n                {{ loadedTask.progress}}%\\n              </ion-badge>\\n              <ion-label\\n                size=\\\"samll\\\"\\n                class=\\\"ion-text-start ion-text-capitalize\\\"\\n              >\\n                \\n                <ion-text color=\\\"medium\\\"size=\\\"samll\\\" class=\\\"ion-text-start  ion-text-wrap\\\">\\n                  {{ loadedTask.details}}\\n                </ion-text>\\n              </ion-label>\\n            </ion-label>\\n          </ion-item>\\n        </ion-list>\\n\\n        <!--     \\n        <div class=\\\"ion-padding\\\">\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\"\\n            >Save</ion-button\\n          >\\n        </div> -->\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskSubviewPage } from './task-subview.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskSubviewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskSubviewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskSubviewPageRoutingModule } from './task-subview-routing.module';\n\nimport { TaskSubviewPage } from './task-subview.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskSubviewPageRoutingModule\n  ],\n  declarations: [TaskSubviewPage]\n})\nexport class TaskSubviewPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3Rhc2stc3Vidmlldy90YXNrLXN1YnZpZXcucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Task } from \"../../Models/task\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NavController, AlertController } from \"@ionic/angular\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-task-subview\",\n  templateUrl: \"./task-subview.page.html\",\n  styleUrls: [\"./task-subview.page.scss\"],\n})\nexport class TaskSubviewPage implements OnInit {\n  loadedTask = Object.create(Task); // Variable need to be initialized!!!\n  taskSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private navCtrl: NavController,\n    private tasksService: TasksService,\n    private alCtr: AlertController,\n    public navCtr:NavController,\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap) => {\n      if (!paramMap.has(\"taskid\")) {\n        this.navCtrl.navigateBack(\"/tasktracker/teamprogress\");\n        return;\n      }\n\n      this.taskSub = this.tasksService\n        .getTask(paramMap.get(\"taskid\"))\n        .subscribe((task) => {\n          console.log(\"Subscripting: \", task);\n          this.loadedTask = task;\n          this.loadedTask.progress=this.parsPercentage(task.progress);\n          console.log(\"This.loadedTask.id = \", this.loadedTask.id);\n        });\n    });\n  }\n\n  updateTask() {\n    console.log(\"The task is going to be updated with data: \", this.loadedTask);\n    this.tasksService.updateTask(this.loadedTask).subscribe();\n  }\n  back() {\n    this.navCtrl.back();\n  }\n  parsPercentage(val): number {\n    // let progress = (parseFloat(val) > 1\n    //   ? parseFloat(val)\n    //   : parseFloat(val) * 100\n    // ).toFixed(0);\n\n    return Number(\n      (parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100).toFixed(0)\n    );\n  }\n\n  onViewWillEnter() {\n    this.tasksService.fetchMyTasks(this.tasksService.loginedUser.userId);\n  }\n\n  onViewWillLeave() {\n    this.tasksService.updateTask(this.loadedTask);\n  }\n\n  ngOnDestroy() {\n    if (this.taskSub) {\n      this.taskSub.unsubscribe();\n    }\n  }\n}\n"]}