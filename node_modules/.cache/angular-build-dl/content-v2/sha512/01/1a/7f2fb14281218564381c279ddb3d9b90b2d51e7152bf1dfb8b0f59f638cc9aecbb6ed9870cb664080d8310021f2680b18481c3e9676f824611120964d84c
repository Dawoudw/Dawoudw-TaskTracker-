{"version":3,"sources":["./src/app/Pages/task-detial/task-detial.page.html","./src/app/Pages/task-detial/task-detial-routing.module.ts","./src/app/Pages/task-detial/task-detial.module.ts","./src/app/Pages/task-detial/task-detial.page.scss","./src/app/Pages/task-detial/task-detial.page.ts"],"names":[],"mappings":"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","file":"task-detial-task-detial-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/tabs/tab3\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title size=\\\"small\\\" color=\\\"primary\\\"><p>My Tasks</p> </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"deleteTask()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n \\r\\n<!-- Card view  -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-med=\\\"6\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\r\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Task Title <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input\\r\\n              style=\\\"background-color: transparent;\\\"\\r\\n              required\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.task\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Progress % <ion-text color=\\\"danger\\\">*</ion-text></ion-label\\r\\n            >\\r\\n            <ion-input\\r\\n              style=\\\"background-color: transparent;\\\"\\r\\n              required\\r\\n              type=\\\"number\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.progress\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\"\\r\\n              >Description</ion-label\\r\\n            >\\r\\n            <ion-textarea\\r\\n              rows=\\\"20\\\"\\r\\n              cols=\\\"20\\\"\\r\\n              style=\\\"background-color: transparent;\\\"\\r\\n              [(ngModel)]=\\\"loadedTask.details\\\"\\r\\n              (focusout)=\\\"updateTask()\\\"\\r\\n            ></ion-textarea>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n        <!--     \\r\\n        <div class=\\\"ion-padding\\\">\\r\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\"\\r\\n            >Save</ion-button\\r\\n          >\\r\\n        </div> -->\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskDetialPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskDetialPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaskDetialPageRoutingModule } from './task-detial-routing.module';\r\n\r\nimport { TaskDetialPage } from './task-detial.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TaskDetialPageRoutingModule\r\n  ],\r\n  declarations: [TaskDetialPage]\r\n})\r\nexport class TaskDetialPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3Rhc2stZGV0aWFsL3Rhc2stZGV0aWFsLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Task } from '../../Models/task';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { TasksService } from 'src/app/Services/tasks.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-detial',\r\n  templateUrl: './task-detial.page.html',\r\n  styleUrls: ['./task-detial.page.scss'],\r\n})\r\nexport class TaskDetialPage implements OnInit {\r\n\r\n  loadedTask = Object.create(Task); // Variable need to be initialized!!!\r\n  taskSub: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private tasksService: TasksService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(paramMap => {\r\n      if(!paramMap.has('taskId')){\r\n        this.navCtrl.navigateBack('/tasktracker/mytasks');\r\n        return;\r\n      }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n      // *** This code is loading data locally. ***\r\n      // *** Its purpose is for testing the UI  ***\r\n      // ********************************************************************\r\n      // this.tasksService.myTasks.subscribe(tasks => {\r\n      //   this.loadedTask = tasks.find(t => t.id === paramMap.get('taskId'));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n      // })\r\n      // ********************************************************************\r\n\r\n      // TODO: This code need to be active using API\r\n      this.taskSub = this.tasksService.getTask(paramMap.get('taskId')).subscribe(task =>{\r\n        console.log(\"Subscripting: \", task);\r\n        this.loadedTask = task;\r\n      });\r\n\r\n\r\n      // Old code\r\n      // this.loadedTask = this.tasksService.getMyTasks(paramMap.get('taskId'));\r\n    })\r\n  }\r\n\r\n  updateTask(){\r\n    console.log(\"The task is going to be updated with data: \", this.loadedTask);\r\n    this.tasksService.updateTask(this.loadedTask).subscribe();\r\n  }\r\n\r\n  deleteTask(){\r\n    console.log(\"Trying to delete task with ID: \", this.loadedTask.id);\r\n    this.tasksService.deleteTask(this.loadedTask.id).subscribe();\r\n    this.navCtrl.navigateBack(\"/tasktracker/mytasks\");\r\n    return;\r\n  }\r\n\r\n  // Update MyTask list from API\r\n  onViewWillEnter(){\r\n    this.tasksService.fetchMyTasks(this.tasksService.loginedUser.userId); // TODO: This should be the actual current login user\r\n  }\r\n\r\n  onViewWillLeave(){\r\n    this.tasksService.updateTask(this.loadedTask);\r\n  }\r\n \r\n\r\n  ngOnDestroy(){\r\n    if(this.taskSub){\r\n      this.taskSub.unsubscribe();\r\n    }\r\n  }\r\n}"],"sourceRoot":"webpack:///"}