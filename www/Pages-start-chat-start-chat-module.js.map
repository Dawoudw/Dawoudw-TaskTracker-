{"version":3,"sources":["./src/app/Pages/start-chat/start-chat.page.html","./src/app/Pages/start-chat/start-chat-routing.module.ts","./src/app/Pages/start-chat/start-chat.module.ts","./src/app/Pages/start-chat/start-chat.page.scss","./src/app/Pages/start-chat/start-chat.page.ts"],"names":[],"mappings":"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","file":"Pages-start-chat-start-chat-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/group-chat\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Creating a new Group</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item-divider>\\n    <ion-label>\\n      Signed in as: {{ currentUserEmail }}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input placeholder=\\\"Please enter a name for this new group\\\" [(ngModel)]=\\\"title\\\"></ion-input>\\n  </ion-item>\\n<br>\\n\\n  <!-- shows users added to this group -->\\n  <ion-item-divider *ngIf=\\\"users.length!=0\\\">\\n    <!-- <ion-label *ngIf=\\\"(users | async)?.length!=0\\\"> -->\\n    <ion-label>\\n      Users added to this group\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item *ngFor=\\\"let usr of users\\\">\\n    <ion-label>\\n      {{ usr.email }}\\n      <p>{{ usr.nickname }}</p>\\n    </ion-label>\\n  </ion-item>\\n\\n<br><br>\\n  <ion-item-divider>\\n    <ion-label>\\n      Contacts (All Available Users)\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item button *ngFor=\\\"let item of listOfUsers;\\\">\\n    <ion-label>\\n      {{ item.payload.doc.data().email }}\\n      <p>{{ item.payload.doc.data().userName }}</p>\\n    </ion-label>\\n    <ion-button icon-only (click)=\\\"addUser(item.payload.doc.data().email)\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-button>\\n    <!-- Keep either a button or a routerlink--both togather will not work -->\\n    <!-- <ion-button icon-only (click)=\\\"oneOnOneChat(item.payload.doc.data().email,item.payload.doc.data().nickname)\\\">\\n      <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n    </ion-button> -->\\n    <!-- <ion-button icon-only>\\n      <ion-icon name=\\\"call-outline\\\"></ion-icon>\\n    </ion-button> -->\\n  </ion-item>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button color=\\\"light\\\" expand=\\\"full\\\" fill=\\\"clear\\\" [disabled]=\\\"title == '' || users.length == 0\\\" \\n    (click)=\\\"createGroup()\\\">Start\\n      Group</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StartChatPage } from './start-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StartChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StartChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StartChatPageRoutingModule } from './start-chat-routing.module';\n\nimport { StartChatPage } from './start-chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StartChatPageRoutingModule\n  ],\n  declarations: [StartChatPage]\n})\nexport class StartChatPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3N0YXJ0LWNoYXQvc3RhcnQtY2hhdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/app/Services/chat.service';\nimport { Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-start-chat',\n  templateUrl: './start-chat.page.html',\n  styleUrls: ['./start-chat.page.scss'],\n})\nexport class StartChatPage implements OnInit {\n  constructor(\n    public chatService: ChatService,\n    private router: Router\n  ) { }\n\n  listOfUsers = [];\n  currentUserEmail = this.chatService.currentUser.email;\n  users= [];\n  participant = '';\n  participant1 = '';\n  title = '';\n  \n\n  ngOnInit() {\n    //this gets a list of all users\n    this.listOfUsers = [];\n    this.chatService.getAllUsers().subscribe(result => {\n      result.forEach(r => {\n        if(r.payload.doc.data()['email'] != this.chatService.currentUser.email) {\n          this.listOfUsers.push(r);\n        }\n      });   \n    });\n  }\n\n  addUser(participant1) {\n    // console.log(\"when calling addUser function, users array =\");\n    // console.log(this.users);\n    this.participant = participant1;\n    let obs = this.chatService.findUser(this.participant);\n    forkJoin(obs).subscribe(res => {\n      for (let data of res) {\n        if (data.length > 0) {\n          if(this.users.indexOf(data[0]) > -1) {\n          } else {\n            console.log(\"data[0]\");\n            console.log(data[0]);\n            this.users.push(data[0]);\n          }\n        }\n      }\n      this.participant = '';\n    });\n  }\n\n  createGroup() {\n    console.log(\"this.title\");\n    console.log(this.title);\n    console.log(\"this.users\");\n    console.log(this.users);\n    console.log(\"users array length: \");\n    console.log(this.users.length);\n    this.chatService.createGroup(this.title, this.users).then(res => {\n      console.log(\"group created\");\n      this.router.navigateByUrl('/tasktracker/group-chat');\n    });\n    this.users = [];\n  }\n\n\n\n\n\n\n\n\n\n\n\n}\n"],"sourceRoot":"webpack:///"}