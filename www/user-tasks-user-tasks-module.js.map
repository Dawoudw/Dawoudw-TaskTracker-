{"version":3,"sources":["./src/app/Pages/user-tasks/user-tasks.page.html","./src/app/Pages/user-tasks/user-tasks-routing.module.ts","./src/app/Pages/user-tasks/user-tasks.module.ts","./src/app/Pages/user-tasks/user-tasks.page.scss","./src/app/Pages/user-tasks/user-tasks.page.ts"],"names":[],"mappings":"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","file":"user-tasks-user-tasks-module.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid no-padding ion-no-margin>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" offset-med=\\\"3\\\" offset-lg=\\\"3\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-buttons slot=\\\"start\\\">\\n                <ion-back-button\\n                  text=\\\"\\\"\\n                  defaultHref=\\\"tasktracker/team-progress\\\"\\n                ></ion-back-button>\\n              </ion-buttons>\\n\\n              <ion-label slot=\\\"\\\" color=\\\"primary\\\">\\n                <b> {{user.userName}}</b>\\n              </ion-label>\\n              <ion-avatar slot=\\\"start\\\" name=\\\"avatar\\\">\\n                <!-- <img src=\\\"../assets/images/avatar.svg\\\" /> -->\\n                <text-avatar  text ={{user.userName}}></text-avatar>\\n              </ion-avatar>\\n            </ion-item>\\n          </ion-col> </ion-row\\n        ><ion-row>\\n          <ion-col size=\\\"auto\\\" (click)=\\\"getUserTasks()\\\">\\n            <ion-chip outline color=\\\"primary\\\">\\n              <ion-label>\\n                Tasks <b>({{userProgressList.length}}) </b></ion-label\\n              >\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\" (click)=\\\"getInprogress()\\\">\\n            <ion-chip outline color=\\\"warning\\\">\\n              <ion-label>\\n                In-Progress <b>({{getTotalInProgress()}}) </b>\\n              </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col size=\\\"auto\\\" (click)=\\\"getCompleted()\\\">\\n            <ion-chip outline color=\\\"success\\\">\\n              <ion-label> Done <b>({{getTotalCompleted()}}) </b> </ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-list>\\n          <ion-row\\n            *ngFor=\\\"let item of userProgress; let i = index\\\"\\n            style=\\\"justify-items: left\\\"\\n          >\\n            <ion-col>\\n              <ion-item\\n                [routerLink]=\\\"['/', 'tasktracker', 'taskview', item.id]\\\"\\n                detail=\\\"true\\\"\\n              >\\n                <ion-label\\n                  class=\\\"ion-text-start ion-text-capitalize ion-text-wrap\\\"\\n                >\\n                  <h3><b> {{i+1}}- </b>{{ item.task }}</h3>\\n\\n                  <ion-note\\n                    size=\\\"samll\\\"\\n                    slot=\\\"start\\\"\\n                    class=\\\"default\\\"\\n                    color=\\\"secondary\\\"\\n                  >\\n                    <i style=\\\"font-size: smaller\\\"> {{item.taskdate|date}}</i>\\n                  </ion-note>\\n                </ion-label>\\n\\n                <ion-badge\\n                  [color]=\\\"\\n                      item.progress > 0.99\\n                        ? 'success'\\n                        : item.progress < 0.50\\n                        ? 'warning'\\n                        : 'primary'\\n                    \\\"\\n                >\\n                  {{ item.progress|percent }}\\n                </ion-badge>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserTasksPage} from './user-tasks.page';\r\n \r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserTasksPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserTasksRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n \r\n import {UserTasksRoutingModule} from '../../Pages/user-tasks/user-tasks-routing.module'\r\n \r\nimport { UserTasksPage } from '../../Pages/user-tasks/user-tasks.page';\r\nimport { TextAvatarModule  } from '../../directives/text-avatar.directive.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    UserTasksRoutingModule,\r\n    TextAvatarModule \r\n \r\n    \r\n  ],\r\n  declarations: [UserTasksPage]\r\n})\r\nexport class UserTasksModule  {}\r\n","export default \".popover-content {\\n  background: #222;\\n}\\n\\n/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n\\n.my-custom-class .popover-content {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWphc3JhbWFuaS9PdGhlci13ZWJkZXYvaW9uaWMvVGFzay1UcmFja2VyLURldjIwMjAwODMwL3NyYy9hcHAvUGFnZXMvdXNlci10YXNrcy91c2VyLXRhc2tzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy91c2VyLXRhc2tzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUUsdUVBQUE7O0FBQ0E7RUFDRSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvUGFnZXMvdXNlci10YXNrcy91c2VyLXRhc2tzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3BvdmVyLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZDogIzIyMjtcclxuICB9XHJcbiAgXHJcbiAgLyogV29ya3MgLSBwYXNzIFwibXktY3VzdG9tLWNsYXNzXCIgaW4gY3NzQ2xhc3MgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHkgKi9cclxuICAubXktY3VzdG9tLWNsYXNzIC5wb3BvdmVyLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZDogIzIyMjtcclxuICB9IiwiLnBvcG92ZXItY29udGVudCB7XG4gIGJhY2tncm91bmQ6ICMyMjI7XG59XG5cbi8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXG4ubXktY3VzdG9tLWNsYXNzIC5wb3BvdmVyLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xufSJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { TaskProgressService } from \"src/app/Services/task-progress-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { User } from \"src/app/Models/user\";\nimport { AuthService } from \"src/app/Services/authService.service\";\nimport { UsersService } from \"src/app/Services/users.service\";\nimport { TasksService } from \"src/app/Services/tasks.service\";\nimport { Task } from \"src/app/Models/task\";\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: \"app-user-tasks\",\n  templateUrl: \"user-tasks.page.html\",\n  styleUrls: [\"user-tasks.page.scss\"],\n})\nexport class UserTasksPage implements OnInit {\n  userProgress: Array<any> = [];\n  userProgressList: Array<any> = [];\n  tasks: Task[] = new Array();\n  user:User = Object.create(User);\n  //  listingdata:Array<any> = [];\n  constructor(\n    private datasev: TaskProgressService,\n    private activeroute: ActivatedRoute,\n    private aut: AuthService,\n    private usrServ: UsersService,\n    private taskServ: TasksService,\n    public navCtr:NavController,\n  ) {}\n\n  getUserTasks() {\n    let userid: number;\n    this.activeroute.paramMap.subscribe((param) => {\n      if (!param.has(\"userid\")) {\n        //console.log(\"return\");\n        return;\n      }\n      userid = Number.parseInt(param.get(\"userid\"));\n      this.user.userId = userid;\n      // console.log(userid);\n\n      this.taskServ.fetchMyTasks(\"\" + userid).subscribe((tasks) => {\n        this.userProgressList = tasks.slice();\n        this.userProgress= new Array();\n        this.userProgress = tasks.slice();\n      \n      });\n    });\n  }\n  back()\n  {\n    this.navCtr.back();\n  }\n  ngOnInit() {}\n  ionViewWillEnter() {\n    //  console.log(\"this.ionViewWillEnter\");\n  \n    this.getUserTasks();  this.user = this.usrServ.getUserById(this.user.userId)\n    //console.log(this.userProgress);\n  }\n  ionViewDidLoad() {\n    // console.log(\"this.ionViewDidLoad\");\n  }\n  getInprogress()\n  {\n    this.userProgress= new Array();\n    this.userProgress= this.userProgressList.filter((x) => this.parsPercentage(x.progress) < 100).slice();\n  }\n  getCompleted()\n  {\n  \n    this.userProgress= new Array();\n    this.userProgress= this.userProgressList.filter((x) => this.parsPercentage(x.progress) >= 100).slice(); \n     console.log(\"getCompleted\", this.userProgress);\n  }\n\n   \n  getTotalInProgress(): any {\n    return this.userProgressList.filter((x) => this.parsPercentage(x.progress) < 100).slice().length;\n  }\n  getTotalCompleted(): any {\n    return this.userProgressList.filter((x) => this.parsPercentage(x.progress)  >= 100).slice().length;\n  }\n  parsPercentage(val): number {\n    return parseFloat(val) > 1 ? parseFloat(val) : parseFloat(val) * 100;\n  }\n}\n"],"sourceRoot":"webpack:///"}